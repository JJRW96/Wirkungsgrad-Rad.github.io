---
title: "Wirkungsgrad- und Stoffwechselparameter"
format:
  html:
    resources: 
      - shinylive-sw.js

filters:
  - shinylive
  
execute:
  message: false
  echo: false
  warning: false
  error: false
  
bibliography: references.bib
lang: de
number-sections: false  
jupyter: false
engine: knitr

tbl-cap-location: bottom

nocite: |
  @Dickinson1929, @Henry1950, @Gaesser1975, @Seabury1977, @Suzuki1979, @Luhtanen1987, @Francescato1995, @Chavarren1999, @Beneke2002, @Millet2002, @Harnish2007, @Bell2009, @Bouillod2014, @Dunst2023a, @Zoladz2023a, @Carlsson2024
---
  
```{css}
#| echo: false
p {
  text-align: justify
}
caption, .figure-caption {
  text-align: left;
}
figure.quarto-float-tbl figcaption {
  text-align: left !important;
}

```

# Interaktive Analyse der physiologischen Energieumsätze und mechanischen Wirkungsgrade
Die folgende Shiny-App visualisiert die Zusammensetzung des physiologischen Energieumsatzes der ausgewählten Probanden in Form eines Balkendiagramms. Dabei werden die Komponenten des Gesamtenergieumsatzes  W~aerob~, W~BLC~ und W~PCr~ für jede der ausgewählten Belastungsintensitäten differenziert dargestellt. Die Auswahlfelder in der Seitenleiste ermöglichen eine gezielte Analyse der Daten nach verschiedenen Kombinationen von Intensität (leicht, moderat, schwer) und Bedingung (sitzend, stehend) sowie die Option, einzelne Probanden in die Analyse ein- oder auszuschließen. Für die gefilterten Daten werden die entsprechenden Mittelwerte in der interaktiven Tabelle unterhalb des Diagramms dargestellt.
  
```{shinylive-r}
#| standalone: true
#| viewerHeight: 1200
library(shiny)
library(dplyr)
library(tidyr)
library(plotly)
library(DT)
library(reactable)
library(htmltools)
library(shinylive)
library(dplyr)
library(DT)


Bedingungen_data_Wirkungsgrad <- data.frame(
  `Proband` = c( "1", "1", "1", "1", "1", "1", "6", "6", "6", "6", "6", "6", "10", "10", "10", "10", "10", "10", "13", "13", "13", "13", "13", "13", "15", "15", "15", "15", "15", "15", "19", "19", "19", "19", "19", "19", "20", "20", "20", "20", "20", "20", "22", "22", "22", "22", "22", "22", "23", "23", "23", "23", "23", "23" ),
  `Bedingung` = c( "stehen", "sitzen", "sitzen", "stehen", "sitzen", "stehen", "stehen", "sitzen", "stehen", "sitzen", "stehen", "sitzen", "stehen", "sitzen", "sitzen", "stehen", "stehen", "sitzen", "stehen", "sitzen", "stehen", "sitzen", "sitzen", "stehen", "sitzen", "stehen", "sitzen", "stehen", "stehen", "sitzen", "stehen", "sitzen", "sitzen", "stehen", "sitzen", "stehen", "sitzen", "stehen", "stehen", "sitzen", "stehen", "sitzen", "sitzen", "stehen", "stehen", "sitzen", "sitzen", "stehen", "stehen", "sitzen", "sitzen", "stehen", "stehen", "sitzen" ),
  `Intensität` = c( "leicht", "leicht", "moderat", "moderat", "schwer", "schwer", "leicht", "leicht", "moderat", "moderat", "schwer", "schwer", "leicht", "leicht", "moderat", "moderat", "schwer", "schwer", "leicht", "leicht", "moderat", "moderat", "schwer", "schwer", "leicht", "leicht", "moderat", "moderat", "schwer", "schwer", "leicht", "leicht", "moderat", "moderat", "schwer", "schwer", "leicht", "leicht", "moderat", "moderat", "schwer", "schwer", "leicht", "leicht", "moderat", "moderat", "schwer", "schwer", "leicht", "leicht", "moderat", "moderat", "schwer", "schwer" ),
  `Wirk_Muskulär` = c( 0.236759931308537, 0.246060440608401, 0.242278598743508, 0.229631619431488, 0.231738880422805, 0.239606281503452, 0.235519448379419, 0.240751242958341, 0.248138483274488, 0.238973954766177, 0.239905278154682, 0.242987590176426, 0.253197378567756, 0.268813524126113, 0.246034674712508, 0.243007190386035, 0.237707989694929, 0.239357891786449, 0.246622974378944, 0.259752672010051, 0.237157651346767, 0.256082449948023, 0.248047661517146, 0.237373974289561, 0.25603524395526, 0.230241128289079, 0.252398922767891, 0.237853768450825, 0.236244609842595, 0.256844301131177, 0.229409310695982, 0.250592406029218, 0.239641017649487, 0.225830203382915, 0.230325301880732, 0.22455381609002, 0.2675313748833, 0.254378184934767, 0.247600833815352, 0.250156276904196, 0.239017863265009, 0.241462546103667, 0.252453992795637, 0.255683248260526, 0.261633090232167, 0.257132037314701, 0.242104726162168, 0.256054300732916, 0.235970111612527, 0.269069913213186, 0.259743624458201, 0.236785575354483, 0.242749525282335, 0.259138280507211 ),
  `W*Aerob [kJ]` = c( 364.789166022847, 341.629555246705, 380.175743058369, 397.985468023398, 434.291677759482, 433.605222297912, 324.974079503018, 328.244436599334, 338.782659218172, 345.676143718918, 364.680735327353, 257.547695226202, 373.643424879889, 359.053884392895, 449.590938122183, 437.033618580678, 472.355442968317, 502.398965566933, 358.837718601139, 352.868283295468, 394.753364696823, 386.919677670582, 414.624059322391, 422.974893188083, 336.736950672026, 327.040591917684, 374.940893404024, 376.054742927363, 407.568603441812, 413.170309433097, 301.002193914676, 268.616569204091, 293.782454560316, 323.273033581013, 338.095668739063, 356.147551686419, 301.108945263692, 280.951141839367, 322.983175747043, 336.778695169108, 374.987772949063, 386.657728278586, 266.533422098459, 251.790208549518, 278.168675291213, 296.280182766526, 322.403130586883, 294.593727223427, 228.955584309471, 211.732892340367, 242.182720592561, 251.873990890611, 269.030850954527, 263.980675271676 ),
  `WPCR [kJ]` = c( 24.1291998261524, 31.245535169392, 29.1930235666251, 40.7334747429318, 32.1503897341314, 31.0960321619306, 35.5542282425247, 29.8757643229022, 32.3919515398355, 37.4564805468453, 39.181054527315, 28.0856376372225, 25.6241011760421, 42.2362045296838, 43.8865576245131, 46.7522391886717, 55.8553450423781, 41.2539914795555, 33.5030632789753, 39.5610791298099, 47.0313952643199, 43.4984491855838, 48.5683623835727, 47.4643724094369, 28.7114346014479, 27.082865453765, 33.5487723155105, 28.4952050444725, 46.7129326531457, 36.4259657605345, 26.4583220374129, 20.1814127976726, 29.9859705398912, 25.6937955351603, 32.5159707007087, 35.3146550491163, 26.041151647366, 18.4426421779503, 25.8050373268292, 31.1359690227005, 24.1696808725351, 31.9239901224492, 18.2312728474559, 19.2851143909574, 15.5481731391339, 15.0049470739965, 26.5074844823288, 32.024059076605, 19.4890043814307, 11.8721280138382, 16.7847021024629, 20.5569026538069, 25.1374379120318, 20.8232926492238 ),
  `WBLC [kJ]` = c( 10.3313513320441, 11.610940774608, 15.6579076836, 12.815395211808, 20.331190899936, 7.660330220592, 10.5760425135007, 10.736126499168, 15.178661602272, 19.019603410164, 24.804154325664, 17.399929153824, 6.87435813197033, 5.614025524128, 18.401528106864, 10.604270434464, 15.802442216064, 23.443754735016, 7.48717405349485, 10.04134646592, 9.858776530176, 9.539279142624, 15.335874602496, 13.647102696864, 6.43215059991284, 8.575715592864, 8.575715592864, 11.80365348456, 7.46761751064, 17.874103848048, 6.89074621609046, 7.49931368004, 11.08415043918, 12.9795813693, 17.01767335086, 18.00659383614, 6.65505918050507, 10.142774208, 11.10633775776, 8.31707485056, 17.90199647712, 13.23632034144, 6.60952692345146, 6.0856645248, 10.862911176768, 13.38846195456, 20.295691190208, 15.275017957248, 4.76575332014558, 4.1838943608, 7.30279742976, 10.459735902, 13.38846195456, 11.52472719384 ),
  `WTOT [kJ]` = c( 399.249717181043, 384.486031190706, 425.026674308594, 451.534337978137, 486.77325839355, 472.361584680434, 371.104350259043, 368.856327421404, 386.353272360279, 402.152227675927, 428.665944180332, 303.033262017248, 406.141884187901, 406.904114446707, 511.87902385356, 494.390128203813, 544.013230226759, 567.096711781505, 399.827955933609, 402.470708891198, 451.643536491319, 439.95740599879, 478.52829630846, 484.086368294384, 371.880535873387, 362.699172964313, 417.065381312399, 416.353601456395, 461.749153605597, 467.47037904168, 334.351262168179, 296.297295681804, 334.852575539387, 361.946410485473, 387.629312790631, 409.468800571675, 333.805156091563, 309.536558225317, 359.894550831632, 376.231739042368, 417.059450298718, 431.818038742475, 291.374221869366, 277.160987465275, 304.579759607115, 324.673591795083, 369.20630625942, 341.89280425728, 253.210342011047, 227.788914715005, 266.270220124784, 282.890629446418, 307.556750821119, 296.32869511474 ),
  `P_Tot` = c( 315.087785382455, 315.356007475201, 343.249556933665, 345.621870862815, 376.01429973294, 377.269342767856, 291.340972880708, 296.008730999173, 319.563716705383, 320.346360885814, 342.797408580074, 334.696918549422, 342.780201343152, 364.604429952782, 419.799963753223, 400.467853364667, 431.054304415492, 452.463577903494, 328.689199107333, 348.476140134227, 357.035734534098, 375.551234669824, 395.659416230325, 383.031683804794, 317.381745748518, 278.360889376064, 350.889509890097, 330.104243714921, 363.61916212901, 400.223676014955, 255.677641947778, 247.499507416179, 267.481373216035, 272.461438312168, 297.602794954409, 306.49260579391, 297.677841174368, 262.464492841036, 297.033969571712, 313.722436973434, 332.282195549595, 347.559610294167, 245.195285695477, 236.218071887388, 265.6271457606, 278.279940401837, 297.955305580942, 291.810409732378, 199.166908885976, 204.303811710974, 230.539973534982, 223.28140151954, 248.864184197347, 255.967028389931 ),
  `P_mean` = c( 286.196809943666, 279.856121744775, 308.058185037385, 316.422860962335, 340.826183919876, 347.288435475183, 277.240209227733, 271.455328132766, 304.467347747788, 298.231190808954, 325.412992360824, 309.694617397985, 323.150737156769, 316.844325140231, 371.96441826512, 380.655666884463, 411.774528793807, 405.478497575611, 300.611680063499, 294.276254054958, 330.974610194196, 323.263418911815, 347.877528040632, 356.523758791993, 264.042555125073, 264.046097801302, 296.595675684983, 312.821367725728, 338.374812212103, 340.655624979066, 222.299144497093, 217.725388710054, 237.149862110928, 238.510476030676, 268.299540676442, 270.26756043723, 259.609504812067, 246.984706949108, 281.340838183762, 276.152650787485, 316.924535968906, 309.069638160985, 220.907452101768, 221.311649982903, 250.936106797992, 254.071699215572, 274.36729230484, 276.737918099592, 175.467181480606, 173.18153762583, 199.048429239061, 199.114857295449, 224.703097248925, 224.226593365666 ),
  `P_Int` = c( 28.8909754387892, 35.4998857304255, 35.1913718962795, 29.1990099004802, 35.1881158130648, 29.9809072926731, 14.100763652975, 24.5534028664068, 15.0963689575941, 22.1151700768599, 17.3844162192499, 25.0023011514367, 19.629464186383, 47.7601048125507, 47.8355454881021, 19.8121864802047, 19.2797756216845, 46.9850803278833, 28.0775190438347, 54.1998860792695, 26.061124339902, 52.2878157580086, 47.7818881896929, 26.5079250128008, 53.3391906234455, 14.3147915747616, 54.2938342051136, 17.2828759891928, 25.244349916907, 59.5680510358891, 33.3784974506853, 29.7741187061253, 30.3315111051071, 33.950962281492, 29.3032542779672, 36.2250453566804, 38.0683363623011, 15.4797858919276, 15.6931313879501, 37.5697861859489, 15.3576595806892, 38.4899721331819, 24.2878335937096, 14.9064219044849, 14.6910389626079, 24.2082411862652, 23.5880132761018, 15.0724916327862, 23.6997274053699, 31.1222740851432, 31.4915442959206, 24.1665442240911, 24.1610869484215, 31.7404350242649 ),
  `nD` = c( 76.6564376505317, 86.4007340902643, 86.151834718222, 76.9699534010204, 86.1492001342774, 77.7545030427186, 59.6696464126312, 79.340733311971, 59.0120747230942, 78.6315332132975, 58.5778147794659, 74.8376014062797, 64.4031353722102, 93.4309539387749, 93.4798136132308, 64.6513676939208, 63.9226666971842, 92.926017486389, 76.1787191980119, 100.725884150632, 76.4965310227163, 100.706804663599, 101.493737868195, 76.2895930915614, 94.9222147345463, 67.3025317640006, 95.6908060743521, 67.7563334376017, 68.9089393183102, 97.2326216948995, 82.3157999725342, 85.1151334584554, 84.9867423386037, 82.4121919818754, 85.6636667989095, 82.5434000701904, 88.3525337219238, 59.2843333028158, 59.6458305272363, 87.9682001902262, 59.0753999888102, 88.6749836398094, 86.1743334757487, 65.9431711942811, 65.5106667200724, 86.0812543343512, 85.3489333648682, 66.2728181161696, 75.2098000386556, 87.7106668141683, 88.0529021962314, 75.7959332733154, 75.7891333821615, 88.2820788795832 ),
  `Efficiency` = c( 66.42, 80.67, 85.6, 72.95, 87.65, 78.67, 80.04, 86.41, 86.78, 88.63, 88.24, 92.41, 73.99, 73.77, 81.11, 85.39, 91.79, 84.47, 72.05, 72.34, 79.17, 76.95, 79.78, 85.17, 66.52, 69.93, 72.41, 82.58, 87.01, 79.53, 65.43, 72.54, 77.02, 70.47, 80.77, 78.76, 64.47, 62.05, 68.4, 71.35, 77.44, 75.1, 81.99, 82.22, 91.47, 89.76, 92.56, 97.11, 50.58, 59.59, 65.12, 56.31, 63.19, 72.06 ),
  `Pedal_Smoothness` = c( 39.710181579574, 50.8184514296743, 52.4428359792181, 40.2055948041026, 53.6791852731242, 41.0448765909455, 47.914882163269, 51.5335837768147, 49.217483982331, 51.1389458112447, 48.0336788998195, 52.8223258874823, 47.9302436519206, 51.9475600881879, 54.0606647605687, 50.6559277814877, 52.6335181401208, 54.2725782631366, 43.083675000186, 49.0637500123524, 44.6632810590617, 50.293760020264, 51.2896166830574, 46.4638901013413, 48.3291073423363, 44.2590599394396, 52.6720469537052, 47.4439436135393, 48.2471522363413, 57.9737846304978, 42.4301080469913, 50.2908406548503, 52.3570034648903, 42.7127745966365, 52.2685711057555, 44.7936090146139, 46.3565980135841, 38.3575726240913, 39.6615373251182, 49.3105354600425, 42.1880618813037, 51.4796995926358, 54.4350155934243, 49.538139286023, 51.844375965857, 57.5052389013286, 57.6775357922151, 52.6180510620694, 32.375968743603, 42.0671208740445, 44.8980312830359, 34.1636884387502, 36.5443594656413, 47.3128113809467 ),
  `P_max` = c( 720.71392917246, 550.697854561856, 587.417097655553, 787.012012890423, 634.931737852808, 846.118844347542, 578.609811212814, 526.754221690469, 618.616237792837, 583.178213938422, 677.46839262409, 586.294927750192, 674.210503713599, 609.931100907041, 688.050026599798, 751.453351178328, 782.342779552722, 747.114860859711, 697.739178615104, 599.783453121439, 741.044102327642, 642.75054953451, 678.261118990867, 767.313623578198, 546.342710728637, 596.59219640589, 563.098821554568, 659.349421443241, 701.336341167984, 587.602874558339, 523.918403061563, 432.932490041913, 452.947736533387, 558.40548473631, 513.309499380782, 603.361877693434, 560.027085542369, 643.90077383047, 709.354344682915, 560.027686195494, 751.218524473997, 600.371875917469, 405.818662295843, 446.750025682425, 484.017990617248, 441.823569590808, 475.691772431568, 525.937225940098, 541.967355078066, 411.679083397134, 443.334425922299, 582.825995654505, 614.87764605695, 473.923630452372 ),
  `HR_percent` = c( 87.37, 85.07, 88.4, 90.93, 93.12, 93.78, 88.05, 88.16, 92.21, 91.97, 95.39, 93.58, 84.41, 84.65, 88.64, 89.98, 91.12, 94.04, 89.19, 89.26, 92.25, 92.32, 93.98, 94.9, 86.65, 87.88, 89.95, 91.14, 93.96, 94.27, 90.9, 86.55, 87.59, 91.62, 91.13, 95.12, 86.77, 87.49, 90.8, 89.74, 93.35, 94.18, 80.64, 81.03, 84.87, 88.21, 91.54, 92.47, 91.92, 88.36, 90.08, 92.49, 93.58, 93.31 ),
  `VO2_percent` = c( 71.27, 66.6, 72.84, 76.05, 83.97, 83.1, 73.17, 73.36, 75.13, 76.76, 82.17, 80.02, 65.96, 64.11, 76.98, 75.53, 81.19, 87.7, 77.06, 75.21, 82.91, 81.14, 86.2, 88.05, 69.58, 67.18, 76.09, 77.01, 83.24, 82.99, 68.97, 61.94, 67.21, 72.61, 75.89, 79.96, 59.98, 55.95, 63.85, 65.63, 72.7, 75.69, 74.64, 71.07, 77.24, 82.44, 89.64, 82.88, 64.16, 59.83, 66.38, 68.75, 72.98, 72.62 ),
  `ΔBLC` = c( 2.14440476388244, 2.41, 3.25, 2.66, 4.22, 1.59, 2.28540699787984, 2.32, 3.28, 4.11, 5.36, 3.76, 1.32245689846256, 1.08, 3.54, 2.04, 3.04, 4.51, 1.64039583472131, 2.2, 2.16, 2.09, 3.36, 2.99, 1.3350755332152, 1.78, 1.78, 2.45, 1.55, 3.71, 1.67230744683529, 1.82, 2.69, 3.15, 4.13, 4.37, 1.31227592057723, 2, 2.19, 1.64, 3.53, 2.61, 2.17216275938861, 2, 3.57, 4.4, 6.67, 5.02, 1.25297825424965, 1.1, 1.92, 2.75, 3.52, 3.03 ),
  `Wirk_Brutto` = c( 0.21091819774276, 0.218687083170556, 0.218760618322075, 0.215611035633622, 0.214547147778117, 0.218930425263281, 0.227778316752638, 0.221045746532832, 0.241032841135073, 0.231877904887968, 0.241135116972538, 0.237391436703597, 0.231766180410934, 0.235455654830026, 0.225781269887199, 0.237080456805955, 0.238940307096781, 0.22236502148504, 0.223093734025061, 0.221665349290325, 0.225584494767251, 0.224321087908687, 0.226863452429123, 0.228356628526559, 0.210066541077549, 0.215613658605269, 0.214257766456576, 0.225374565032104, 0.226632861157903, 0.225342311634305, 0.202757163964259, 0.220274153111015, 0.221156816095123, 0.2037476019667, 0.219912947132494, 0.211113698805482, 0.231505614168667, 0.234285612923503, 0.235567631959634, 0.222650724211751, 0.231727760126706, 0.219734608022672, 0.225208598362406, 0.23752066449308, 0.24609162628488, 0.235239077451739, 0.23507782711413, 0.257565789353377, 0.196493707208499, 0.20725848437317, 0.212413076069613, 0.205403057940064, 0.218886073914972, 0.222063328733195 ),
  `Wirk_Netto` = c( 0.235366208704023, 0.24575401991436, 0.243091404958539, 0.238518403096868, 0.235435907276559, 0.240279695180822, 0.255934451435372, 0.248097421797994, 0.269612985904083, 0.258824217026203, 0.267696887307786, 0.264544459494061, 0.259459192084525, 0.264732681287629, 0.248201900922679, 0.261299577904801, 0.261524156177508, 0.242125397562104, 0.251321138621137, 0.250186487127734, 0.251530175390694, 0.250643819041199, 0.251705746605124, 0.25286873845261, 0.235236336194875, 0.242214059349332, 0.23731394539996, 0.249555183341606, 0.249068360041437, 0.247347607416278, 0.221558994244514, 0.243163021575891, 0.242168848169494, 0.221339658358084, 0.238068303279725, 0.227659204021592, 0.25865339661502, 0.263730596001978, 0.261320891591058, 0.245994762806019, 0.253547895823224, 0.239800952281731, 0.248645123409885, 0.263685769900833, 0.270630156183426, 0.257261586154533, 0.255302073344076, 0.281816507813529, 0.229914263078336, 0.245377374830505, 0.246568081428814, 0.237160085395944, 0.250569512513164, 0.254821599878365 ),
  `Wirk_Total` = c( 0.215050980096665, 0.218361213965118, 0.21743918934395, 0.210231759369089, 0.210052326032456, 0.220565206870156, 0.224120419796381, 0.220781351398079, 0.236416282347832, 0.222476343746092, 0.227738869937329, 0.224836096783589, 0.238697915485563, 0.233601219961414, 0.217999410562797, 0.230984992520443, 0.227076019064188, 0.214502300481599, 0.225555773878964, 0.219352301338166, 0.219846792958958, 0.220428214984546, 0.218092136279684, 0.220946373711054, 0.213005949212925, 0.218400909748379, 0.213344733685403, 0.225400741075485, 0.219843269599878, 0.218616391702131, 0.199460121420396, 0.220446212520149, 0.212466511624337, 0.197689880977766, 0.207646479631449, 0.198013299225654, 0.233318299679759, 0.239375318086974, 0.234519392583452, 0.220198847250673, 0.227970762256012, 0.214722135551155, 0.227447147538819, 0.239548486250032, 0.247162950474793, 0.234763503071659, 0.2229381955183, 0.24282867143177, 0.207891012768686, 0.228081605080525, 0.224262888819237, 0.211157426124462, 0.219182082639067, 0.227004603734556 ),
  `Wirk_Arbeit` = c( 0.247862487404545, 0.253160968214816, 0.248317305395203, 0.238101384924385, 0.235636793902554, 0.248353056021652, 0.252223124451487, 0.248655390436469, 0.264750516922094, 0.247972342497358, 0.252051352897696, 0.249835173535799, 0.290674339857892, 0.284351853248305, 0.254041969959835, 0.27075806004536, 0.262059956436982, 0.246006374208853, 0.282917168134632, 0.274677400862769, 0.267938862065388, 0.270217570609923, 0.262573343325185, 0.265388250568887, 0.265857359551926, 0.274313879330951, 0.259309573409811, 0.274063975273831, 0.261750935900445, 0.259684339862698, 0.23098710636663, 0.26058009978106, 0.245991096843795, 0.22621104152906, 0.235354360073126, 0.222849715844585, 0.286385011940742, 0.299154252396369, 0.283190110066154, 0.263522755836858, 0.267668336610019, 0.250621087215401, 0.257193553520699, 0.272706537461809, 0.277912008983077, 0.261953055017254, 0.24533102151784, 0.269380995629809, 0.25452140555158, 0.286410297975261, 0.271577778890731, 0.252576522311175, 0.258114707808469, 0.269138120186613 )
  , check.names = FALSE
)
# Stehen Werte in Wirk_Arbeit auf NA
Bedingungen_data_Wirkungsgrad$Wirk_Arbeit[Bedingungen_data_Wirkungsgrad$Bedingung == "stehen"] <- NA

# Spaltennamen ändern
names(Bedingungen_data_Wirkungsgrad)[names(Bedingungen_data_Wirkungsgrad) == "W*Aerob [kJ]"] <- "W_Aerob"
names(Bedingungen_data_Wirkungsgrad)[names(Bedingungen_data_Wirkungsgrad) == "WPCR [kJ]"] <- "W_PCR"
names(Bedingungen_data_Wirkungsgrad)[names(Bedingungen_data_Wirkungsgrad) == "WBLC [kJ]"] <- "W_BLC"
names(Bedingungen_data_Wirkungsgrad)[names(Bedingungen_data_Wirkungsgrad) == "WTOT [kJ]"] <- "W_TOT"

# UI (User Interface) Definition:
ui <- fluidPage(
  titlePanel("Energieumsatz: Barplots"),
  
  fluidRow(
    column(2,
           wellPanel(
             checkboxGroupInput("selectedBedingung", "Bedingungen:",
                                unique(Bedingungen_data_Wirkungsgrad$Bedingung),
                                selected = c("sitzen", "stehen")),
             checkboxGroupInput("selectedIntensität", "Intensitäten:",
                                unique(Bedingungen_data_Wirkungsgrad$Intensität),
                                selected = c("leicht", "moderat", "schwer")),
             checkboxGroupInput("selectedProband", "Probanden:",
                                unique(Bedingungen_data_Wirkungsgrad$Proband),
                                selected = unique(Bedingungen_data_Wirkungsgrad$Proband))
           )
    ),
    column(10,
           plotlyOutput("barplot", height = "calc(65vh - 150px)")
    )
  ),
  
  fluidRow(
    column(12,
           DTOutput("summaryTable"),
           br(), br()
    )
  )
)

# Server-Logik
server <- function(input, output, session) {
  
  filtered_data <- reactive({
    data <- Bedingungen_data_Wirkungsgrad %>%
      filter(Proband %in% input$selectedProband)
    
    if (length(input$selectedBedingung) > 0) {
      data <- data %>% filter(Bedingung %in% input$selectedBedingung)
    }
    
    if (length(input$selectedIntensität) > 0) {
      data <- data %>% filter(Intensität %in% input$selectedIntensität)
    }
    
    # Erstellen Sie eine neue Gruppierungsvariable basierend auf den Auswahlen
    if (length(input$selectedBedingung) > 0 && length(input$selectedIntensität) > 0) {
      data$Gruppe <- interaction(data$Intensität, data$Bedingung, sep = "_")
    } else if (length(input$selectedBedingung) > 0) {
      data$Gruppe <- data$Bedingung
    } else if (length(input$selectedIntensität) > 0) {
      data$Gruppe <- data$Intensität
    } else {
      data$Gruppe <- "Alle"
    }
    
    return(data)
  })
  
  # Energieumsatz Barplot
  output$barplot <- renderPlotly({
    filtered_data <- filtered_data()
    
    # Gruppierung und Berechnung basierend auf der Auswahl
    if (length(input$selectedBedingung) > 0 && length(input$selectedIntensität) > 0) {
      group_vars <- c("Bedingung", "Intensität")
    } else if (length(input$selectedBedingung) > 0) {
      group_vars <- "Bedingung"
    } else if (length(input$selectedIntensität) > 0) {
      group_vars <- "Intensität"
    } else {
      return(NULL)
    }
    
    # Berechnen des durchschnittlichen Wirkungsgrads
    avg_efficiency_data <- filtered_data %>%
      group_by(across(all_of(group_vars))) %>%
      summarize(AvgWirkungsgrad = mean(Wirk_Muskulär, na.rm = TRUE))
    
    # Berechnen der durchschnittlichen Leistung
    avg_power_data <- filtered_data %>%
      group_by(across(all_of(group_vars))) %>%
      summarize(AvgPTOT = mean(`P_Tot`, na.rm = TRUE)) 
    
    # Daten umwandeln und Durchschnittswerte berechnen
    avg_energy_data <- filtered_data %>%
      gather(Energiequelle, Wert, W_Aerob, W_PCR, W_BLC) %>%
      group_by(across(all_of(c(group_vars, "Energiequelle")))) %>%
      summarize(AvgWert = mean(Wert, na.rm = TRUE),
                AvgWTOT = mean(W_TOT, na.rm = TRUE),
                Prozentsatz = (AvgWert / AvgWTOT) * 100)
    
    # X-Achsen-Variable festlegen
    if (length(group_vars) > 1) {
      x_var <- ~interaction(Intensität, Bedingung, sep = "_")
      x_title <- "Intensität_Bedingung"
    } else {
      x_var <- as.formula(paste0("~", group_vars))
      x_title <- group_vars
    }
    
    p <- plot_ly(data = avg_energy_data, 
                 x = x_var, 
                 y = ~AvgWert, 
                 color = ~Energiequelle, 
                 type = 'bar',
                 marker = list(line = list(color = 'black', width = 0.75)),
                 colors = c("#42BA97","#F4737A", "#1CADE4"),
                 text = ~sprintf("%.1f%%", Prozentsatz),
                 textposition = "auto",
                 textfont = list(color = "black")
    ) %>%
      layout(
        title = 'Zusammensetzung des physiologischen Energieumsatzes aller ausgewählten Probanden',
        margin = list(t = 40),
        xaxis = list(title = htmltools::HTML(paste0('<b>', x_title, '</b>')),
                     showgrid = TRUE,
                     gridcolor = "lightgray",
                     gridwidth = 0.05),
        yaxis = list(title = htmltools::HTML('<b>Energieumsatz [kJ]</b>'), tickformat = ",.0f",
                     showgrid = TRUE,
                     gridcolor = "lightgray",
                     gridwidth = 0.05),
        barmode = 'stack',
        bargap = 0.4
      )
    
    # Wirkungsgradbeschriftung 
    for(i in 1:nrow(avg_efficiency_data)) {
      x_val <- if (length(group_vars) > 1) {
        interaction(avg_efficiency_data$Intensität[i], avg_efficiency_data$Bedingung[i], sep = "_")
      } else {
        avg_efficiency_data[[group_vars]][i]
      }
      
      y_val <- sum(avg_energy_data$AvgWert[
        if (length(group_vars) > 1) {
          avg_energy_data$Intensität == avg_efficiency_data$Intensität[i] & 
            avg_energy_data$Bedingung == avg_efficiency_data$Bedingung[i]
        } else {
          avg_energy_data[[group_vars]] == avg_efficiency_data[[group_vars]][i]
        }
      ]) + 15
      
      p <- add_annotations(p,
                           x = x_val,
                           y = y_val,
                           text = sprintf("η<sub>muskulär</sub> = %.3f", avg_efficiency_data$AvgWirkungsgrad[i]),
                           showarrow = FALSE,
                           yshift = 25,
                           bgcolor = "white",
                           bordercolor = "black",
                           borderpad = 4,
                           font = list(size = 11),  
                           textangle = 0
      )
    }
    
    # Durchschnittliche Leistung beschriften
    for(i in 1:nrow(avg_power_data)) {
      x_val <- if (length(group_vars) > 1) {
        interaction(avg_power_data$Intensität[i], avg_power_data$Bedingung[i], sep = "_")
      } else {
        avg_power_data[[group_vars]][i]
      }
      
      p <- add_annotations(p,
                           x = x_val,
                           y = 0,
                           text = sprintf("P<sub>TOT</sub> = %.1fW", avg_power_data$AvgPTOT[i]),
                           showarrow = FALSE,
                           yshift = 12,
                           xanchor = "center",
                           font = list(color = "black", size = 10)
      )
    }
    
    return(p)
  })
  
  # Energieumsatz Zusammenfassungstabelle
  output$summaryTable <- renderDT({
    filtered_data <- filtered_data()
    
    # Gruppierung basierend auf der Auswahl
    if (length(input$selectedBedingung) > 0 && length(input$selectedIntensität) > 0) {
      group_vars <- c("Bedingung", "Intensität")
    } else if (length(input$selectedBedingung) > 0) {
      group_vars <- "Bedingung"
    } else if (length(input$selectedIntensität) > 0) {
      group_vars <- "Intensität"
    } else {
      return(NULL)
    }
    
    # Daten umwandeln und Durchschnittswerte berechnen für die Energiequellen
    avg_energy_data <- filtered_data %>%
      group_by(across(all_of(group_vars))) %>%
      summarise(
        W_aerob = sprintf("%.1f kJ", round(mean(W_Aerob, na.rm = TRUE), 1)),
        W_BLC = sprintf("%.1f kJ", round(mean(W_BLC, na.rm = TRUE), 1)),
        W_PCR = sprintf("%.1f kJ", round(mean(W_PCR, na.rm = TRUE), 1)),
        P_mean = sprintf("%.1f Watt", round(mean(P_mean, na.rm = TRUE), 1)),
        P_Int = sprintf("%.1f Watt", round(mean(P_Int, na.rm = TRUE), 1)),
        Drehzahl = sprintf("%.1f rpm", mean(nD, na.rm = TRUE)),
        η_muskulär = sprintf("%.2f%%", 100 * mean(Wirk_Muskulär, na.rm = TRUE)),
        η_Total = sprintf("%.2f%%", 100 * mean(Wirk_Total, na.rm = TRUE)),
        η_Arbeit = sprintf("%.2f%%", 100 * mean(Wirk_Arbeit, na.rm = TRUE)),
        η_Netto = sprintf("%.2f%%", 100 * mean(Wirk_Netto, na.rm = TRUE)),
        η_Brutto = sprintf("%.2f%%", 100 * mean(Wirk_Brutto, na.rm = TRUE)),
        #Efficiency = sprintf("%.2f%%", mean(Efficiency, na.rm = TRUE)),
        #`Pedal Smoothness` = sprintf("%.2f%%", mean(Pedal_Smoothness, na.rm = TRUE)),
        #`P_max` = sprintf("%.1f Watt", mean(P_max, na.rm = TRUE)),
        `HR%` = sprintf("%.1f%%", mean(HR_percent, na.rm = TRUE)),
        `VO2%` = sprintf("%.1f%%", mean(VO2_percent, na.rm = TRUE)),
        `ΔBLC` = sprintf("%.1f mmol/L", mean(`ΔBLC`, na.rm = TRUE))
      ) %>% 
      ungroup()
    
    datatable(avg_energy_data, 
              options = list(
                autoWidth = TRUE,
                scrollX = TRUE,
                fixedHeader = TRUE,
                columnDefs = list(
                  list(className = 'dt-center', targets = '_all'),
                  list(className = 'dt-head-center', targets = '_all')
                ),
                initComplete = JS(
                  "function(settings, json) {",
                  "  $(this.api().table().container()).css({'font-size': '100%'});",
                  "  $(this.api().table().container()).find('table').css({'width': '100%', 'max-width': 'none'});",
                  "  this.api().columns.adjust().draw();",
                  "  $(this.api().table().header()).css({'text-align': 'center'});",
                  "}"
                ),
                stretchH = 'all'  # Streckt alle Spalten gleichmäßig
              ),
              rownames = FALSE
    ) %>% 
      formatStyle(columns = 1:ncol(avg_energy_data), 
                  textAlign = 'center')
  })
}

# ShinyApp starten
shinyApp(ui = ui, server = server)
```

Die nachfolgende Shiny-App stellt die verschiedenen Wirkungsgrade η~muskulär~, η~Total~, η~Arbeit~, η~Netto~ und η~Brutto~ der ausgewählten Probanden als Boxplots und Histogramme dar. Ergänzend werden für die ausgewählten Wirkungsgrade Histogramme angezeigt, die deren Verteilung veranschaulichen. Eine gezielte Analyse der Daten wird durch Auswahlfelder in der Seitenleiste ermöglicht, die verschiedene Kombinationen von Intensität (leicht, moderat, schwer) und Bedingung (sitzend, stehend) sowie die Option zur Ein- oder Ausschließung einzelner Probanden bieten. Die statistischen Kennwerte (Mittelwert, Median, Quartile, Minimum und Maximum) der gefilterten Daten werden beim Überfahren der Boxplots mit der Maus angezeigt.

```{shinylive-r}
#| standalone: true
#| viewerHeight: 700
library(shiny)
library(dplyr)
library(tidyr)
library(plotly)
library(DT)
library(reactable)
library(htmltools)
library(shinylive)
library(dplyr)
library(DT)

Bedingungen_data_Wirkungsgrad <- data.frame(
  `Proband` = c( "1", "1", "1", "1", "1", "1", "6", "6", "6", "6", "6", "6", "10", "10", "10", "10", "10", "10", "13", "13", "13", "13", "13", "13", "15", "15", "15", "15", "15", "15", "19", "19", "19", "19", "19", "19", "20", "20", "20", "20", "20", "20", "22", "22", "22", "22", "22", "22", "23", "23", "23", "23", "23", "23" ),
  `Bedingung` = c( "stehen", "sitzen", "sitzen", "stehen", "sitzen", "stehen", "stehen", "sitzen", "stehen", "sitzen", "stehen", "sitzen", "stehen", "sitzen", "sitzen", "stehen", "stehen", "sitzen", "stehen", "sitzen", "stehen", "sitzen", "sitzen", "stehen", "sitzen", "stehen", "sitzen", "stehen", "stehen", "sitzen", "stehen", "sitzen", "sitzen", "stehen", "sitzen", "stehen", "sitzen", "stehen", "stehen", "sitzen", "stehen", "sitzen", "sitzen", "stehen", "stehen", "sitzen", "sitzen", "stehen", "stehen", "sitzen", "sitzen", "stehen", "stehen", "sitzen" ),
  `Intensität` = c( "leicht", "leicht", "moderat", "moderat", "schwer", "schwer", "leicht", "leicht", "moderat", "moderat", "schwer", "schwer", "leicht", "leicht", "moderat", "moderat", "schwer", "schwer", "leicht", "leicht", "moderat", "moderat", "schwer", "schwer", "leicht", "leicht", "moderat", "moderat", "schwer", "schwer", "leicht", "leicht", "moderat", "moderat", "schwer", "schwer", "leicht", "leicht", "moderat", "moderat", "schwer", "schwer", "leicht", "leicht", "moderat", "moderat", "schwer", "schwer", "leicht", "leicht", "moderat", "moderat", "schwer", "schwer" ),
  `Wirk_Muskulär` = c( 0.236759931308537, 0.246060440608401, 0.242278598743508, 0.229631619431488, 0.231738880422805, 0.239606281503452, 0.235519448379419, 0.240751242958341, 0.248138483274488, 0.238973954766177, 0.239905278154682, 0.242987590176426, 0.253197378567756, 0.268813524126113, 0.246034674712508, 0.243007190386035, 0.237707989694929, 0.239357891786449, 0.246622974378944, 0.259752672010051, 0.237157651346767, 0.256082449948023, 0.248047661517146, 0.237373974289561, 0.25603524395526, 0.230241128289079, 0.252398922767891, 0.237853768450825, 0.236244609842595, 0.256844301131177, 0.229409310695982, 0.250592406029218, 0.239641017649487, 0.225830203382915, 0.230325301880732, 0.22455381609002, 0.2675313748833, 0.254378184934767, 0.247600833815352, 0.250156276904196, 0.239017863265009, 0.241462546103667, 0.252453992795637, 0.255683248260526, 0.261633090232167, 0.257132037314701, 0.242104726162168, 0.256054300732916, 0.235970111612527, 0.269069913213186, 0.259743624458201, 0.236785575354483, 0.242749525282335, 0.259138280507211 ),
  `W*Aerob [kJ]` = c( 364.789166022847, 341.629555246705, 380.175743058369, 397.985468023398, 434.291677759482, 433.605222297912, 324.974079503018, 328.244436599334, 338.782659218172, 345.676143718918, 364.680735327353, 257.547695226202, 373.643424879889, 359.053884392895, 449.590938122183, 437.033618580678, 472.355442968317, 502.398965566933, 358.837718601139, 352.868283295468, 394.753364696823, 386.919677670582, 414.624059322391, 422.974893188083, 336.736950672026, 327.040591917684, 374.940893404024, 376.054742927363, 407.568603441812, 413.170309433097, 301.002193914676, 268.616569204091, 293.782454560316, 323.273033581013, 338.095668739063, 356.147551686419, 301.108945263692, 280.951141839367, 322.983175747043, 336.778695169108, 374.987772949063, 386.657728278586, 266.533422098459, 251.790208549518, 278.168675291213, 296.280182766526, 322.403130586883, 294.593727223427, 228.955584309471, 211.732892340367, 242.182720592561, 251.873990890611, 269.030850954527, 263.980675271676 ),
  `WPCR [kJ]` = c( 24.1291998261524, 31.245535169392, 29.1930235666251, 40.7334747429318, 32.1503897341314, 31.0960321619306, 35.5542282425247, 29.8757643229022, 32.3919515398355, 37.4564805468453, 39.181054527315, 28.0856376372225, 25.6241011760421, 42.2362045296838, 43.8865576245131, 46.7522391886717, 55.8553450423781, 41.2539914795555, 33.5030632789753, 39.5610791298099, 47.0313952643199, 43.4984491855838, 48.5683623835727, 47.4643724094369, 28.7114346014479, 27.082865453765, 33.5487723155105, 28.4952050444725, 46.7129326531457, 36.4259657605345, 26.4583220374129, 20.1814127976726, 29.9859705398912, 25.6937955351603, 32.5159707007087, 35.3146550491163, 26.041151647366, 18.4426421779503, 25.8050373268292, 31.1359690227005, 24.1696808725351, 31.9239901224492, 18.2312728474559, 19.2851143909574, 15.5481731391339, 15.0049470739965, 26.5074844823288, 32.024059076605, 19.4890043814307, 11.8721280138382, 16.7847021024629, 20.5569026538069, 25.1374379120318, 20.8232926492238 ),
  `WBLC [kJ]` = c( 10.3313513320441, 11.610940774608, 15.6579076836, 12.815395211808, 20.331190899936, 7.660330220592, 10.5760425135007, 10.736126499168, 15.178661602272, 19.019603410164, 24.804154325664, 17.399929153824, 6.87435813197033, 5.614025524128, 18.401528106864, 10.604270434464, 15.802442216064, 23.443754735016, 7.48717405349485, 10.04134646592, 9.858776530176, 9.539279142624, 15.335874602496, 13.647102696864, 6.43215059991284, 8.575715592864, 8.575715592864, 11.80365348456, 7.46761751064, 17.874103848048, 6.89074621609046, 7.49931368004, 11.08415043918, 12.9795813693, 17.01767335086, 18.00659383614, 6.65505918050507, 10.142774208, 11.10633775776, 8.31707485056, 17.90199647712, 13.23632034144, 6.60952692345146, 6.0856645248, 10.862911176768, 13.38846195456, 20.295691190208, 15.275017957248, 4.76575332014558, 4.1838943608, 7.30279742976, 10.459735902, 13.38846195456, 11.52472719384 ),
  `WTOT [kJ]` = c( 399.249717181043, 384.486031190706, 425.026674308594, 451.534337978137, 486.77325839355, 472.361584680434, 371.104350259043, 368.856327421404, 386.353272360279, 402.152227675927, 428.665944180332, 303.033262017248, 406.141884187901, 406.904114446707, 511.87902385356, 494.390128203813, 544.013230226759, 567.096711781505, 399.827955933609, 402.470708891198, 451.643536491319, 439.95740599879, 478.52829630846, 484.086368294384, 371.880535873387, 362.699172964313, 417.065381312399, 416.353601456395, 461.749153605597, 467.47037904168, 334.351262168179, 296.297295681804, 334.852575539387, 361.946410485473, 387.629312790631, 409.468800571675, 333.805156091563, 309.536558225317, 359.894550831632, 376.231739042368, 417.059450298718, 431.818038742475, 291.374221869366, 277.160987465275, 304.579759607115, 324.673591795083, 369.20630625942, 341.89280425728, 253.210342011047, 227.788914715005, 266.270220124784, 282.890629446418, 307.556750821119, 296.32869511474 ),
  `P_Tot` = c( 315.087785382455, 315.356007475201, 343.249556933665, 345.621870862815, 376.01429973294, 377.269342767856, 291.340972880708, 296.008730999173, 319.563716705383, 320.346360885814, 342.797408580074, 334.696918549422, 342.780201343152, 364.604429952782, 419.799963753223, 400.467853364667, 431.054304415492, 452.463577903494, 328.689199107333, 348.476140134227, 357.035734534098, 375.551234669824, 395.659416230325, 383.031683804794, 317.381745748518, 278.360889376064, 350.889509890097, 330.104243714921, 363.61916212901, 400.223676014955, 255.677641947778, 247.499507416179, 267.481373216035, 272.461438312168, 297.602794954409, 306.49260579391, 297.677841174368, 262.464492841036, 297.033969571712, 313.722436973434, 332.282195549595, 347.559610294167, 245.195285695477, 236.218071887388, 265.6271457606, 278.279940401837, 297.955305580942, 291.810409732378, 199.166908885976, 204.303811710974, 230.539973534982, 223.28140151954, 248.864184197347, 255.967028389931 ),
  `P_mean` = c( 286.196809943666, 279.856121744775, 308.058185037385, 316.422860962335, 340.826183919876, 347.288435475183, 277.240209227733, 271.455328132766, 304.467347747788, 298.231190808954, 325.412992360824, 309.694617397985, 323.150737156769, 316.844325140231, 371.96441826512, 380.655666884463, 411.774528793807, 405.478497575611, 300.611680063499, 294.276254054958, 330.974610194196, 323.263418911815, 347.877528040632, 356.523758791993, 264.042555125073, 264.046097801302, 296.595675684983, 312.821367725728, 338.374812212103, 340.655624979066, 222.299144497093, 217.725388710054, 237.149862110928, 238.510476030676, 268.299540676442, 270.26756043723, 259.609504812067, 246.984706949108, 281.340838183762, 276.152650787485, 316.924535968906, 309.069638160985, 220.907452101768, 221.311649982903, 250.936106797992, 254.071699215572, 274.36729230484, 276.737918099592, 175.467181480606, 173.18153762583, 199.048429239061, 199.114857295449, 224.703097248925, 224.226593365666 ),
  `P_Int` = c( 28.8909754387892, 35.4998857304255, 35.1913718962795, 29.1990099004802, 35.1881158130648, 29.9809072926731, 14.100763652975, 24.5534028664068, 15.0963689575941, 22.1151700768599, 17.3844162192499, 25.0023011514367, 19.629464186383, 47.7601048125507, 47.8355454881021, 19.8121864802047, 19.2797756216845, 46.9850803278833, 28.0775190438347, 54.1998860792695, 26.061124339902, 52.2878157580086, 47.7818881896929, 26.5079250128008, 53.3391906234455, 14.3147915747616, 54.2938342051136, 17.2828759891928, 25.244349916907, 59.5680510358891, 33.3784974506853, 29.7741187061253, 30.3315111051071, 33.950962281492, 29.3032542779672, 36.2250453566804, 38.0683363623011, 15.4797858919276, 15.6931313879501, 37.5697861859489, 15.3576595806892, 38.4899721331819, 24.2878335937096, 14.9064219044849, 14.6910389626079, 24.2082411862652, 23.5880132761018, 15.0724916327862, 23.6997274053699, 31.1222740851432, 31.4915442959206, 24.1665442240911, 24.1610869484215, 31.7404350242649 ),
  `nD` = c( 76.6564376505317, 86.4007340902643, 86.151834718222, 76.9699534010204, 86.1492001342774, 77.7545030427186, 59.6696464126312, 79.340733311971, 59.0120747230942, 78.6315332132975, 58.5778147794659, 74.8376014062797, 64.4031353722102, 93.4309539387749, 93.4798136132308, 64.6513676939208, 63.9226666971842, 92.926017486389, 76.1787191980119, 100.725884150632, 76.4965310227163, 100.706804663599, 101.493737868195, 76.2895930915614, 94.9222147345463, 67.3025317640006, 95.6908060743521, 67.7563334376017, 68.9089393183102, 97.2326216948995, 82.3157999725342, 85.1151334584554, 84.9867423386037, 82.4121919818754, 85.6636667989095, 82.5434000701904, 88.3525337219238, 59.2843333028158, 59.6458305272363, 87.9682001902262, 59.0753999888102, 88.6749836398094, 86.1743334757487, 65.9431711942811, 65.5106667200724, 86.0812543343512, 85.3489333648682, 66.2728181161696, 75.2098000386556, 87.7106668141683, 88.0529021962314, 75.7959332733154, 75.7891333821615, 88.2820788795832 ),
  `Efficiency` = c( 66.42, 80.67, 85.6, 72.95, 87.65, 78.67, 80.04, 86.41, 86.78, 88.63, 88.24, 92.41, 73.99, 73.77, 81.11, 85.39, 91.79, 84.47, 72.05, 72.34, 79.17, 76.95, 79.78, 85.17, 66.52, 69.93, 72.41, 82.58, 87.01, 79.53, 65.43, 72.54, 77.02, 70.47, 80.77, 78.76, 64.47, 62.05, 68.4, 71.35, 77.44, 75.1, 81.99, 82.22, 91.47, 89.76, 92.56, 97.11, 50.58, 59.59, 65.12, 56.31, 63.19, 72.06 ),
  `Pedal_Smoothness` = c( 39.710181579574, 50.8184514296743, 52.4428359792181, 40.2055948041026, 53.6791852731242, 41.0448765909455, 47.914882163269, 51.5335837768147, 49.217483982331, 51.1389458112447, 48.0336788998195, 52.8223258874823, 47.9302436519206, 51.9475600881879, 54.0606647605687, 50.6559277814877, 52.6335181401208, 54.2725782631366, 43.083675000186, 49.0637500123524, 44.6632810590617, 50.293760020264, 51.2896166830574, 46.4638901013413, 48.3291073423363, 44.2590599394396, 52.6720469537052, 47.4439436135393, 48.2471522363413, 57.9737846304978, 42.4301080469913, 50.2908406548503, 52.3570034648903, 42.7127745966365, 52.2685711057555, 44.7936090146139, 46.3565980135841, 38.3575726240913, 39.6615373251182, 49.3105354600425, 42.1880618813037, 51.4796995926358, 54.4350155934243, 49.538139286023, 51.844375965857, 57.5052389013286, 57.6775357922151, 52.6180510620694, 32.375968743603, 42.0671208740445, 44.8980312830359, 34.1636884387502, 36.5443594656413, 47.3128113809467 ),
  `P_max` = c( 720.71392917246, 550.697854561856, 587.417097655553, 787.012012890423, 634.931737852808, 846.118844347542, 578.609811212814, 526.754221690469, 618.616237792837, 583.178213938422, 677.46839262409, 586.294927750192, 674.210503713599, 609.931100907041, 688.050026599798, 751.453351178328, 782.342779552722, 747.114860859711, 697.739178615104, 599.783453121439, 741.044102327642, 642.75054953451, 678.261118990867, 767.313623578198, 546.342710728637, 596.59219640589, 563.098821554568, 659.349421443241, 701.336341167984, 587.602874558339, 523.918403061563, 432.932490041913, 452.947736533387, 558.40548473631, 513.309499380782, 603.361877693434, 560.027085542369, 643.90077383047, 709.354344682915, 560.027686195494, 751.218524473997, 600.371875917469, 405.818662295843, 446.750025682425, 484.017990617248, 441.823569590808, 475.691772431568, 525.937225940098, 541.967355078066, 411.679083397134, 443.334425922299, 582.825995654505, 614.87764605695, 473.923630452372 ),
  `HR_percent` = c( 87.37, 85.07, 88.4, 90.93, 93.12, 93.78, 88.05, 88.16, 92.21, 91.97, 95.39, 93.58, 84.41, 84.65, 88.64, 89.98, 91.12, 94.04, 89.19, 89.26, 92.25, 92.32, 93.98, 94.9, 86.65, 87.88, 89.95, 91.14, 93.96, 94.27, 90.9, 86.55, 87.59, 91.62, 91.13, 95.12, 86.77, 87.49, 90.8, 89.74, 93.35, 94.18, 80.64, 81.03, 84.87, 88.21, 91.54, 92.47, 91.92, 88.36, 90.08, 92.49, 93.58, 93.31 ),
  `VO2_percent` = c( 71.27, 66.6, 72.84, 76.05, 83.97, 83.1, 73.17, 73.36, 75.13, 76.76, 82.17, 80.02, 65.96, 64.11, 76.98, 75.53, 81.19, 87.7, 77.06, 75.21, 82.91, 81.14, 86.2, 88.05, 69.58, 67.18, 76.09, 77.01, 83.24, 82.99, 68.97, 61.94, 67.21, 72.61, 75.89, 79.96, 59.98, 55.95, 63.85, 65.63, 72.7, 75.69, 74.64, 71.07, 77.24, 82.44, 89.64, 82.88, 64.16, 59.83, 66.38, 68.75, 72.98, 72.62 ),
  `ΔBLC` = c( 2.14440476388244, 2.41, 3.25, 2.66, 4.22, 1.59, 2.28540699787984, 2.32, 3.28, 4.11, 5.36, 3.76, 1.32245689846256, 1.08, 3.54, 2.04, 3.04, 4.51, 1.64039583472131, 2.2, 2.16, 2.09, 3.36, 2.99, 1.3350755332152, 1.78, 1.78, 2.45, 1.55, 3.71, 1.67230744683529, 1.82, 2.69, 3.15, 4.13, 4.37, 1.31227592057723, 2, 2.19, 1.64, 3.53, 2.61, 2.17216275938861, 2, 3.57, 4.4, 6.67, 5.02, 1.25297825424965, 1.1, 1.92, 2.75, 3.52, 3.03 ),
  `Wirk_Brutto` = c( 0.21091819774276, 0.218687083170556, 0.218760618322075, 0.215611035633622, 0.214547147778117, 0.218930425263281, 0.227778316752638, 0.221045746532832, 0.241032841135073, 0.231877904887968, 0.241135116972538, 0.237391436703597, 0.231766180410934, 0.235455654830026, 0.225781269887199, 0.237080456805955, 0.238940307096781, 0.22236502148504, 0.223093734025061, 0.221665349290325, 0.225584494767251, 0.224321087908687, 0.226863452429123, 0.228356628526559, 0.210066541077549, 0.215613658605269, 0.214257766456576, 0.225374565032104, 0.226632861157903, 0.225342311634305, 0.202757163964259, 0.220274153111015, 0.221156816095123, 0.2037476019667, 0.219912947132494, 0.211113698805482, 0.231505614168667, 0.234285612923503, 0.235567631959634, 0.222650724211751, 0.231727760126706, 0.219734608022672, 0.225208598362406, 0.23752066449308, 0.24609162628488, 0.235239077451739, 0.23507782711413, 0.257565789353377, 0.196493707208499, 0.20725848437317, 0.212413076069613, 0.205403057940064, 0.218886073914972, 0.222063328733195 ),
  `Wirk_Netto` = c( 0.235366208704023, 0.24575401991436, 0.243091404958539, 0.238518403096868, 0.235435907276559, 0.240279695180822, 0.255934451435372, 0.248097421797994, 0.269612985904083, 0.258824217026203, 0.267696887307786, 0.264544459494061, 0.259459192084525, 0.264732681287629, 0.248201900922679, 0.261299577904801, 0.261524156177508, 0.242125397562104, 0.251321138621137, 0.250186487127734, 0.251530175390694, 0.250643819041199, 0.251705746605124, 0.25286873845261, 0.235236336194875, 0.242214059349332, 0.23731394539996, 0.249555183341606, 0.249068360041437, 0.247347607416278, 0.221558994244514, 0.243163021575891, 0.242168848169494, 0.221339658358084, 0.238068303279725, 0.227659204021592, 0.25865339661502, 0.263730596001978, 0.261320891591058, 0.245994762806019, 0.253547895823224, 0.239800952281731, 0.248645123409885, 0.263685769900833, 0.270630156183426, 0.257261586154533, 0.255302073344076, 0.281816507813529, 0.229914263078336, 0.245377374830505, 0.246568081428814, 0.237160085395944, 0.250569512513164, 0.254821599878365 ),
  `Wirk_Total` = c( 0.215050980096665, 0.218361213965118, 0.21743918934395, 0.210231759369089, 0.210052326032456, 0.220565206870156, 0.224120419796381, 0.220781351398079, 0.236416282347832, 0.222476343746092, 0.227738869937329, 0.224836096783589, 0.238697915485563, 0.233601219961414, 0.217999410562797, 0.230984992520443, 0.227076019064188, 0.214502300481599, 0.225555773878964, 0.219352301338166, 0.219846792958958, 0.220428214984546, 0.218092136279684, 0.220946373711054, 0.213005949212925, 0.218400909748379, 0.213344733685403, 0.225400741075485, 0.219843269599878, 0.218616391702131, 0.199460121420396, 0.220446212520149, 0.212466511624337, 0.197689880977766, 0.207646479631449, 0.198013299225654, 0.233318299679759, 0.239375318086974, 0.234519392583452, 0.220198847250673, 0.227970762256012, 0.214722135551155, 0.227447147538819, 0.239548486250032, 0.247162950474793, 0.234763503071659, 0.2229381955183, 0.24282867143177, 0.207891012768686, 0.228081605080525, 0.224262888819237, 0.211157426124462, 0.219182082639067, 0.227004603734556 ),
  `Wirk_Arbeit` = c( 0.247862487404545, 0.253160968214816, 0.248317305395203, 0.238101384924385, 0.235636793902554, 0.248353056021652, 0.252223124451487, 0.248655390436469, 0.264750516922094, 0.247972342497358, 0.252051352897696, 0.249835173535799, 0.290674339857892, 0.284351853248305, 0.254041969959835, 0.27075806004536, 0.262059956436982, 0.246006374208853, 0.282917168134632, 0.274677400862769, 0.267938862065388, 0.270217570609923, 0.262573343325185, 0.265388250568887, 0.265857359551926, 0.274313879330951, 0.259309573409811, 0.274063975273831, 0.261750935900445, 0.259684339862698, 0.23098710636663, 0.26058009978106, 0.245991096843795, 0.22621104152906, 0.235354360073126, 0.222849715844585, 0.286385011940742, 0.299154252396369, 0.283190110066154, 0.263522755836858, 0.267668336610019, 0.250621087215401, 0.257193553520699, 0.272706537461809, 0.277912008983077, 0.261953055017254, 0.24533102151784, 0.269380995629809, 0.25452140555158, 0.286410297975261, 0.271577778890731, 0.252576522311175, 0.258114707808469, 0.269138120186613 )
  , check.names = FALSE
)

# Stehen Werte in Wirk_Arbeit auf NA
Bedingungen_data_Wirkungsgrad$Wirk_Arbeit[Bedingungen_data_Wirkungsgrad$Bedingung == "stehen"] <- NA

# Spaltennamen ändern
names(Bedingungen_data_Wirkungsgrad)[names(Bedingungen_data_Wirkungsgrad) == "W*Aerob [kJ]"] <- "WAerob_kJ"
names(Bedingungen_data_Wirkungsgrad)[names(Bedingungen_data_Wirkungsgrad) == "WPCR [kJ]"] <- "WPCR_kJ"
names(Bedingungen_data_Wirkungsgrad)[names(Bedingungen_data_Wirkungsgrad) == "WBLC [kJ]"] <- "WBLC_kJ"
names(Bedingungen_data_Wirkungsgrad)[names(Bedingungen_data_Wirkungsgrad) == "WTOT [kJ]"] <- "WTOT_kJ"

# UI Definition
ui <- fluidPage(
  titlePanel("Wirkungsgrad: Boxplots und Histogramme"),
  
  sidebarLayout(
    sidebarPanel(
      width = 2,
      checkboxGroupInput("selectedBedingung", "Bedingungen:",
                         unique(Bedingungen_data_Wirkungsgrad$Bedingung),
                         selected = c("sitzen", "stehen")),
      checkboxGroupInput("selectedIntensität", "Intensitäten:",
                         unique(Bedingungen_data_Wirkungsgrad$Intensität),
                         selected = unique(Bedingungen_data_Wirkungsgrad$Intensität)),
      checkboxGroupInput("selectedProband", "Probanden:",
                         unique(Bedingungen_data_Wirkungsgrad$Proband),
                         selected = unique(Bedingungen_data_Wirkungsgrad$Proband)),
      radioButtons("wirkungsgrad", "Wirkungsgrad:",
                   choiceNames = list(
                     HTML("η<sub>muskulär</sub>"),
                     HTML("η<sub>Total</sub>"),
                     HTML("η<sub>Brutto</sub>"),
                     HTML("η<sub>Netto</sub>"),
                     HTML("η<sub>Arbeit</sub>")
                   ),
                   choiceValues = list(
                     "Wirk_Muskulär",
                     "Wirk_Total",
                     "Wirk_Brutto",
                     "Wirk_Netto",
                     "Wirk_Arbeit"
                   ),
                   selected = "Wirk_Muskulär")
    ),
    mainPanel(
      width = 9,
      tabsetPanel(
        tabPanel("Boxplots", plotlyOutput("boxplot")),
        tabPanel("Histogramme", uiOutput("histogramOutput"))
      )
    )
  )
)

# Server Logik
server <- function(input, output, session) {
  
  filtered_data <- reactive({
    data <- Bedingungen_data_Wirkungsgrad %>%
      filter(Proband %in% input$selectedProband)
    
    # Gruppennamen-Generierung basierend auf ausgewählten Filtern
    data$Gruppe <- case_when(
      length(input$selectedBedingung) > 0 && length(input$selectedIntensität) > 0 ~ 
        paste(data$Intensität, data$Bedingung, sep = "_"),
      length(input$selectedBedingung) > 0 ~ data$Bedingung,
      length(input$selectedIntensität) > 0 ~ data$Intensität,
      TRUE ~ "Alle"
    )
    
    # Filtern nach ausgewählten Bedingungen und Intensitäten
    if (length(input$selectedBedingung) > 0) {
      data <- data %>% filter(Bedingung %in% input$selectedBedingung)
    }
    
    if (length(input$selectedIntensität) > 0) {
      data <- data %>% filter(Intensität %in% input$selectedIntensität)
    }
    
    return(data)
  })
  
  # Erweiterte color_map
  color_map <- reactive({
    c(
      # Kombinierte Farben
      "leicht_sitzen" = "#42BA97", "leicht_stehen" = "#62A39F",
      "moderat_sitzen" = "#1CADE4", "moderat_stehen" = "#2683C6",
      "schwer_sitzen" = "#EF5350", "schwer_stehen" = "#C8133B",
      # Einzelne Intensitäten
      "leicht" = "#42BA97", "moderat" = "#1CADE4", "schwer" = "#EF5350",
      # Einzelne Bedingungen
      "sitzen" = "#62A39F", "stehen" = "#2683C6",
      # Fallback
      "Alle" = "#808080"
    )
  })
  
  # Wirkungsgrad Boxplot
  output$boxplot <- renderPlotly({
    data <- filtered_data()
    
    if (nrow(data) == 0) {
      return(plotly_empty() %>% 
               layout(title = "Keine Daten für die ausgewählten Kriterien verfügbar"))
    }
    
    color_map_values <- color_map()
    
    p2BxI <- plot_ly(data = data, 
                     x = ~Gruppe, 
                     y = ~get(input$wirkungsgrad),
                     type = "box",
                     color = ~Gruppe,
                     colors = color_map_values[unique(data$Gruppe)],
                     opacity = 0.8, 
                     line = list(color = "black", width = 0.9),
                     boxpoints = "outliers",  
                     pointpos = 0,
                     marker = list(color = "black", size = 4),
                     boxmean = TRUE,  
                     hoverlabel = list(bgcolor = "#F5F5F5"),
                     showlegend = FALSE
    ) %>%
      layout(
        title = paste('Wirkungsgrad nach Bedingung und Intensität'),
        margin = list(t = 40),
        xaxis = list(
          title = htmltools::HTML('<b>Gruppe</b>'), 
          showgrid = TRUE,  
          gridcolor = "lightgray",  
          gridwidth = 0.05
        ),  
        yaxis = list(
          title = htmltools::HTML(paste('<b>', "Wirkungsgrad", '</b>')), 
          tickformat = ".3f",
          showgrid = TRUE,  
          gridcolor = "lightgray",  
          gridwidth = 0.05
        )
      )
    return(p2BxI)
  })
  
  # Histogramme
  output$histogramOutput <- renderUI({
    data <- filtered_data()
    
    if (nrow(data) == 0) {
      return(p("Keine Daten für die ausgewählten Kriterien verfügbar"))
    }
    
    groups <- unique(data$Gruppe)
    n_groups <- length(groups)
    
    # Erstellen Sie Reihen mit je zwei Plots
    rows <- lapply(seq(1, n_groups, by = 2), function(i) {
      fluidRow(
        column(6, plotlyOutput(outputId = paste0("hist_", gsub(" ", "_", groups[i])), height = "400px")),
        if (i + 1 <= n_groups) column(6, plotlyOutput(outputId = paste0("hist_", gsub(" ", "_", groups[i + 1])), height = "400px")) else NULL
      )
    })
    
    # Erstellen Sie die Ausgabe-UI
    do.call(tagList, rows)
  })
  
  # Rendere die einzelnen Histogramme
  observe({
    data <- filtered_data()
    color_map_values <- color_map()
    
    # Berechne globale min und max Werte für die x-Achse
    x_min <- min(data[[input$wirkungsgrad]], na.rm = TRUE)
    x_max <- max(data[[input$wirkungsgrad]], na.rm = TRUE)
    
    for (group in unique(data$Gruppe)) {
      local({
        local_group <- group
        output_id <- paste0("hist_", gsub(" ", "_", local_group))
        
        output[[output_id]] <- renderPlotly({
          group_data <- data[data$Gruppe == local_group, ]
          
          # Bestimme die Farbe basierend auf der Gruppe
          group_color <- if(local_group %in% names(color_map_values)) {
            color_map_values[local_group]
          } else {
            # Wenn keine spezifische Farbe definiert ist, versuchen wir, eine passende Farbe zu finden
            intensity <- strsplit(local_group, "_")[[1]][1]
            condition <- strsplit(local_group, "_")[[1]][2]
            if (paste(intensity, condition, sep = "_") %in% names(color_map_values)) {
              color_map_values[paste(intensity, condition, sep = "_")]
            } else if (intensity %in% names(color_map_values)) {
              color_map_values[intensity]
            } else if (condition %in% names(color_map_values)) {
              color_map_values[condition]
            } else {
              "#999999"  # Fallback-Farbe
            }
          }
          
          # Führe Shapiro-Wilk-Test durch
          sw_test <- shapiro.test(group_data[[input$wirkungsgrad]])
          sw_result <- paste("Shapiro-Wilk Test: W =", round(sw_test$statistic, 3), 
                             ", p =", format.pval(sw_test$p.value, digits = 3))
          
          # Interpretiere das Ergebnis des Shapiro-Wilk-Tests
          sw_interpretation <- if(sw_test$p.value > 0.05) {
            "Die Daten sind normalverteilt (p > 0.05)."
          } else {
            "Die Daten sind nicht normalverteilt (p ≤ 0.05)."
          }
          
          plot_ly(data = group_data, x = ~get(input$wirkungsgrad), type = "histogram", 
                  marker = list(color = group_color),
                  opacity = 0.7, nbinsx = 30) %>%
            layout(
              title = list(
                text = paste('Wirkungsgradverteilung -', local_group),
                font = list(size = 14)
              ),
              xaxis = list(title = "Wirkungsgrad", range = c(x_min, x_max)),
              yaxis = list(title = "Häufigkeit"),
              margin = list(l = 30, r = 30, b = 30, t = 60, pad = 4),
              legend = list(
                x = 0.98,
                y = 0.98,
                xanchor = "right",
                yanchor = "top",
                bgcolor = "rgba(255, 255, 255, 0.7)",
                bordercolor = "rgba(0, 0, 0, 0)"
              ),
              annotations = list(
                list(x = 0.5, y = 1.08, xref = "paper", yref = "paper",
                     text = sw_result, showarrow = FALSE,
                     font = list(size = 10)),
                list(x = 0.5, y = 1.02, xref = "paper", yref = "paper",
                     text = sw_interpretation, showarrow = FALSE,
                     font = list(size = 10))
              ))
        })
      })
    }
  })
}

# ShinyApp starten
shinyApp(ui = ui, server = server)
```

# Deskriptive und inferenzstatistische Analyse der Wirkungsgrade

::: columns
::: {.column width="60%"}
Die folgenden Tabellen bieten sowohl eine detaillierte deskriptive Auswertung als auch inferenzstatistische Analysen der berechneten Wirkungsgrade (Berechnungswege siehe @tbl-Wirkungsgrad_Berechnungen) sowie dafür relevanter Parameter des Energiestoffwechsels und ergometrischer Parameter, wobei alle Werte als Mittelwert ± Standardabweichung angegeben werden. Die Daten werden zunächst in einer Gesamtübersicht mit Mittelwerten sowie minimalen und maximalen Messwerten (@tbl-Wirkungsgrad_mean) dargestellt. In den weiteren Tabellen erfolgt eine detaillierte Darstellung nach den experimentellen Bedingungen (Sitzen vs. Stehen; @tbl-Wirkungsgrad_Bedingung_mean), den Belastungsintensitäten (leicht, moderat, schwer; @tbl-Wirkungsgrad_Intensitaet_mean) sowie nach der Kombination beider Faktoren (@tbl-Wirkungsgrad_Bedingung_Intensitaet_mean). Zusätzlich werden die Ergebnisse der Post-hoc Analysen mittels Tukey HSD Test für die Vergleiche der verschiedenen Intensitäten sowohl gesamt (@tbl-Post_hoc_Intensitaet_Wirk_muskulär & @tbl-Post_hoc_Intensitaet_Wirk_Arbeit) als auch spezifisch für die sitzende Position (@tbl-Post_hoc_sitzen) präsentiert. Ergänzend zeigt eine einfaktorielle ANOVA die Vergleiche von η~muskulär~ zwischen den Bedingungen Sitzen und Stehen für jede Intensitätsstufe (@tbl-ANOVA_Wirk_muskulaer).<br>
Die analysierten Parameter umfassen die Wirkungsgrade η~muskulär~, η~Total~, η~Netto~, η~Brutto~, η~Arbeit,sitzen~ sowie die Komponenten der Energiebereitstellung W~TOT~, W~Aerob~, W~PCr~, W~BLC~ und die Delta-Blutlaktatakkumulation ΔBLC. Die Leistungsparameter P~Tot~, P~mech~, P~Int~ sowie die Drehzahl werden ebenfalls dargestellt.
:::

::: {.column width="2%"}
:::

::: {.column width="38%"}
| Wirkungsgrade |               Berechnung                |
|---------------|:---------------------------------------:|
| η~Brutto~     |            P~mech~ / E~Aerob~             |
| η~Netto~      |      P~mech~ / (E~Aerob~ - E~Ruhe~)       |
| η~Total~      |      P~mech~  / (E~Tot~ - E~Ruhe~) |
| η~muskulär~   | (P~mech~ + P~Int~) / (E~Tot~ - E~Ruhe~) |
| η~Arbeit~     |  P~mech~ / (E~Tot~ - E~Ruhe~ - E~Leerbewegung~)   |
| η~delta~      |           ΔP~mech~ / ΔE~Tot~            |

: Modifizierte Berechnungswege der Wirkungsgrade nach Gaesser und Brooks (1975), Luhtanen et al. (1987) und Böning et al. (2017), ergänzt um den Gesamtwirkungsgrad (η~Total~). {#tbl-Wirkungsgrad_Berechnungen tbl-colwidths="\[30,70\]" .hover}

:::
:::
    
::: {.panel-tabset}
### Gesamtdaten
```{r}
#| label: tbl-Wirkungsgrad_mean
#| tbl-cap-location: top
#| tbl-cap: "Deskriptive Statistik der Wirkungsgrade und Energiebereitstellung: MW ± SD, Min & Max"

library(flextable)
library(dplyr)
library(officer)

ft_Wirkungsgrad_stats_mean <- readRDS("C:/Users/johan/OneDrive/Desktop/SpoWi/WS 22,23/Masterarbeit - Wirkungsgrad/Wirkungsgrad-Rad.github.io/Ergebnisse/rds/ft_Wirkungsgrad_stats_mean.rds")

# Anzeigen der Tabelle
ft_Wirkungsgrad_stats_mean
```

### Bedingungen
```{r}
#| label: tbl-Wirkungsgrad_Bedingung_mean
#| tbl-cap-location: top
#| tbl-cap: "Deskriptive Statistik der Wirkungsgrade und Energiebereitstellung: MW ± SD, Min & Max nach Bedingungen"

ft_Wirkungsgrad_stats_Bedingung_mean <- readRDS("rds/ft_Wirkungsgrad_stats_Bedingung_mean.rds")

# Anzeigen der Tabelle
ft_Wirkungsgrad_stats_Bedingung_mean
```
### Intensitäten
```{r}
#| label: tbl-Wirkungsgrad_Intensitaet_mean
#| tbl-cap-location: top
#| tbl-cap: "Deskriptive Statistik der Wirkungsgrade und Energiebereitstellung: MW ± SD, Min & Max nach Intensitäten"

ft_Wirkungsgrad_stats_Intensitaet_mean <- readRDS("C:/Users/johan/OneDrive/Desktop/SpoWi/WS 22,23/Masterarbeit - Wirkungsgrad/Wirkungsgrad-Rad.github.io/Ergebnisse/rds/ft_Wirkungsgrad_stats_Intensitaet_mean.rds")

# Anzeigen der Tabelle
ft_Wirkungsgrad_stats_Intensitaet_mean
```

```{r}
#| label: tbl-Post_hoc_Intensitaet_Wirk_muskulär
#| tbl-cap-location: top
#| tbl-cap: "Tukey-HSD-Post-hoc-Test der Intensitäten für den muskulären Wirkungsgrad"

ft_post_hoc_Intensität_Wirk_muskulär <- readRDS("rds/ft_post_hoc_Intensität_Wirk_muskulär.rds")

# Anzeigen der Tabelle
ft_post_hoc_Intensität_Wirk_muskulär
```

```{r}
#| label: tbl-Post_hoc_Intensitaet_Wirk_Brutto
#| tbl-cap-location: top
#| tbl-cap: "Tukey-HSD-Post-hoc-Test der Intensitäten für den Bruttowirkungsgrad"

ft_post_hoc_Intensität_Wirk_Brutto<- readRDS("rds/ft_post_hoc_Intensität_Wirk_Brutto.rds")

# Anzeigen der Tabelle
ft_post_hoc_Intensität_Wirk_Brutto
```

```{r}
#| label: tbl-Post_hoc_Intensitaet_Wirk_Arbeit
#| tbl-cap-location: top
#| tbl-cap: "Tukey-HSD-Post-hoc-Test der Intensitäten für den Arbeitswirkungsgrad im Sitzen"

ft_post_hoc_Wirk_Arbeit <- readRDS("rds/ft_post_hoc_Wirk_Arbeit.rds")

# Anzeigen der Tabelle
ft_post_hoc_Wirk_Arbeit
```

### Bedingungen & Intensitäten
```{r}
#| label: tbl-Wirkungsgrad_Bedingung_Intensitaet_mean
#| tbl-cap-location: top
#| tbl-cap: "Deskriptive Statistik der Wirkungsgrade und Energiebereitstellung: MW ± SD, Min & Max nach Bedingungen und Intensitäten"

ft_Wirkungsgrad_stats_Bedingung_Intensitaet_mean <- readRDS("rds/ft_Wirkungsgrad_stats_Bedingung_Intensitaet_mean.rds")

# Anzeigen der Tabelle
ft_Wirkungsgrad_stats_Bedingung_Intensitaet_mean
```

```{r}
#| label: tbl-Post_hoc_sitzen
#| tbl-cap-location: top
#| tbl-cap: "Tukey-HSD-Post-hoc-Test des muskulären Wirkungsgrades zwischen den Intensitäten innerhalb der Bedingung Sitzen"

ft_post_hoc_sitzen <- readRDS("rds/ft_post_hoc_sitzen.rds")

# Anzeigen der Tabelle
ft_post_hoc_sitzen
```

```{r}
#| label: tbl-ANOVA_Wirk_muskulaer
#| tbl-cap-location: top
#| tbl-cap: "Einfaktorielle ANOVAs zum Vergleich des muskulären Wirkungsgrades der verschiedenen Intensitäten je Bedingung"

ft_anova_Wirk_muskulär <- readRDS("rds/ft_anova_Wirk_muskulär.rds")

# Anzeigen der Tabelle
ft_anova_Wirk_muskulär 
```

```{r}
#| label: tbl-ANOVA_Wirk_Total
#| tbl-cap-location: top
#| tbl-cap: "Einfaktorielle ANOVAs zum Vergleich des Gesamtwirkungsgrades der verschiedenen Intensitäten je Bedingung"

ft_anova_Wirk_Total <- readRDS("rds/ft_anova_Wirk_Total.rds")

# Anzeigen der Tabelle
ft_anova_Wirk_Total 
```

```{r}
#| label: tbl-Post_hoc_stehen_Wirk_Netto
#| tbl-cap-location: top
#| tbl-cap: "Tukey-HSD-Post-hoc-Test des Nettowirkungsgrades zwischen den Intensitäten innerhalb der Bedingung Stehen"

ft_post_hoc_Stehen_Wirk_Netto <- readRDS("rds/ft_post_hoc_Stehen_Wirk_Netto.rds")

# Anzeigen der Tabelle
ft_post_hoc_Stehen_Wirk_Netto
```

```{r}
#| label: tbl-Post_hoc_stehen_Wirk_Brutto
#| tbl-cap-location: top
#| tbl-cap: "Tukey-HSD-Post-hoc-Test des Bruttowirkungsgrades zwischen den Intensitäten innerhalb der Bedingung Stehen"

ft_post_hoc_Stehen_Wirk_Brutto <- readRDS("rds/ft_post_hoc_Stehen_Wirk_Brutto.rds")

# Anzeigen der Tabelle
ft_post_hoc_Stehen_Wirk_Brutto
```
:::

#### Muskulärer Wirkungsgrad { .unlisted}
Der muskuläre Wirkungsgrad beträgt im Mittel über alle Bedingungen und Intensitäten 24.53 ± 1.10% mit einer Spannweite von 22.46% bis 26.91%. Bei differenzierter Betrachtung der Bedingungen zeigt sich ein signifikant höherer Wert in sitzender Position mit 24.98 ± 1.06% im Vergleich zur stehenden Position mit 24.07 ± 0.96%. Die einfaktorielle Varianzanalyse zeigt einen signifikanten Unterschied zwischen den Bedingungen (F(1,8) = 7.64, p = .024, η~p~^2^ = .489).<br>
Bei Betrachtung der verschiedenen Intensitätsstufen zeigt sich ein systematischer Abfall des η~muskulär~ von 24.94 ± 1.27% bei leichter über 24.50 ± 1.01% bei moderater bis zu 24.14 ± 0.90% bei schwerer Intensität. Die einfaktorielle Varianzanalyse zeigt einen signifikanten Effekt der Intensität (F(2,16) = 5.23, p = .018, η~p~^2^ = .395). Die Post-hoc-Analysen zeigen einen tendenziell signifikanten Unterschied zwischen leichter und schwerer Intensität mit einer mittleren Effektstärke (p = .074, d = .75), während die Vergleiche zwischen moderater und leichter Intensität (p = .443, d = 0.41) sowie zwischen schwerer und moderater Intensität (p = .574, d = 0.34) keine signifikanten Unterschiede aufweisen.<br>
Die einfaktorielle Varianzanalyse des η~muskulär~ innerhalb der Bedingungen zeigt in sitzender Position einen signifikanten Effekt der Intensität (F(2,16) = 10.19, p = .001, η~p~^2^ = .560). Die Post-hoc-Analysen zeigen zwischen leichter und schwerer Intensität einen signifikanten Unterschied mit einer großen Effektstärke (p = .017, d = 1.31). Der Vergleich zwischen moderater und leichter Intensität weist eine große Effektstärke auf, erreicht jedoch keine Signifikanz (p = .217, d = .83). Zwischen schwerer und moderater Intensität zeigt sich ein nicht-signifikanter Unterschied bei mittlerer Effektstärke (p = .427, d = .63) (@tbl-Post_hoc_sitzen). In der stehenden Position hingegen bleibt der η~muskulär~ über die Intensitäten hinweg relativ stabil, was durch die einfaktorielle Varianzanalyse bestätigt wird (F(2,16) = 0.55, p = .590, η~p~^2^ = .064).<br>
Eine differenzierte Analyse der Positionen (sitzend/stehend) innerhalb der einzelnen Intensitätsstufen zeigt, dass der Unterschied zwischen sitzender und stehender Position mit zunehmender Intensität abnimmt. Bei leichter Intensität zeigt der Vergleich zwischen sitzender und stehender Position einen hochsignifikanten Unterschied (F(1,8) = 16.63, p = .004, η~p~^2^ = .675), bei moderater Intensität einen tendenziell signifikanten Unterschied (F(1,8) = 5.26, p = .051, η~p~^2^ = .397) und bei schwerer Intensität keine signifikanten Unterschiede zwischen den Positionen (F(1,8) = 1.41, p = .269, η~p~^2^ = .150) (@tbl-ANOVA_Wirk_muskulaer). <br>
Die ermittelten η~muskulär~-Werte dieser Studie liegen, mit durchschnittlich 24.53 ± 1.10%, deutlich unterhalb der in @tbl-Wirkungsgrad dokumentierten Werte für η~muskulär~ von 31.0 ± 4.3% [@Bell2009]. Dass die hier ermittelten Werte niedriger ausfallen ist nachvollziehbar, da die Ergebnisse von @Bell2009 auch im Vergleich zur übrigen Literatur außergewöhnlich hohe Wirkungsgrade aufweisen, was auch in der Originalpublikation kritisch reflektiert wurde. Eine direkte Vergleichbarkeit der Absolutwerte ist daher nur eingeschränkt gegeben.

#### Gesamtwirkungsgrad { .unlisted} 
Der Gesamtwirkungsgrad η~Total~ liegt mit durchschnittlich 22.19 ± 1.07% (Range (R): 19.77-24.72%) erwartungsgemäß unter dem η~muskulär~. Zwischen den Bedingungen zeigen sich nur geringe Unterschiede (sitzen: 22.06 ± 0.70%, stehen: 22.32 ± 1.34%). Die nicht-parametrische Analyse mittels Wilcoxon-Test bestätigt dabei keine signifikanten Unterschiede zwischen den Bedingungen (V = 139, p = .234, r = .229). Auch über die Intensitäten hinweg bleibt η~Total~ weitgehend stabil mit einem leichten Abfall von 22.35 ± 1.10% bei leichter zu 22.01 ± 0.96% bei schwerer Intensität. Die einfaktorielle Varianzanalyse zeigt entsprechend keinen signifikanten Effekt der Intensität (F~(2,16)~ = 1.26, p = .311, η~p~^2^ = .136).<br>
Bei differenzierter Betrachtung des η~Total~ innerhalb der Bedingungen zeigt sich in sitzender Position ein tendenziell signifikanter Effekt der Intensität (F~(2,16)~ = 3.11, p = .072) mit großer Effektstärke (η~p~^2^ = .280). In der stehenden Position hingegen bleibt der η~Total~ über die Intensitäten hinweg sehr stabil, was durch die einfaktorielle Varianzanalyse bestätigt wird (F~(2,16)~ = 0.09, p = .911, η~p~^2^ = .012).<br>
Bei leichter und moderater Intensität zeigte der Vergleich zwischen sitzender und stehender Position keine signifikanten Unterschiede (F(1,8) = 0.031, p = .865, η~p~^2^ = .004; F(1,8) = 0.663, p = .439, η~p~^2^ = .077). Bei schwerer Intensität präsentierte sich ein nicht signifikanter Unterschied mit großer Effektstärke (F(1,8) = 2.388, p = .161, η~p~^2^ = .230) (@tbl-ANOVA_Wirk_Total).

#### Nettowirkungsgrad { .unlisted} 
Der Nettowirkungsgrad η~Netto~ beträgt durchschnittlich 24.94 ± 1.23% (R: 22.13-28.18%). Zwischen den Bedingungen (sitzen: 24.81 ± 0.82%, stehen: 25.07 ± 1.55%) zeigt der Wilcoxon-Test keine signifikanten Unterschiede (V = 139, p = .234, r = .229). Über die Intensitäten hinweg ist ein leichter Anstieg von 24.79 ± 1.22% bei leichter zu 25.08 ± 1.30% bei schwerer Intensität zu beobachten. Die einfaktorielle Varianzanalyse zeigt jedoch keinen signifikanten Effekt der Intensität (F(2,16) = 0.59, p = .565, η~p~^2^ = .069).<br>
Bei differenzierter Analyse des η~Netto~ innerhalb der Bedingungen zeigt sich in sitzender Position kein signifikanter Effekt der Intensität (F(2,16) = 0.07, p = .929, η~p~^2^ = .009), mit homogenen Werten über alle Intensitätsstufen (leicht: 24.89 ± 0.86%, moderat: 24.78 ± 0.70%, schwer: 24.77 ± 0.97%). In stehender Position hingegen ergibt sich ein signifikanter Effekt der Intensität (F(2,16) = 4.18, p = .035, η~p~^2^ = .343), charakterisiert durch einen systematischen Anstieg von leichter (24.70 ± 1.54%) über moderate (25.12 ± 1.65%) zu schwerer Intensität (25.39 ± 1.56%). Die Post-hoc Analysen zeigen jedoch keine signifikanten Unterschiede zwischen den einzelnen Intensitätsstufen (alle p > .63) (@tbl-Post_hoc_stehen_Wirk_Netto).<br>
Die positionsvergleichende Analyse ergab bei leichter Intensität keinen signifikanten Unterschied (F(1,8) = 0.148, p = .711, η~p~^2^ = .018). Ebenso zeigte sich bei moderater Intensität kein signifikanter Unterschied (F(1,8) = 0.842, p = .386, η~p~^2^ = .095). Bei schwerer Intensität wurde ein nicht signifikanter Unterschied mit großer Effektstärke festgestellt (F(1,8) = 2.880, p = .128, η~p~^2^ = .265).
<br>
Die ermittelten η~Netto~-Werte liegen mit einer Spanne von 22.13-28.18% und einem Mittelwert von 24.94% oberhalb der in @tbl-Wirkungsgrad am häufigsten dokumentierten η~Netto~-Werte von ca. 19-24%. Im Gegensatz zu @Harnish2007, die in beiden Körperpositionen einen Anstieg des η~Netto~ mit zunehmender Intensität dokumentierten, zeigt die vorliegende Untersuchung ausschließlich in stehender Position einen signifikanten Intensitätseffekt.

#### Bruttowirkungsgrad { .unlisted}
Der Bruttowirkungsgrad η~Brutto~ liegt mit 22.43 ± 1.17% (R: 19.65-25.76%) erwartungsgemäß unter dem Nettowirkungsgrad und zeigt zwischen den Bedingungen (sitzen: 22.30 ± 0.78%, stehen: 22.55 ± 1.47%) keine signifikanten Unterschiede (V = 131, p = .167, r = .266). Über die Intensitätsstufen hinweg zeigt sich, bedingt durch den reduzierten Anteil des Ruheenergieumsatzes am aeroben Energieumsatz, ein systematischer Anstieg von leichter (22.06 ± 1.17%) über moderate (22.46 ± 1.18%) zu schwerer Intensität (22.76 ± 1.13%). Die einfaktorielle Varianzanalyse bestätigt einen signifikanten Effekt der Intensität (F(2,16) = 5.17, p = .019, η~p~^2^ = .393).<br>
Die Analyse des η~Brutto~ innerhalb der Bedingungen zeigt in sitzender Position keinen signifikanten Effekt der Intensität (F(2,16) = 0.80, p = .469, η~p~^2^ = .090), mit einem leichten Anstieg von leichter (22.12 ± 0.90%) zu schwerer Intensität (22.48 ± 0.74%). In stehender Position hingegen ergibt sich ein signifikanter Effekt der Intensität (F(2,16) = 13.72, p < .001, η~p~^2^ = .632), mit einem deutlicheren Anstieg von leichter (22.00 ± 1.45%) zu schwerer Intensität (23.04 ± 1.41%). Die Post-hoc Analysen zeigen dabei eine mittlere Effektstärke zwischen leichter und schwerer Intensität (d = 0.71), wenngleich die Unterschiede das Signifikanzniveau nicht erreichen (p = .308) (@tbl-Post_hoc_stehen_Wirk_Brutto).<br>
Die Analyse zwischen sitzender und stehender Position offenbarte bei leichter Intensität keinen signifikanten Unterschied (F(1,8) = 0.210, p = .659, η~p~^2^ = .026). Auch bei moderater Intensität zeigten sich keine signifikanten Abweichungen (F(1,8) = 0.658, p = .441, η~p~^2^ = .076). Bei schwerer Intensität wurde ein nicht signifikanter Unterschied mit großer Effektstärke beobachtet (F(1,8) = 2.557, p = .148, η~p~^2^ = .242).<br>
Die ermittelten η~Brutto~-Werte bewegen sich mit einer Spanne von 19.65-25.76% und einem Mittelwert von 22.43% im oberen Bereich der in @tbl-Wirkungsgrad am häufigsten dokumentierten η~Brutto~-Werte von etwa 19-23%. Der beobachtete Anstieg des η~Brutto~ mit zunehmender Intensität, korrespondiert mit den Befunden mehrerer Studien (@Seabury1977, @Chavarren1999, @Zoladz2023a), die ebenfalls einen systematischen Anstieg des η~Brutto~ bei höherer Belastungsintensität dokumentierten.

#### Arbeitswirkungsgrad { .unlisted} 
Der Arbeitswirkungsgrad η~Arbeit,sitzen~ wurde aufgrund des nicht bestimmten Sauerstoffumsatzes für die Leerbewegung im Stehen ausschließlich für die sitzende Position berechnet. Mit durchschnittlich 25.91 ± 1.39% (R: 23.54-28.64%) liegt er über dem muskulären Wirkungsgrad und weist die höchsten Werte im Vergleich zu allen anderen berechneten Wirkungsgraden auf. Über die Intensitäten hinweg zeigt sich ein systematischer Abfall von leichter (26.86 ± 1.48%) über moderater (25.81 ± 0.96%) zu schwerer Intensität (25.05 ± 1.16%). Die einfaktorielle Varianzanalyse zeigt einen signifikanten Effekt der Intensität (F~(2,16)~ = 13.34, p < .001) mit großer Effektstärke (η~p~^2^ = .63). Die Post-hoc Analysen bestätigen signifikante Unterschiede zwischen folgenden Intensitätsstufen (schwer-leicht: p = .009, d = -1.389; schwer-moderat: p = .021, d = -1.199). Zwischen der moderaten und leichten Intensitätsstufe zeigte sich ein tendenziell signifikanter Unterschied (p = .067, d = -0.941) (@tbl-Post_hoc_Intensitaet_Wirk_Arbeit).<br>
Die für die sitzende Position ermittelten η~Arbeit~-Werte ordnen sich mit durchschnittlich 25.91 ± 1.39% in dem mittleren Bereich der von @Gaesser1975 (25-28%) und @Luhtanen1987 (21.0-29.7%) berichteten Spannweiten ein. Die beobachtete systematische Reduktion des η~Arbeit~ mit zunehmender Belastungsintensität bestätigt dabei die von @Luhtanen1987 dokumentierten Effekte.

::: {.callout-note collapse="true"}
### Tabellarische Übersicht unterschiedlich berechneter Wirkungsgrade
```{r}
#| label: tbl-Wirkungsgrad
#| tbl-cap-location: top
#| tbl-cap:  "Tabellarische Übersicht unterschiedlich berechneter Wirkungsgrade beim Fahrradfahren unter verschiedenen Bedingungen"

library(flextable)
library(dplyr)
library(officer)

ft_Wirkungsgrad <- readRDS("rds/ft_Wirkungsgrad.rds")

# Anzeigen der Tabelle
ft_Wirkungsgrad
```
:::

#### Parameter des physiologischen Energieumsatzes { .unlisted}
Der physiologische Gesamtenergieumsatz W~TOT~ beträgt im Mittel 386.3 ± 75.5 kJ (R: 227.8-567.1 kJ). Zwischen den Bedingungen zeigen sich nur geringe Unterschiede (sitzen: 384.1 ± 79.3 kJ, stehen: 388.5 ± 73.0 kJ). Die einfaktorielle Varianzanalyse zeigt entsprechend keine signifikanten Unterschiede zwischen den Bedingungen (F~(1,8)~ = 0.410, p = .540, η~p~^2^ = .049). Über die Intensitäten hinweg ist ein systematischer Anstieg von leichter (344.2 ± 56.4 kJ) über moderate (389.3 ± 69.4 kJ) zu schwerer Intensität (425.4 ± 79.2 kJ) zu beobachten. Die einfaktorielle Varianzanalyse bestätigt einen signifikanten Effekt der Intensität (F~(2,16)~ = 10.19, p = .001, η~p~^2^ = .560). Bei differenzierter Betrachtung des W~TOT~ innerhalb der Bedingungen zeigt sich dieser Anstieg sowohl in sitzender (leicht: 342.5 ± 60.2 kJ, moderat: 388.7 ± 72.7 kJ, schwer: 421.1 ± 89.7 kJ) als auch in stehender Position (leicht: 345.9 ± 55.9 kJ, moderat: 389.9 ± 70.3 kJ, schwer: 429.7 ± 72.4 kJ).

Der aerobe Energiebeitrag W~Aerob~ macht mit durchschnittlich 343.2 ± 65.1 kJ (R: 211.7-502.4 kJ) den Großteil des Gesamtenergieumsatzes aus. Zwischen den Bedingungen zeigen sich nur geringe Unterschiede (sitzen: 341.0 ± 68.2 kJ, stehen: 345.5 ± 62.9 kJ). Die einfaktorielle Varianzanalyse bestätigt keine signifikanten Unterschiede zwischen den Bedingungen (F~(1,8)~ = 0.559, p = .476, η~p~^2^ = .065). Über die Intensitäten hinweg zeigt sich ein systematischer Anstieg von leichter (309.9 ± 48.8 kJ) über moderate (346.0 ± 59.1 kJ) zu schwerer Intensität (373.8 ± 71.8 kJ).

Der anaerobe Energiebeitrag W~PCr~ beträgt im Mittel 31.0 ± 9.9 kJ (R: 11.9-55.9 kJ). Zwischen den Bedingungen zeigen sich nur geringe Unterschiede (sitzen: 30.6 ± 9.4 kJ, stehen: 31.5 ± 10.5 kJ). Die einfaktorielle Varianzanalyse zeigt entsprechend keine signifikanten Unterschiede zwischen den Bedingungen (F~(1,8)~ = 0.535, p = .485, η~p~^2^ = .063). Über die Intensitäten hinweg ist ein systematischer Anstieg von leichter (26.4 ± 8.0 kJ) über moderate (31.2 ± 10.4 kJ) zu schwerer Intensität (35.5 ± 9.9 kJ) zu beobachten.

Der anaerobe Energiebeitrag W~BLC~ beträgt im Mittel 12.0 ± 4.9 kJ (R: 4.2-24.8 kJ). Zwischen den Bedingungen zeigen sich nur geringe Unterschiede (sitzen: 12.5 ± 5.3 kJ, stehen: 11.5 ± 4.4 kJ). Die einfaktorielle Varianzanalyse zeigt entsprechend keine signifikanten Unterschiede zwischen den Bedingungen (F~(1,8)~ = 0.865, p = .380, η~p~^2^ = .098). Über die Intensitäten hinweg ist ein systematischer Anstieg von leichter (7.6 ± 2.1 kJ) über moderate (11.9 ± 3.2 kJ) zu schwerer Intensität (15.8 ± 4.5 kJ) zu beobachten.

Die Netto-Blutlaktatakkumulation (ΔBLC) beträgt im Mittel 2.75 ± 1.19 mmol·l^-1^ (R: 1.08-6.67 mmol·l^-1^). Zwischen den Bedingungen zeigen sich nur geringe Unterschiede (sitzen: 2.82 ± 1.30 mmol·l^-1^, stehen: 2.60 ± 1.07 mmol·l^-1^). Der Wilcoxon-Test bestätigt keine signifikanten Unterschiede zwischen den Bedingungen (V = 217, p = .509, r = .127). Über die Intensitäten hinweg ist ein systematischer Anstieg von leichter (1.74 ± 0.44 mmol·l^-1^) über moderate (2.72 ± 0.80 mmol·l^-1^) zu schwerer Intensität (3.68 ± 1.24 mmol·l^-1^) zu beobachten. Bei differenzierter Betrachtung der ΔBLC innerhalb der Bedingungen zeigt sich dieser Anstieg sowohl in sitzender (leicht: 1.72 ± 0.54 mmol·l^-1^, moderat: 2.80 ± 0.83 mmol·l^-1^, schwer: 3.95 ± 1.16 mmol·l^-1^) als auch in stehender Position (leicht: 1.76 ± 0.34 mmol·l^-1^, moderat: 2.64 ± 0.79 mmol·l^-1^, schwer: 3.41 ± 1.32 mmol·l^-1^).

#### Ergometrische Parameter zur Bestimmung des Wirkungsgrades
Die Gesamtleistung P~Tot~ beträgt im Mittel 316.5 ± 57.9 W (R: 199.2-452.5 W). Zwischen den Bedingungen zeigen sich signifikante Unterschiede (F~(1,8)~ = 6.388, p = .035, η~p~^2^ = .444) mit höheren Werten in sitzender Position (322.0 ± 60.1 W) im Vergleich zur stehenden Position (311.0 ± 56.2 W). Über die Intensitäten hinweg ist ein systematischer Anstieg von leichter (285.9 ± 48.2 W) über moderate (317.3 ± 54.6 W) zu schwerer Intensität (346.4 ± 56.6 W) zu beobachten. Dieser Anstieg zeigt sich sowohl in sitzender (leicht: 292.9 ± 51.9 W, moderat: 322.2 ± 58.1 W, schwer: 350.9 ± 61.6 W) als auch in stehender Position (leicht: 278.9 ± 46.1 W, moderat: 312.4 ± 53.8 W, schwer: 341.9 ± 54.6 W).

Die mechanische Leistung P~mech~ beträgt im Mittel 286.7 ± 54.3 W (R: 173.2-411.8 W). Zwischen den Bedingungen zeigen sich signifikante Unterschiede (F~(1,8)~ = 13.460, p = .006, η~p~^2^ = .628) mit niedrigeren Werten in sitzender Position (284.6 ± 53.4 W) im Vergleich zur stehenden Position (288.9 ± 56.1 W). Über die Intensitäten hinweg ist ein systematischer Anstieg von leichter (256.4 ± 43.7 W) über moderate (287.8 ± 51.2 W) zu schwerer Intensität (316.0 ± 52.6 W) zu beobachten. Dieser Anstieg zeigt sich sowohl in sitzender (leicht: 255.3 ± 44.2 W, moderat: 284.9 ± 50.7 W, schwer: 313.4 ± 53.3 W) als auch in stehender Position (leicht: 257.5 ± 45.8 W, moderat: 290.6 ± 54.6 W, schwer: 318.7 ± 55.1 W).

Die interne Leistung P~Int~ beträgt im Mittel 29.8 ± 12.1 W (R: 14.1-59.6 W). Zwischen den Bedingungen zeigen sich signifikante Unterschiede (V = 369, p < .001, r = .830) mit höheren Werten in sitzender Position (37.5 ± 11.3 W) im Vergleich zur stehenden Position (22.1 ± 6.9 W). Über die Intensitäten hinweg ist die interne Leistung weitgehend konstant (leicht: 29.5 ± 12.6 W, moderat: 29.5 ± 12.3 W, schwer: 30.4 ± 12.0 W). Dies zeigt sich sowohl in sitzender (leicht: 37.6 ± 11.6 W, moderat: 37.3 ± 11.8 W, schwer: 37.5 ± 11.9 W) als auch in stehender Position (leicht: 21.4 ± 7.4 W, moderat: 21.8 ± 6.9 W, schwer: 23.2 ± 7.1 W).

Die Drehzahl beträgt im Mittel 79.4 ± 12.2 U·min^-1^ (R: 58.6-101.5 U·min^-1^). Zwischen den Bedingungen zeigen sich signifikante Unterschiede (V = 378, p < .001, r= .872) mit höheren Werten in sitzender Position (89.1 ± 6.6 U·min^-1^) im Vergleich zur stehenden Position (69.8 ± 8.1 U·min^-1^). Über die Intensitäten hinweg bleibt die Drehzahl konstant (leicht: 79.4 ± 12.3 U·min^-1^, moderat: 79.4 ± 12.3 U·min^-1^, schwer: 79.4 ± 12.6 U·min^-1^). Dies zeigt sich sowohl in sitzender (leicht: 89.1 ± 6.3 U·min^-1^, moderat: 89.1 ± 6.6 U·min^-1^, schwer: 89.0 ± 7.7 U·min^-1^) als auch in stehender Position (leicht: 69.7 ± 8.2 U·min^-1^, moderat: 69.8 ± 8.4 U·min^-1^, schwer: 69.9 ± 8.6 U·min^-1^).

# Quellenverzeichnis

::: {#refs}
:::

