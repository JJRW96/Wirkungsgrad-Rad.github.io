[
  {
    "objectID": "Abkuerzungsverzeichnis.html",
    "href": "Abkuerzungsverzeichnis.html",
    "title": "",
    "section": "",
    "text": "Code\n\n\n\n\n\n\n\n\nAbkürzungsverzeichnis\n\\[\n\\begin{alignat*}{2}\n&A_{\\text{fast}} \\text{ [ml·min}^{-1}\\text{]}:&& \\text{ Amplitude der schnellen EPOC-Komponente} \\\\[1ex]\n&A_{\\text{slow}} \\text{ [ml·min}^{-1}\\text{]}:&& \\text{ Amplitude der langsamen EPOC-Komponente} \\\\[1ex]\n&C_{\\text{a}} \\text{ [ml O}_2\\text{·100ml}^{-1}\\text{]}:&& \\text{ Arterielle Sauerstoffkonzentration} \\\\[1ex]\n&C_{\\text{v}} \\text{ [ml O}_2\\text{·100ml}^{-1}\\text{]}:&& \\text{ Venöse Sauerstoffkonzentration} \\\\[1ex]\n&\\Delta\\text{BLC} \\text{ [mmol·l}^{-1}\\text{]}: && \\text{ Netto-Blutlaktatakkumulation (Post - Pre)} \\\\[1ex]\n&\\Delta\\text{G} \\text{ [kJ]}: && \\text{ Änderung der Gibbs'schen freien Energie} \\\\[1ex]\n&\\Delta\\dot{\\text{V}}\\text{O}_{2} \\text{ [l·min}^{-1}\\text{]}: && \\text{ Differenz zwischen zwei Sauerstoffvolumenströmen bzw. die Amplitude des Sauerstoffvolumenstroms} \\\\[1ex]\n&\\text{E}_{\\text{kin,rot}}: && \\text{ Rotatorische kinetische Energiekomponente} \\\\[1ex]\n&\\text{E}_{\\text{kin,trans}}: && \\text{ Translatorische kinetische Energiekomponente} \\\\[1ex]\n&\\text{E}_{\\text{Tot}} \\text{ [kJ]}: && \\text{ Gesamte umgesetzte chemische Energie} \\\\[1ex]\n&\\text{EPOC}_{\\text{fast}} \\text{ [l]}:&& \\text{ EPOC der schnellen Komponente} \\\\[1ex]\n&\\text{EPOC}_{\\text{fast}} \\text{ [ml·kg}^{-1}\\text{]}: && \\text{ Auf Körpermasse normierte EPOC der schnellen EPOC} \\\\[1ex]\n&\\text{EPOC}_{\\text{ges}} \\text{ [l]}:&& \\text{ EPOC der gesamten Nachbelstung} \\\\[1ex]\n&\\text{EPOC}_{\\text{ges}} \\text{ [ml·kg}^{-1}\\text{]}:&& \\text{ Auf Körpermasse normierte EPOC-Werte} \\\\[1ex]\n&\\text{EPOC}_{\\text{PCr}} \\text{ [l]}:&& \\text{ EPOC Menge die der Rephosphorylierung von PCr zugeordnet wird} \\\\[1ex]\n&\\text{EPOC}_{\\text{PCr}} \\text{ [ml·kg}^{-1}\\text{]}: && \\text{ Auf Körpermasse normierte EPOC der PCr-Rephosphorylierung} \\\\[1ex]\n&\\eta_{\\text{Arbeit,sitzen}} \\text{ [%]}: && \\text{ Arbeitswirkungsgrad (sitzende Position)} \\\\[1ex]\n&\\eta_{\\text{Brutto}} \\text{ [%]}: && \\text{ Bruttowirkungsgrad} \\\\[1ex]\n&\\eta_{\\text{Delta}}: && \\text{ Deltawirkungsgrad} \\\\[1ex]\n&\\eta_{\\text{muskulär}} \\text{ [%]}: && \\text{ Muskulärer Wirkungsgrad} \\\\[1ex]\n&\\eta_{\\text{Netto}} \\text{ [%]}: && \\text{ Nettowirkungsgrad} \\\\[1ex]\n&\\eta_{\\text{Total}} \\text{ [%]}: && \\text{ Gesamtwirkungsgrad} \\\\[1ex]\n&\\text{kÄ} \\text{ [kJ·l}^{-1}\\text{]}:&& \\text{ Kalorisches Äquivalent für einen bestimmten RQ-Wert} \\\\[1ex]\n&\\text{kÄ}_{\\text{KH}} \\text{ [kJ·l}^{-1}\\text{]}:&& \\text{ Kalorisches Äquivalent für Kohlenhydrate} \\\\[1ex]\n&\\text{nD [U·min}^{-1}\\text{]}: && \\text{ Drehzahl: Definiert als die Anzahl vollständiger Rotationen der Tretkurbel pro Zeiteinheit} \\\\[1ex]\n&\\text{O}_{2}\\text{-Speicher} \\text{ [l]}:&& \\text{ Körpereigene Sauerstoffspeicher} \\\\[1ex]\n&\\text{P}_{\\text{Int}} \\text{ [W]}: && \\text{ Innere Leistung} \\\\[1ex]\n&\\text{P}_{\\text{mech}} \\text{ [W]}: && \\text{ Mechanische Leistung} \\\\[1ex]\n&\\text{P}_{\\text{Tot}} \\text{ [W]}: && \\text{ Gesamtleistung} \\\\[1ex]\n&\\text{PCr}_{\\text{Norm}} \\text{ [mmol·kg}^{-1}\\text{]}:&& \\text{ Normwert der PCr-Konzentration} \\\\[1ex]\n&\\text{PCr}_{\\text{used}} \\text{ [mmol·kg}^{-1}\\text{]}:&& \\text{ Umgesetzte PCr-Menge pro kg Muskelfeuchmasse} \\\\[1ex]\n&\\text{P/O}_{2} \\text{ [mol ATP·mol O}_2^{-1}\\text{]}:&& \\text{ P/O}_{2}\\text{-Verhältnis} \\\\[1ex]\n&\\dot{Q} \\text{ [l·min}^{-1}\\text{]}:&& \\text{ Herzminutenvolumen} \\\\[1ex]\n&R^2:&& \\text{ Bestimmtheitsmaß der Modellanpassungen} \\\\[1ex]\n&R_{2,\\text{off}}: && \\text{ Bestimmtheitsmaß der EPOC-Modellanpassungen} \\\\[1ex]\n&\\text{RQ}:&& \\text{ Respiratorischer Quotient} \\\\[1ex]\n&t_{\\text{delay}} \\text{ [s]}:&& \\text{ Zeitverzögerung der EPOC-Modellanpassung} \\\\[1ex]\n&t_{1/2} \\text{ [s]}:&& \\text{ Halbwertszeit} \\\\[1ex]\n&\\tau_{\\text{A}} \\text{ [min]}:&& \\text{ Zeitkonstante der schnellen EPOC-Komponente} \\\\[1ex]\n&\\tau_{\\text{B}} \\text{ [min]}:&& \\text{ Zeitkonstante der langsamen EPOC-Komponente} \\\\[1ex]\n&\\tau_{\\text{fast}} \\text{ [min]}:&& \\text{ Zeitkonstante der schnellen EPOC-Komponente} \\\\[1ex]\n&\\tau_{\\text{on}} \\text{ [s]}: && \\text{ Zeitkonstante der monoexponentiellen Anpassung des Sauerstoffvolumenstroms} \\\\[1ex]\n&\\tau_{\\text{slow}} \\text{ [min]}:&& \\text{ Zeitkonstante der langsamen EPOC-Komponente} \\\\[1ex]\n&V_{\\text{m,O}_2} \\text{ [l·mol}^{-1}\\text{]}:&& \\text{ Molvolumen von Sauerstoff} \\\\[1ex]\n&\\text{VBV} \\text{ [l]}:&& \\text{ Venöses Blutvolumen} \\\\[1ex]\n&\\dot{\\text{V}}\\text{O}_{2} \\text{ [l·min}^{-1}\\text{]}:&& \\text{ Sauerstoffvolumenstrom} \\\\[1ex]\n&\\dot{\\text{V}}\\text{O}_{2,\\text{on,Start}} \\text{ [l·min}^{-1}\\text{]}: && \\text{ V̇O}_2\\text{ zu Beginn der Kinetik-Modellanpassung} \\\\[1ex]\n&\\dot{\\text{V}}\\text{O}_{2,\\text{Referenz}} \\text{ [l·min}^{-1}\\text{]}:&& \\text{ Sauerstoffvolumenstrom während der Referenzphase} \\\\[1ex]\n&\\dot{\\text{V}}\\text{O}_{2,\\text{Ruhe}} \\text{ [l·min}^{-1}\\text{]}:&& \\text{ Sauerstoffvolumenstrom in Ruhe} \\\\[1ex]\n&\\dot{\\text{V}}\\text{O}_{2,\\text{Start}} \\text{ [l·min}^{-1}\\text{]}:&& \\text{ Sauerstoffvolumenstrom zu Beginn der jeweiligen Belastungsintensität} \\\\[1ex]\n&\\text{W}_{\\text{Aerob}} \\text{ [kJ]}: && \\text{ Aerobe Energiebereitstellung} \\\\[1ex]\n&\\text{W}_{\\text{AER}} \\text{ [kJ]}: && \\text{ Aerobe Energiekomponente} \\\\[1ex]\n&\\text{W}_{\\text{BLC}} \\text{ [kJ]}: && \\text{ Anaerob-laktazide Energiekomponente} \\\\[1ex]\n&\\text{W}_{\\text{Ext}} \\text{ [kJ]}: && \\text{ Externe Arbeit} \\\\[1ex]\n&\\text{W}_{\\text{Int}} \\text{ [kJ]}: && \\text{ Innere Arbeit} \\\\[1ex]\n&\\text{W}_{\\text{PCr}} \\text{ [kJ]}:&& \\text{ Berechnete anaerobe-alaktazide Energiekomponente} \\\\[1ex]\n&\\text{W}_{\\text{PCr,corrected}} \\text{ [kJ]}:&& \\text{ Berechnete anaerobe-alaktazide Energiekomponente abzüglich der Sauerstoffspeicher} \\\\[1ex]\n&\\text{W}_{\\text{TOT}} \\text{ [kJ]}: && \\text{ Gesamtenergieumsatz aus allen Stoffwechselwegen} \\\\[1ex]\n\\end{alignat*}\n\\]",
    "crumbs": [
      "Abkürzungsverzeichnis"
    ]
  },
  {
    "objectID": "Forschungsfragen_Hypothesen.html#fragestellung-und-forschungsfrage",
    "href": "Forschungsfragen_Hypothesen.html#fragestellung-und-forschungsfrage",
    "title": "Forschungsfragen & Hypothesen",
    "section": "Fragestellung und Forschungsfrage",
    "text": "Fragestellung und Forschungsfrage\nDer aktuelle Forschungsstand zu den Unterschieden physiologischer Belastungsparameter und des Wirkungsgrades zwischen sitzender und stehender Fahrposition beim Radfahren ist limitiert. Die vorhandenen Studien untersuchten dabei vorrangig die physiologischen Belastungsparameter Herzrate und Blutlaktat sowie die respiratorischen Parameter \\(\\dot{V}O_{2}\\,(t)\\), \\(\\dot{V}CO_{2}\\,(t)\\) und die pulmonale Ventilation (\\(\\dot{V}E\\,(t)\\)). Die bisherigen Untersuchungen zum Wirkungsgradvergleich zwischen sitzender und stehender Position zeigen ein differenziertes Bild, wobei bei niedrigen und moderaten Intensitäten sowohl Brutto- als auch Nettowirkungsgrade im Stehen signifikant niedrigere Werte aufweisen, begleitet von signifikant höheren physiologischen Belastungsparametern (\\(\\dot{V}O_{2}\\) und HR) (Berkemeier et al., 2020; Ryschon & Stray-Gundersen, 1991; Tanaka et al., 1996). Diese Unterschiede gleichen sich jedoch bei Intensitäten über etwa 80% der \\(\\dot{V}O_{2,max}\\) zwischen den Positionen an (Arkesteijn et al., 2016; Hansen & Waldeland, 2008; Harnish et al., 2007; Millet et al., 2002; Tanaka et al., 1996). Methodisch basierten diese Studien ausschließlich auf der Messung von \\(\\dot{V}O_{2}\\) und \\(\\dot{V}CO_{2}\\) zur Bestimmung des physiologischen Energieumsatzes, wobei entweder ηbrutto (Bouillod & Pinot, 2014; Carlsson et al., 2024; Millet et al., 2002) oder ηnetto (Harnish et al., 2007) berechnet wurde. Bei den Untersuchungen der Wirkungsgrade über verschiedene Bedingungen sowie teils verschiedene Intensitätsstufen (Carlsson et al., 2024; Harnish et al., 2007; Millet et al., 2002) konnte nur in der Studie von Bouillod & Pinot (2014) ein im Mittel signifikanter Unterschied zwischen den Sitz- und Stehpositionen nachgewiesen werden.  Eine wesentliche methodische Einschränkung der vorliegenden Wirkungsgradbestimmungen liegt in der ausschließlichen Erfassung des aeroben Energieumsatzes unter Vernachlässigung anaerob alaktazider und laktazider Komponenten. Die in dieser Studie berechneten Wirkungsgrade ηTotal und ηmuskulär berücksichtigen hingegen sowohl aerobe als auch anaerobe Energieanteile. ηmuskulär adressiert zusätzlich eine methodische Limitation der Wirkungsgrade ηbrutto, ηnetto und ηTotal, die in der Vernachlässigung der inneren Arbeit der zyklischen Beinbewegung liegt. Diese stellt neben der mechanischen Arbeit gegen das Bremsmoment eine Komponente der zu erbringenden mechanischen Gesamtarbeit beim Radfahren dar. Da die innere Arbeit mit steigender Trittrate deutlich ansteigt, zeigen ηbrutto, ηnetto und ηTotal besonders bei sehr hohen Drehzahlen eine deutliche Drehzahlabhängigkeit. Der ηmuskulär integriert die innere Arbeit in die Berechnung der mechanischen Gesamtarbeit und weist keine Trittratenabhängigkeit auf (Böning et al., 2017).\nNach dem Wissen des Autors existieren derzeit keine empirischen Untersuchungen, die den ηmuskulär zwischen sitzender und stehender Fahrposition systematisch vergleichen. Die vorliegende Studie adressiert diese Forschungslücke mit der zentralen Fragestellung, inwiefern sich der muskuläre Wirkungsgrad bei leichter, moderater und schwerer Belastungsintensität zwischen den Fahrpositionen unterscheidet.",
    "crumbs": [
      "Forschungsfragen & Hypothesen"
    ]
  },
  {
    "objectID": "Forschungsfragen_Hypothesen.html#hypothesen",
    "href": "Forschungsfragen_Hypothesen.html#hypothesen",
    "title": "Forschungsfragen & Hypothesen",
    "section": "Hypothesen",
    "text": "Hypothesen\nBasierend auf den Forschungsfragen und der dargestellten Literatur wurde folgende Hypothese formuliert:\nEs wird erwartet, dass die Unterschiede des muskulären Wirkungsgrades zwischen den Fahrpositionen intensitätsabhängig sind. Die Annahme ist, dass sich bei leichter Belastungsintensität der muskuläre Wirkungsgrad signifikant zwischen sitzender und stehender Position unterscheidet, während bei moderater und schwerer Intensität keine signifikanten Unterschiede des muskulären Wirkungsgrades zwischen den Fahrpositionen vermutet werden. Der muskuläre Wirkungsgrad beschreibt das Verhältnis zwischen der über den Belastungszeitraum summierten inneren und externen Arbeit zur Summe der aeroben und anaeroben metabolischen Arbeit abzüglich der Arbeit des Ruheumsatzes (Tabelle 1).\n\nExplorative Analysen\nZur weiterführenden Untersuchung der formulierten Hypothesen sowie zur Identifikation und Charakterisierung potentieller Wirkmechanismen wurden ergänzende komparative Analysen durchgeführt. Diese zielten darauf ab, mögliche Unterschiede zwischen den verschiedenen Intensitäten und Bedingungen mechanistisch zu erklären.  Nach identischem statistischem Vorgehen und auf Basis der gleichen Hypothese erfolgte die systematische Evaluation mehrerer Wirkungsgrade sowie deren zugrundeliegender physiologischer und mechanischer Energiekomponenten. Dies umfasste die Analyse des Gesamtwirkungsgrades (ηTotal), Nettowirkungsgrades (ηNetto) sowie Bruttowirkungsgrades (ηBrutto). Der Arbeitswirkungsgrad (ηArbeit) unterlag einer separaten Analyse hinsichtlich der Belastungsintensität. Außerdem wurden explorativ die eben genannten Parameter zwischen sitzender und stehender Position unabhängig von der Intensität verglichen (Tabelle 1).\n\n\n\n\n\n\nTabelle 1: Vergleich der Wirkungsgradberechnungen\n\n\n\n\n\n\n\n\nTabelle 1: Modifizierte Berechnungswege der Wirkungsgrade nach Gaesser und Brooks (1975), Luhtanen et al. (1987) und Böning et al. (2017), ergänzt um den Gesamtwirkungsgrad (ηTotal).\n\n\n\n\n\n\n\n\n\nWirkungsgrade\nBerechnung\n\n\n\n\nηBrutto\nWmech / WAerob\n\n\nηNetto\nWmech / (WAerob - WRuhe)\n\n\nηTotal\nWmech / (WTot - WRuhe)\n\n\nηmuskulär\n(Wmech + WInt) / (WTot - WRuhe)\n\n\nηArbeit\nWmech / (WTot - WRuhe - WLeerbewegung)\n\n\nηdelta\nΔWmech / ΔWTot",
    "crumbs": [
      "Forschungsfragen & Hypothesen"
    ]
  },
  {
    "objectID": "Forschungsfragen_Hypothesen.html#quellenverzeichnis",
    "href": "Forschungsfragen_Hypothesen.html#quellenverzeichnis",
    "title": "Forschungsfragen & Hypothesen",
    "section": "Quellenverzeichnis",
    "text": "Quellenverzeichnis\n\n\nArkesteijn, M., Jobson, S., Hopker, J., & Passfield, L. (2016). The Effect of Cycling Intensity on Cycling Economy During Seated and Standing Cycling. International Journal of Sports Physiology and Performance, 11(January). https://doi.org/10.1123/ijspp.2015-0441\n\n\nBerkemeier, Q. N., Alumbaugh, B. W., Gillum, T., Coburn, J., Kim, J. K., Reeder, M., Fechtner, C. A., & Smith, G. A. (2020). Physiological and biomechanical differences between seated and standing uphill cycling. International Journal of Exercise Science, 13(2), 996–1011.\n\n\nBöning, D., Maassen, N., & Steinach, M. (2017). Der Wirkungsgrad von Muskelarbeit. Deutsche Zeitschrift fur Sportmedizin, 68(September), 203–214. https://doi.org/10.5960/dzsm.2017.295\n\n\nBouillod, A., & Pinot, J. (2014). Gross efficiency is improved in standing position with an increase of the power output. Journal of Science and Cycling, 3(July), 2014.\n\n\nCarlsson, M., Lindblom, O., & Carlsson, T. (2024). Steep uphill cycling using repeated transitions between seated and standing positions results in a lower blood-lactate concentration than continuous use of either seated or standing position. Frontiers in Sports and Active Living, 6(September), 1–7. https://doi.org/10.3389/fspor.2024.1395415\n\n\nHansen, E. A., & Waldeland, H. (2008). Seated versus standing position for maximization of performance during intense uphill cycling during intense uphill cycling. Journal of Sports Sciences, 26(October 2014), 37–41. https://doi.org/10.1080/02640410801910277\n\n\nHarnish, C., King, D., & Swensen, T. (2007). Effect of cycling position on oxygen uptake and preferred cadence in trained cyclists during hill climbing at various power outputs. European Journal of Applied Physiology, 99(4), 387–391. https://doi.org/10.1007/s00421-006-0358-7\n\n\nMillet, G., Tronche, C., Fuster, N., & Candau, R. (2002). Level ground and uphill cycling efficiency in seated and standing positions. Medicine and science in sports and exercise, 34(October), 1645–1652. https://doi.org/10.1249/01.MSS.0000031482.14781.D7\n\n\nRyschon, T. W., & Stray-Gundersen, J. (1991). The effect of body position on the energy cost of cycling. Medicine and science in sports and exercise, 23(8), 949–953.\n\n\nTanaka, H., Bassett, D. R. J., Best, S. K., & Baker, K. R. J. (1996). Seated versus standing cycling in competitive road cyclists: uphill climbing and maximal oxygen uptake. Canadian journal of applied physiology = Revue canadienne de physiologie appliquee, 21(2), 149–154. https://doi.org/10.1139/h96-013",
    "crumbs": [
      "Forschungsfragen & Hypothesen"
    ]
  },
  {
    "objectID": "Ergometer/Efficiency.html",
    "href": "Ergometer/Efficiency.html",
    "title": "",
    "section": "",
    "text": "Code"
  },
  {
    "objectID": "Ergometer/Efficiency.html#berechnung",
    "href": "Ergometer/Efficiency.html#berechnung",
    "title": "",
    "section": "1.1 Berechnung",
    "text": "1.1 Berechnung\n\n\n\nBerechnung der Torque Efficiency"
  },
  {
    "objectID": "Ergometer/Efficiency.html#tangentialleistungkg---verlauf",
    "href": "Ergometer/Efficiency.html#tangentialleistungkg---verlauf",
    "title": "",
    "section": "1.2 Tangentialleistung/kg - Verlauf",
    "text": "1.2 Tangentialleistung/kg - Verlauf\n\n1.2.1 Alle Bed x Int\n\n\n\n1.2.2 Leicht x Sitzen\n\n\n\n1.2.3 Leicht x Stehen\n\n\n\n1.2.4 Moderat x Sitzen\n\n\n\n1.2.5 Moderat x Stehen\n\n\n\n1.2.6 Schwer x Sitzen\n\n\n\n1.2.7 Schwer x Sitzen"
  },
  {
    "objectID": "Ergometer/Efficiency.html#kreisdiagramme",
    "href": "Ergometer/Efficiency.html#kreisdiagramme",
    "title": "",
    "section": "1.3 Kreisdiagramme",
    "text": "1.3 Kreisdiagramme\n\n1.3.1 Bedingungen\n\n\n\n\n\n\n\n\n\n\n\n1.3.2 Intensitäten\n\n\n\n\n\n\n\n\n\n\n\n1.3.3 Bedingungen x Intensität"
  },
  {
    "objectID": "Ergometer/Efficiency.html#efficiency---bedingungen-x-intensität",
    "href": "Ergometer/Efficiency.html#efficiency---bedingungen-x-intensität",
    "title": "",
    "section": "1.4 Efficiency - Bedingungen x Intensität",
    "text": "1.4 Efficiency - Bedingungen x Intensität"
  },
  {
    "objectID": "Ergometer/Efficiency.html#efficiency-vs.-w_kg",
    "href": "Ergometer/Efficiency.html#efficiency-vs.-w_kg",
    "title": "",
    "section": "1.5 Efficiency vs. W_kg",
    "text": "1.5 Efficiency vs. W_kg"
  },
  {
    "objectID": "Ergometer/Efficiency.html#durchschnittliche---efficiency-x-wattkg",
    "href": "Ergometer/Efficiency.html#durchschnittliche---efficiency-x-wattkg",
    "title": "",
    "section": "1.6 Durchschnittliche - Efficiency x Watt/kg",
    "text": "1.6 Durchschnittliche - Efficiency x Watt/kg"
  },
  {
    "objectID": "Ergebnisse/Wirkungsgrad_Statistik.html#interaktive-analyse-der-energieumsatz-komponenten",
    "href": "Ergebnisse/Wirkungsgrad_Statistik.html#interaktive-analyse-der-energieumsatz-komponenten",
    "title": "Wirkungsgrad- und Stoffwechselparameter",
    "section": "Interaktive Analyse der Energieumsatz-Komponenten",
    "text": "Interaktive Analyse der Energieumsatz-Komponenten\n#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| viewerHeight: 1200\nlibrary(shiny)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(plotly)\nlibrary(DT)\nlibrary(reactable)\nlibrary(htmltools)\nlibrary(shinylive)\nlibrary(dplyr)\nlibrary(DT)\n\n\nBedingungen_data_Wirkungsgrad &lt;- data.frame(\n  `Proband` = c( \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"6\", \"6\", \"6\", \"6\", \"6\", \"6\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"13\", \"13\", \"13\", \"13\", \"13\", \"13\", \"15\", \"15\", \"15\", \"15\", \"15\", \"15\", \"19\", \"19\", \"19\", \"19\", \"19\", \"19\", \"20\", \"20\", \"20\", \"20\", \"20\", \"20\", \"22\", \"22\", \"22\", \"22\", \"22\", \"22\", \"23\", \"23\", \"23\", \"23\", \"23\", \"23\" ),\n  `Bedingung` = c( \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\" ),\n  `Intensität` = c( \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\" ),\n  `Wirk_Muskulär` = c( 0.236759931308537, 0.246060440608401, 0.242278598743508, 0.229631619431488, 0.231738880422805, 0.239606281503452, 0.235519448379419, 0.240751242958341, 0.248138483274488, 0.238973954766177, 0.239905278154682, 0.242987590176426, 0.253197378567756, 0.268813524126113, 0.246034674712508, 0.243007190386035, 0.237707989694929, 0.239357891786449, 0.246622974378944, 0.259752672010051, 0.237157651346767, 0.256082449948023, 0.248047661517146, 0.237373974289561, 0.25603524395526, 0.230241128289079, 0.252398922767891, 0.237853768450825, 0.236244609842595, 0.256844301131177, 0.229409310695982, 0.250592406029218, 0.239641017649487, 0.225830203382915, 0.230325301880732, 0.22455381609002, 0.2675313748833, 0.254378184934767, 0.247600833815352, 0.250156276904196, 0.239017863265009, 0.241462546103667, 0.252453992795637, 0.255683248260526, 0.261633090232167, 0.257132037314701, 0.242104726162168, 0.256054300732916, 0.235970111612527, 0.269069913213186, 0.259743624458201, 0.236785575354483, 0.242749525282335, 0.259138280507211 ),\n  `W*Aerob [kJ]` = c( 364.789166022847, 341.629555246705, 380.175743058369, 397.985468023398, 434.291677759482, 433.605222297912, 324.974079503018, 328.244436599334, 338.782659218172, 345.676143718918, 364.680735327353, 257.547695226202, 373.643424879889, 359.053884392895, 449.590938122183, 437.033618580678, 472.355442968317, 502.398965566933, 358.837718601139, 352.868283295468, 394.753364696823, 386.919677670582, 414.624059322391, 422.974893188083, 336.736950672026, 327.040591917684, 374.940893404024, 376.054742927363, 407.568603441812, 413.170309433097, 301.002193914676, 268.616569204091, 293.782454560316, 323.273033581013, 338.095668739063, 356.147551686419, 301.108945263692, 280.951141839367, 322.983175747043, 336.778695169108, 374.987772949063, 386.657728278586, 266.533422098459, 251.790208549518, 278.168675291213, 296.280182766526, 322.403130586883, 294.593727223427, 228.955584309471, 211.732892340367, 242.182720592561, 251.873990890611, 269.030850954527, 263.980675271676 ),\n  `WPCR [kJ]` = c( 24.1291998261524, 31.245535169392, 29.1930235666251, 40.7334747429318, 32.1503897341314, 31.0960321619306, 35.5542282425247, 29.8757643229022, 32.3919515398355, 37.4564805468453, 39.181054527315, 28.0856376372225, 25.6241011760421, 42.2362045296838, 43.8865576245131, 46.7522391886717, 55.8553450423781, 41.2539914795555, 33.5030632789753, 39.5610791298099, 47.0313952643199, 43.4984491855838, 48.5683623835727, 47.4643724094369, 28.7114346014479, 27.082865453765, 33.5487723155105, 28.4952050444725, 46.7129326531457, 36.4259657605345, 26.4583220374129, 20.1814127976726, 29.9859705398912, 25.6937955351603, 32.5159707007087, 35.3146550491163, 26.041151647366, 18.4426421779503, 25.8050373268292, 31.1359690227005, 24.1696808725351, 31.9239901224492, 18.2312728474559, 19.2851143909574, 15.5481731391339, 15.0049470739965, 26.5074844823288, 32.024059076605, 19.4890043814307, 11.8721280138382, 16.7847021024629, 20.5569026538069, 25.1374379120318, 20.8232926492238 ),\n  `WBLC [kJ]` = c( 10.3313513320441, 11.610940774608, 15.6579076836, 12.815395211808, 20.331190899936, 7.660330220592, 10.5760425135007, 10.736126499168, 15.178661602272, 19.019603410164, 24.804154325664, 17.399929153824, 6.87435813197033, 5.614025524128, 18.401528106864, 10.604270434464, 15.802442216064, 23.443754735016, 7.48717405349485, 10.04134646592, 9.858776530176, 9.539279142624, 15.335874602496, 13.647102696864, 6.43215059991284, 8.575715592864, 8.575715592864, 11.80365348456, 7.46761751064, 17.874103848048, 6.89074621609046, 7.49931368004, 11.08415043918, 12.9795813693, 17.01767335086, 18.00659383614, 6.65505918050507, 10.142774208, 11.10633775776, 8.31707485056, 17.90199647712, 13.23632034144, 6.60952692345146, 6.0856645248, 10.862911176768, 13.38846195456, 20.295691190208, 15.275017957248, 4.76575332014558, 4.1838943608, 7.30279742976, 10.459735902, 13.38846195456, 11.52472719384 ),\n  `WTOT [kJ]` = c( 399.249717181043, 384.486031190706, 425.026674308594, 451.534337978137, 486.77325839355, 472.361584680434, 371.104350259043, 368.856327421404, 386.353272360279, 402.152227675927, 428.665944180332, 303.033262017248, 406.141884187901, 406.904114446707, 511.87902385356, 494.390128203813, 544.013230226759, 567.096711781505, 399.827955933609, 402.470708891198, 451.643536491319, 439.95740599879, 478.52829630846, 484.086368294384, 371.880535873387, 362.699172964313, 417.065381312399, 416.353601456395, 461.749153605597, 467.47037904168, 334.351262168179, 296.297295681804, 334.852575539387, 361.946410485473, 387.629312790631, 409.468800571675, 333.805156091563, 309.536558225317, 359.894550831632, 376.231739042368, 417.059450298718, 431.818038742475, 291.374221869366, 277.160987465275, 304.579759607115, 324.673591795083, 369.20630625942, 341.89280425728, 253.210342011047, 227.788914715005, 266.270220124784, 282.890629446418, 307.556750821119, 296.32869511474 ),\n  `P_Tot` = c( 315.087785382455, 315.356007475201, 343.249556933665, 345.621870862815, 376.01429973294, 377.269342767856, 291.340972880708, 296.008730999173, 319.563716705383, 320.346360885814, 342.797408580074, 334.696918549422, 342.780201343152, 364.604429952782, 419.799963753223, 400.467853364667, 431.054304415492, 452.463577903494, 328.689199107333, 348.476140134227, 357.035734534098, 375.551234669824, 395.659416230325, 383.031683804794, 317.381745748518, 278.360889376064, 350.889509890097, 330.104243714921, 363.61916212901, 400.223676014955, 255.677641947778, 247.499507416179, 267.481373216035, 272.461438312168, 297.602794954409, 306.49260579391, 297.677841174368, 262.464492841036, 297.033969571712, 313.722436973434, 332.282195549595, 347.559610294167, 245.195285695477, 236.218071887388, 265.6271457606, 278.279940401837, 297.955305580942, 291.810409732378, 199.166908885976, 204.303811710974, 230.539973534982, 223.28140151954, 248.864184197347, 255.967028389931 ),\n  `P_mean` = c( 286.196809943666, 279.856121744775, 308.058185037385, 316.422860962335, 340.826183919876, 347.288435475183, 277.240209227733, 271.455328132766, 304.467347747788, 298.231190808954, 325.412992360824, 309.694617397985, 323.150737156769, 316.844325140231, 371.96441826512, 380.655666884463, 411.774528793807, 405.478497575611, 300.611680063499, 294.276254054958, 330.974610194196, 323.263418911815, 347.877528040632, 356.523758791993, 264.042555125073, 264.046097801302, 296.595675684983, 312.821367725728, 338.374812212103, 340.655624979066, 222.299144497093, 217.725388710054, 237.149862110928, 238.510476030676, 268.299540676442, 270.26756043723, 259.609504812067, 246.984706949108, 281.340838183762, 276.152650787485, 316.924535968906, 309.069638160985, 220.907452101768, 221.311649982903, 250.936106797992, 254.071699215572, 274.36729230484, 276.737918099592, 175.467181480606, 173.18153762583, 199.048429239061, 199.114857295449, 224.703097248925, 224.226593365666 ),\n  `P_Int` = c( 28.8909754387892, 35.4998857304255, 35.1913718962795, 29.1990099004802, 35.1881158130648, 29.9809072926731, 14.100763652975, 24.5534028664068, 15.0963689575941, 22.1151700768599, 17.3844162192499, 25.0023011514367, 19.629464186383, 47.7601048125507, 47.8355454881021, 19.8121864802047, 19.2797756216845, 46.9850803278833, 28.0775190438347, 54.1998860792695, 26.061124339902, 52.2878157580086, 47.7818881896929, 26.5079250128008, 53.3391906234455, 14.3147915747616, 54.2938342051136, 17.2828759891928, 25.244349916907, 59.5680510358891, 33.3784974506853, 29.7741187061253, 30.3315111051071, 33.950962281492, 29.3032542779672, 36.2250453566804, 38.0683363623011, 15.4797858919276, 15.6931313879501, 37.5697861859489, 15.3576595806892, 38.4899721331819, 24.2878335937096, 14.9064219044849, 14.6910389626079, 24.2082411862652, 23.5880132761018, 15.0724916327862, 23.6997274053699, 31.1222740851432, 31.4915442959206, 24.1665442240911, 24.1610869484215, 31.7404350242649 ),\n  `nD` = c( 76.6564376505317, 86.4007340902643, 86.151834718222, 76.9699534010204, 86.1492001342774, 77.7545030427186, 59.6696464126312, 79.340733311971, 59.0120747230942, 78.6315332132975, 58.5778147794659, 74.8376014062797, 64.4031353722102, 93.4309539387749, 93.4798136132308, 64.6513676939208, 63.9226666971842, 92.926017486389, 76.1787191980119, 100.725884150632, 76.4965310227163, 100.706804663599, 101.493737868195, 76.2895930915614, 94.9222147345463, 67.3025317640006, 95.6908060743521, 67.7563334376017, 68.9089393183102, 97.2326216948995, 82.3157999725342, 85.1151334584554, 84.9867423386037, 82.4121919818754, 85.6636667989095, 82.5434000701904, 88.3525337219238, 59.2843333028158, 59.6458305272363, 87.9682001902262, 59.0753999888102, 88.6749836398094, 86.1743334757487, 65.9431711942811, 65.5106667200724, 86.0812543343512, 85.3489333648682, 66.2728181161696, 75.2098000386556, 87.7106668141683, 88.0529021962314, 75.7959332733154, 75.7891333821615, 88.2820788795832 ),\n  `Efficiency` = c( 66.42, 80.67, 85.6, 72.95, 87.65, 78.67, 80.04, 86.41, 86.78, 88.63, 88.24, 92.41, 73.99, 73.77, 81.11, 85.39, 91.79, 84.47, 72.05, 72.34, 79.17, 76.95, 79.78, 85.17, 66.52, 69.93, 72.41, 82.58, 87.01, 79.53, 65.43, 72.54, 77.02, 70.47, 80.77, 78.76, 64.47, 62.05, 68.4, 71.35, 77.44, 75.1, 81.99, 82.22, 91.47, 89.76, 92.56, 97.11, 50.58, 59.59, 65.12, 56.31, 63.19, 72.06 ),\n  `Pedal_Smoothness` = c( 39.710181579574, 50.8184514296743, 52.4428359792181, 40.2055948041026, 53.6791852731242, 41.0448765909455, 47.914882163269, 51.5335837768147, 49.217483982331, 51.1389458112447, 48.0336788998195, 52.8223258874823, 47.9302436519206, 51.9475600881879, 54.0606647605687, 50.6559277814877, 52.6335181401208, 54.2725782631366, 43.083675000186, 49.0637500123524, 44.6632810590617, 50.293760020264, 51.2896166830574, 46.4638901013413, 48.3291073423363, 44.2590599394396, 52.6720469537052, 47.4439436135393, 48.2471522363413, 57.9737846304978, 42.4301080469913, 50.2908406548503, 52.3570034648903, 42.7127745966365, 52.2685711057555, 44.7936090146139, 46.3565980135841, 38.3575726240913, 39.6615373251182, 49.3105354600425, 42.1880618813037, 51.4796995926358, 54.4350155934243, 49.538139286023, 51.844375965857, 57.5052389013286, 57.6775357922151, 52.6180510620694, 32.375968743603, 42.0671208740445, 44.8980312830359, 34.1636884387502, 36.5443594656413, 47.3128113809467 ),\n  `P_max` = c( 720.71392917246, 550.697854561856, 587.417097655553, 787.012012890423, 634.931737852808, 846.118844347542, 578.609811212814, 526.754221690469, 618.616237792837, 583.178213938422, 677.46839262409, 586.294927750192, 674.210503713599, 609.931100907041, 688.050026599798, 751.453351178328, 782.342779552722, 747.114860859711, 697.739178615104, 599.783453121439, 741.044102327642, 642.75054953451, 678.261118990867, 767.313623578198, 546.342710728637, 596.59219640589, 563.098821554568, 659.349421443241, 701.336341167984, 587.602874558339, 523.918403061563, 432.932490041913, 452.947736533387, 558.40548473631, 513.309499380782, 603.361877693434, 560.027085542369, 643.90077383047, 709.354344682915, 560.027686195494, 751.218524473997, 600.371875917469, 405.818662295843, 446.750025682425, 484.017990617248, 441.823569590808, 475.691772431568, 525.937225940098, 541.967355078066, 411.679083397134, 443.334425922299, 582.825995654505, 614.87764605695, 473.923630452372 ),\n  `HR_percent` = c( 87.37, 85.07, 88.4, 90.93, 93.12, 93.78, 88.05, 88.16, 92.21, 91.97, 95.39, 93.58, 84.41, 84.65, 88.64, 89.98, 91.12, 94.04, 89.19, 89.26, 92.25, 92.32, 93.98, 94.9, 86.65, 87.88, 89.95, 91.14, 93.96, 94.27, 90.9, 86.55, 87.59, 91.62, 91.13, 95.12, 86.77, 87.49, 90.8, 89.74, 93.35, 94.18, 80.64, 81.03, 84.87, 88.21, 91.54, 92.47, 91.92, 88.36, 90.08, 92.49, 93.58, 93.31 ),\n  `VO2_percent` = c( 71.27, 66.6, 72.84, 76.05, 83.97, 83.1, 73.17, 73.36, 75.13, 76.76, 82.17, 80.02, 65.96, 64.11, 76.98, 75.53, 81.19, 87.7, 77.06, 75.21, 82.91, 81.14, 86.2, 88.05, 69.58, 67.18, 76.09, 77.01, 83.24, 82.99, 68.97, 61.94, 67.21, 72.61, 75.89, 79.96, 59.98, 55.95, 63.85, 65.63, 72.7, 75.69, 74.64, 71.07, 77.24, 82.44, 89.64, 82.88, 64.16, 59.83, 66.38, 68.75, 72.98, 72.62 ),\n  `ΔBLC` = c( 2.14440476388244, 2.41, 3.25, 2.66, 4.22, 1.59, 2.28540699787984, 2.32, 3.28, 4.11, 5.36, 3.76, 1.32245689846256, 1.08, 3.54, 2.04, 3.04, 4.51, 1.64039583472131, 2.2, 2.16, 2.09, 3.36, 2.99, 1.3350755332152, 1.78, 1.78, 2.45, 1.55, 3.71, 1.67230744683529, 1.82, 2.69, 3.15, 4.13, 4.37, 1.31227592057723, 2, 2.19, 1.64, 3.53, 2.61, 2.17216275938861, 2, 3.57, 4.4, 6.67, 5.02, 1.25297825424965, 1.1, 1.92, 2.75, 3.52, 3.03 ),\n  `Wirk_Brutto` = c( 0.21091819774276, 0.218687083170556, 0.218760618322075, 0.215611035633622, 0.214547147778117, 0.218930425263281, 0.227778316752638, 0.221045746532832, 0.241032841135073, 0.231877904887968, 0.241135116972538, 0.237391436703597, 0.231766180410934, 0.235455654830026, 0.225781269887199, 0.237080456805955, 0.238940307096781, 0.22236502148504, 0.223093734025061, 0.221665349290325, 0.225584494767251, 0.224321087908687, 0.226863452429123, 0.228356628526559, 0.210066541077549, 0.215613658605269, 0.214257766456576, 0.225374565032104, 0.226632861157903, 0.225342311634305, 0.202757163964259, 0.220274153111015, 0.221156816095123, 0.2037476019667, 0.219912947132494, 0.211113698805482, 0.231505614168667, 0.234285612923503, 0.235567631959634, 0.222650724211751, 0.231727760126706, 0.219734608022672, 0.225208598362406, 0.23752066449308, 0.24609162628488, 0.235239077451739, 0.23507782711413, 0.257565789353377, 0.196493707208499, 0.20725848437317, 0.212413076069613, 0.205403057940064, 0.218886073914972, 0.222063328733195 ),\n  `Wirk_Netto` = c( 0.235366208704023, 0.24575401991436, 0.243091404958539, 0.238518403096868, 0.235435907276559, 0.240279695180822, 0.255934451435372, 0.248097421797994, 0.269612985904083, 0.258824217026203, 0.267696887307786, 0.264544459494061, 0.259459192084525, 0.264732681287629, 0.248201900922679, 0.261299577904801, 0.261524156177508, 0.242125397562104, 0.251321138621137, 0.250186487127734, 0.251530175390694, 0.250643819041199, 0.251705746605124, 0.25286873845261, 0.235236336194875, 0.242214059349332, 0.23731394539996, 0.249555183341606, 0.249068360041437, 0.247347607416278, 0.221558994244514, 0.243163021575891, 0.242168848169494, 0.221339658358084, 0.238068303279725, 0.227659204021592, 0.25865339661502, 0.263730596001978, 0.261320891591058, 0.245994762806019, 0.253547895823224, 0.239800952281731, 0.248645123409885, 0.263685769900833, 0.270630156183426, 0.257261586154533, 0.255302073344076, 0.281816507813529, 0.229914263078336, 0.245377374830505, 0.246568081428814, 0.237160085395944, 0.250569512513164, 0.254821599878365 ),\n  `Wirk_Total` = c( 0.215050980096665, 0.218361213965118, 0.21743918934395, 0.210231759369089, 0.210052326032456, 0.220565206870156, 0.224120419796381, 0.220781351398079, 0.236416282347832, 0.222476343746092, 0.227738869937329, 0.224836096783589, 0.238697915485563, 0.233601219961414, 0.217999410562797, 0.230984992520443, 0.227076019064188, 0.214502300481599, 0.225555773878964, 0.219352301338166, 0.219846792958958, 0.220428214984546, 0.218092136279684, 0.220946373711054, 0.213005949212925, 0.218400909748379, 0.213344733685403, 0.225400741075485, 0.219843269599878, 0.218616391702131, 0.199460121420396, 0.220446212520149, 0.212466511624337, 0.197689880977766, 0.207646479631449, 0.198013299225654, 0.233318299679759, 0.239375318086974, 0.234519392583452, 0.220198847250673, 0.227970762256012, 0.214722135551155, 0.227447147538819, 0.239548486250032, 0.247162950474793, 0.234763503071659, 0.2229381955183, 0.24282867143177, 0.207891012768686, 0.228081605080525, 0.224262888819237, 0.211157426124462, 0.219182082639067, 0.227004603734556 ),\n  `Wirk_Arbeit` = c( 0.247862487404545, 0.253160968214816, 0.248317305395203, 0.238101384924385, 0.235636793902554, 0.248353056021652, 0.252223124451487, 0.248655390436469, 0.264750516922094, 0.247972342497358, 0.252051352897696, 0.249835173535799, 0.290674339857892, 0.284351853248305, 0.254041969959835, 0.27075806004536, 0.262059956436982, 0.246006374208853, 0.282917168134632, 0.274677400862769, 0.267938862065388, 0.270217570609923, 0.262573343325185, 0.265388250568887, 0.265857359551926, 0.274313879330951, 0.259309573409811, 0.274063975273831, 0.261750935900445, 0.259684339862698, 0.23098710636663, 0.26058009978106, 0.245991096843795, 0.22621104152906, 0.235354360073126, 0.222849715844585, 0.286385011940742, 0.299154252396369, 0.283190110066154, 0.263522755836858, 0.267668336610019, 0.250621087215401, 0.257193553520699, 0.272706537461809, 0.277912008983077, 0.261953055017254, 0.24533102151784, 0.269380995629809, 0.25452140555158, 0.286410297975261, 0.271577778890731, 0.252576522311175, 0.258114707808469, 0.269138120186613 )\n  , check.names = FALSE\n)\n# Stehen Werte in Wirk_Arbeit auf NA\nBedingungen_data_Wirkungsgrad$Wirk_Arbeit[Bedingungen_data_Wirkungsgrad$Bedingung == \"stehen\"] &lt;- NA\n\n# Spaltennamen ändern\nnames(Bedingungen_data_Wirkungsgrad)[names(Bedingungen_data_Wirkungsgrad) == \"W*Aerob [kJ]\"] &lt;- \"W_Aerob\"\nnames(Bedingungen_data_Wirkungsgrad)[names(Bedingungen_data_Wirkungsgrad) == \"WPCR [kJ]\"] &lt;- \"W_PCR\"\nnames(Bedingungen_data_Wirkungsgrad)[names(Bedingungen_data_Wirkungsgrad) == \"WBLC [kJ]\"] &lt;- \"W_BLC\"\nnames(Bedingungen_data_Wirkungsgrad)[names(Bedingungen_data_Wirkungsgrad) == \"WTOT [kJ]\"] &lt;- \"W_TOT\"\n\n# UI (User Interface) Definition:\nui &lt;- fluidPage(\n  titlePanel(\"Energieumsatz: Barplots\"),\n  \n  fluidRow(\n    column(2,\n           wellPanel(\n             checkboxGroupInput(\"selectedBedingung\", \"Bedingungen:\",\n                                unique(Bedingungen_data_Wirkungsgrad$Bedingung),\n                                selected = c(\"sitzen\", \"stehen\")),\n             checkboxGroupInput(\"selectedIntensität\", \"Intensitäten:\",\n                                unique(Bedingungen_data_Wirkungsgrad$Intensität),\n                                selected = c(\"leicht\", \"moderat\", \"schwer\")),\n             checkboxGroupInput(\"selectedProband\", \"Probanden:\",\n                                unique(Bedingungen_data_Wirkungsgrad$Proband),\n                                selected = unique(Bedingungen_data_Wirkungsgrad$Proband))\n           )\n    ),\n    column(10,\n           plotlyOutput(\"barplot\", height = \"calc(65vh - 150px)\")\n    )\n  ),\n  \n  fluidRow(\n    column(12,\n           DTOutput(\"summaryTable\"),\n           br(), br()\n    )\n  )\n)\n\n# Server-Logik\nserver &lt;- function(input, output, session) {\n  \n  filtered_data &lt;- reactive({\n    data &lt;- Bedingungen_data_Wirkungsgrad %&gt;%\n      filter(Proband %in% input$selectedProband)\n    \n    if (length(input$selectedBedingung) &gt; 0) {\n      data &lt;- data %&gt;% filter(Bedingung %in% input$selectedBedingung)\n    }\n    \n    if (length(input$selectedIntensität) &gt; 0) {\n      data &lt;- data %&gt;% filter(Intensität %in% input$selectedIntensität)\n    }\n    \n    # Erstellen Sie eine neue Gruppierungsvariable basierend auf den Auswahlen\n    if (length(input$selectedBedingung) &gt; 0 && length(input$selectedIntensität) &gt; 0) {\n      data$Gruppe &lt;- interaction(data$Intensität, data$Bedingung, sep = \"_\")\n    } else if (length(input$selectedBedingung) &gt; 0) {\n      data$Gruppe &lt;- data$Bedingung\n    } else if (length(input$selectedIntensität) &gt; 0) {\n      data$Gruppe &lt;- data$Intensität\n    } else {\n      data$Gruppe &lt;- \"Alle\"\n    }\n    \n    return(data)\n  })\n  \n  # Energieumsatz Barplot\n  output$barplot &lt;- renderPlotly({\n    filtered_data &lt;- filtered_data()\n    \n    # Gruppierung und Berechnung basierend auf der Auswahl\n    if (length(input$selectedBedingung) &gt; 0 && length(input$selectedIntensität) &gt; 0) {\n      group_vars &lt;- c(\"Bedingung\", \"Intensität\")\n    } else if (length(input$selectedBedingung) &gt; 0) {\n      group_vars &lt;- \"Bedingung\"\n    } else if (length(input$selectedIntensität) &gt; 0) {\n      group_vars &lt;- \"Intensität\"\n    } else {\n      return(NULL)\n    }\n    \n    # Berechnen des durchschnittlichen Wirkungsgrads\n    avg_efficiency_data &lt;- filtered_data %&gt;%\n      group_by(across(all_of(group_vars))) %&gt;%\n      summarize(AvgWirkungsgrad = mean(Wirk_Muskulär, na.rm = TRUE))\n    \n    # Berechnen der durchschnittlichen Leistung\n    avg_power_data &lt;- filtered_data %&gt;%\n      group_by(across(all_of(group_vars))) %&gt;%\n      summarize(AvgPTOT = mean(`P_Tot`, na.rm = TRUE)) \n    \n    # Daten umwandeln und Durchschnittswerte berechnen\n    avg_energy_data &lt;- filtered_data %&gt;%\n      gather(Energiequelle, Wert, W_Aerob, W_PCR, W_BLC) %&gt;%\n      group_by(across(all_of(c(group_vars, \"Energiequelle\")))) %&gt;%\n      summarize(AvgWert = mean(Wert, na.rm = TRUE),\n                AvgWTOT = mean(W_TOT, na.rm = TRUE),\n                Prozentsatz = (AvgWert / AvgWTOT) * 100)\n    \n    # X-Achsen-Variable festlegen\n    if (length(group_vars) &gt; 1) {\n      x_var &lt;- ~interaction(Intensität, Bedingung, sep = \"_\")\n      x_title &lt;- \"Intensität_Bedingung\"\n    } else {\n      x_var &lt;- as.formula(paste0(\"~\", group_vars))\n      x_title &lt;- group_vars\n    }\n    \n    p &lt;- plot_ly(data = avg_energy_data, \n                 x = x_var, \n                 y = ~AvgWert, \n                 color = ~Energiequelle, \n                 type = 'bar',\n                 marker = list(line = list(color = 'black', width = 0.75)),\n                 colors = c(\"#42BA97\",\"#F4737A\", \"#1CADE4\"),\n                 text = ~sprintf(\"%.1f%%\", Prozentsatz),\n                 textposition = \"auto\",\n                 textfont = list(color = \"black\")\n    ) %&gt;%\n      layout(\n        title = 'Zusammensetzung des physiologischen Energieumsatzes aller ausgewählten Probanden',\n        margin = list(t = 40),\n        xaxis = list(title = htmltools::HTML(paste0('&lt;b&gt;', x_title, '&lt;/b&gt;')),\n                     showgrid = TRUE,\n                     gridcolor = \"lightgray\",\n                     gridwidth = 0.05),\n        yaxis = list(title = htmltools::HTML('&lt;b&gt;Energieumsatz [kJ]&lt;/b&gt;'), tickformat = \",.0f\",\n                     showgrid = TRUE,\n                     gridcolor = \"lightgray\",\n                     gridwidth = 0.05),\n        barmode = 'stack',\n        bargap = 0.4\n      )\n    \n    # Wirkungsgradbeschriftung \n    for(i in 1:nrow(avg_efficiency_data)) {\n      x_val &lt;- if (length(group_vars) &gt; 1) {\n        interaction(avg_efficiency_data$Intensität[i], avg_efficiency_data$Bedingung[i], sep = \"_\")\n      } else {\n        avg_efficiency_data[[group_vars]][i]\n      }\n      \n      y_val &lt;- sum(avg_energy_data$AvgWert[\n        if (length(group_vars) &gt; 1) {\n          avg_energy_data$Intensität == avg_efficiency_data$Intensität[i] & \n            avg_energy_data$Bedingung == avg_efficiency_data$Bedingung[i]\n        } else {\n          avg_energy_data[[group_vars]] == avg_efficiency_data[[group_vars]][i]\n        }\n      ]) + 15\n      \n      p &lt;- add_annotations(p,\n                           x = x_val,\n                           y = y_val,\n                           text = sprintf(\"η&lt;sub&gt;muskulär&lt;/sub&gt; = %.3f\", avg_efficiency_data$AvgWirkungsgrad[i]),\n                           showarrow = FALSE,\n                           yshift = 25,\n                           bgcolor = \"white\",\n                           bordercolor = \"black\",\n                           borderpad = 4,\n                           font = list(size = 11),  \n                           textangle = 0\n      )\n    }\n    \n    # Durchschnittliche Leistung beschriften\n    for(i in 1:nrow(avg_power_data)) {\n      x_val &lt;- if (length(group_vars) &gt; 1) {\n        interaction(avg_power_data$Intensität[i], avg_power_data$Bedingung[i], sep = \"_\")\n      } else {\n        avg_power_data[[group_vars]][i]\n      }\n      \n      p &lt;- add_annotations(p,\n                           x = x_val,\n                           y = 0,\n                           text = sprintf(\"P&lt;sub&gt;TOT&lt;/sub&gt; = %.1fW\", avg_power_data$AvgPTOT[i]),\n                           showarrow = FALSE,\n                           yshift = 12,\n                           xanchor = \"center\",\n                           font = list(color = \"black\", size = 10)\n      )\n    }\n    \n    return(p)\n  })\n  \n  # Energieumsatz Zusammenfassungstabelle\n  output$summaryTable &lt;- renderDT({\n    filtered_data &lt;- filtered_data()\n    \n    # Gruppierung basierend auf der Auswahl\n    if (length(input$selectedBedingung) &gt; 0 && length(input$selectedIntensität) &gt; 0) {\n      group_vars &lt;- c(\"Bedingung\", \"Intensität\")\n    } else if (length(input$selectedBedingung) &gt; 0) {\n      group_vars &lt;- \"Bedingung\"\n    } else if (length(input$selectedIntensität) &gt; 0) {\n      group_vars &lt;- \"Intensität\"\n    } else {\n      return(NULL)\n    }\n    \n    # Daten umwandeln und Durchschnittswerte berechnen für die Energiequellen\n    avg_energy_data &lt;- filtered_data %&gt;%\n      group_by(across(all_of(group_vars))) %&gt;%\n      summarise(\n        W_aerob = sprintf(\"%.1f kJ\", round(mean(W_Aerob, na.rm = TRUE), 1)),\n        W_BLC = sprintf(\"%.1f kJ\", round(mean(W_BLC, na.rm = TRUE), 1)),\n        W_PCR = sprintf(\"%.1f kJ\", round(mean(W_PCR, na.rm = TRUE), 1)),\n        P_mean = sprintf(\"%.1f Watt\", round(mean(P_mean, na.rm = TRUE), 1)),\n        P_Int = sprintf(\"%.1f Watt\", round(mean(P_Int, na.rm = TRUE), 1)),\n        Drehzahl = sprintf(\"%.1f rpm\", mean(nD, na.rm = TRUE)),\n        η_muskulär = sprintf(\"%.2f%%\", 100 * mean(Wirk_Muskulär, na.rm = TRUE)),\n        η_Total = sprintf(\"%.2f%%\", 100 * mean(Wirk_Total, na.rm = TRUE)),\n        η_Arbeit = sprintf(\"%.2f%%\", 100 * mean(Wirk_Arbeit, na.rm = TRUE)),\n        η_Netto = sprintf(\"%.2f%%\", 100 * mean(Wirk_Netto, na.rm = TRUE)),\n        η_Brutto = sprintf(\"%.2f%%\", 100 * mean(Wirk_Brutto, na.rm = TRUE)),\n        #Efficiency = sprintf(\"%.2f%%\", mean(Efficiency, na.rm = TRUE)),\n        #`Pedal Smoothness` = sprintf(\"%.2f%%\", mean(Pedal_Smoothness, na.rm = TRUE)),\n        #`P_max` = sprintf(\"%.1f Watt\", mean(P_max, na.rm = TRUE)),\n        `HR%` = sprintf(\"%.1f%%\", mean(HR_percent, na.rm = TRUE)),\n        `VO2%` = sprintf(\"%.1f%%\", mean(VO2_percent, na.rm = TRUE)),\n        `ΔBLC` = sprintf(\"%.1f mmol/L\", mean(`ΔBLC`, na.rm = TRUE))\n      ) %&gt;% \n      ungroup()\n    \n    datatable(avg_energy_data, \n              options = list(\n                autoWidth = TRUE,\n                scrollX = TRUE,\n                fixedHeader = TRUE,\n                columnDefs = list(\n                  list(className = 'dt-center', targets = '_all'),\n                  list(className = 'dt-head-center', targets = '_all')\n                ),\n                initComplete = JS(\n                  \"function(settings, json) {\",\n                  \"  $(this.api().table().container()).css({'font-size': '100%'});\",\n                  \"  $(this.api().table().container()).find('table').css({'width': '100%', 'max-width': 'none'});\",\n                  \"  this.api().columns.adjust().draw();\",\n                  \"  $(this.api().table().header()).css({'text-align': 'center'});\",\n                  \"}\"\n                ),\n                stretchH = 'all'  # Streckt alle Spalten gleichmäßig\n              ),\n              rownames = FALSE\n    ) %&gt;% \n      formatStyle(columns = 1:ncol(avg_energy_data), \n                  textAlign = 'center')\n  })\n}\n\n# ShinyApp starten\nshinyApp(ui = ui, server = server)",
    "crumbs": [
      "Ergebnisse & Statistik",
      "Wirkungsgrad- und Stoffwechselparameter"
    ]
  },
  {
    "objectID": "Ergebnisse/Wirkungsgrad_Statistik.html#interaktive-analyse-der-wirkungsgradberechnungen",
    "href": "Ergebnisse/Wirkungsgrad_Statistik.html#interaktive-analyse-der-wirkungsgradberechnungen",
    "title": "Wirkungsgrad- und Stoffwechselparameter",
    "section": "Interaktive Analyse der Wirkungsgradberechnungen",
    "text": "Interaktive Analyse der Wirkungsgradberechnungen\n#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| viewerHeight: 700\nlibrary(shiny)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(plotly)\nlibrary(DT)\nlibrary(reactable)\nlibrary(htmltools)\nlibrary(shinylive)\nlibrary(dplyr)\nlibrary(DT)\n\nBedingungen_data_Wirkungsgrad &lt;- data.frame(\n  `Proband` = c( \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"6\", \"6\", \"6\", \"6\", \"6\", \"6\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"13\", \"13\", \"13\", \"13\", \"13\", \"13\", \"15\", \"15\", \"15\", \"15\", \"15\", \"15\", \"19\", \"19\", \"19\", \"19\", \"19\", \"19\", \"20\", \"20\", \"20\", \"20\", \"20\", \"20\", \"22\", \"22\", \"22\", \"22\", \"22\", \"22\", \"23\", \"23\", \"23\", \"23\", \"23\", \"23\" ),\n  `Bedingung` = c( \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\" ),\n  `Intensität` = c( \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\" ),\n  `Wirk_Muskulär` = c( 0.236759931308537, 0.246060440608401, 0.242278598743508, 0.229631619431488, 0.231738880422805, 0.239606281503452, 0.235519448379419, 0.240751242958341, 0.248138483274488, 0.238973954766177, 0.239905278154682, 0.242987590176426, 0.253197378567756, 0.268813524126113, 0.246034674712508, 0.243007190386035, 0.237707989694929, 0.239357891786449, 0.246622974378944, 0.259752672010051, 0.237157651346767, 0.256082449948023, 0.248047661517146, 0.237373974289561, 0.25603524395526, 0.230241128289079, 0.252398922767891, 0.237853768450825, 0.236244609842595, 0.256844301131177, 0.229409310695982, 0.250592406029218, 0.239641017649487, 0.225830203382915, 0.230325301880732, 0.22455381609002, 0.2675313748833, 0.254378184934767, 0.247600833815352, 0.250156276904196, 0.239017863265009, 0.241462546103667, 0.252453992795637, 0.255683248260526, 0.261633090232167, 0.257132037314701, 0.242104726162168, 0.256054300732916, 0.235970111612527, 0.269069913213186, 0.259743624458201, 0.236785575354483, 0.242749525282335, 0.259138280507211 ),\n  `W*Aerob [kJ]` = c( 364.789166022847, 341.629555246705, 380.175743058369, 397.985468023398, 434.291677759482, 433.605222297912, 324.974079503018, 328.244436599334, 338.782659218172, 345.676143718918, 364.680735327353, 257.547695226202, 373.643424879889, 359.053884392895, 449.590938122183, 437.033618580678, 472.355442968317, 502.398965566933, 358.837718601139, 352.868283295468, 394.753364696823, 386.919677670582, 414.624059322391, 422.974893188083, 336.736950672026, 327.040591917684, 374.940893404024, 376.054742927363, 407.568603441812, 413.170309433097, 301.002193914676, 268.616569204091, 293.782454560316, 323.273033581013, 338.095668739063, 356.147551686419, 301.108945263692, 280.951141839367, 322.983175747043, 336.778695169108, 374.987772949063, 386.657728278586, 266.533422098459, 251.790208549518, 278.168675291213, 296.280182766526, 322.403130586883, 294.593727223427, 228.955584309471, 211.732892340367, 242.182720592561, 251.873990890611, 269.030850954527, 263.980675271676 ),\n  `WPCR [kJ]` = c( 24.1291998261524, 31.245535169392, 29.1930235666251, 40.7334747429318, 32.1503897341314, 31.0960321619306, 35.5542282425247, 29.8757643229022, 32.3919515398355, 37.4564805468453, 39.181054527315, 28.0856376372225, 25.6241011760421, 42.2362045296838, 43.8865576245131, 46.7522391886717, 55.8553450423781, 41.2539914795555, 33.5030632789753, 39.5610791298099, 47.0313952643199, 43.4984491855838, 48.5683623835727, 47.4643724094369, 28.7114346014479, 27.082865453765, 33.5487723155105, 28.4952050444725, 46.7129326531457, 36.4259657605345, 26.4583220374129, 20.1814127976726, 29.9859705398912, 25.6937955351603, 32.5159707007087, 35.3146550491163, 26.041151647366, 18.4426421779503, 25.8050373268292, 31.1359690227005, 24.1696808725351, 31.9239901224492, 18.2312728474559, 19.2851143909574, 15.5481731391339, 15.0049470739965, 26.5074844823288, 32.024059076605, 19.4890043814307, 11.8721280138382, 16.7847021024629, 20.5569026538069, 25.1374379120318, 20.8232926492238 ),\n  `WBLC [kJ]` = c( 10.3313513320441, 11.610940774608, 15.6579076836, 12.815395211808, 20.331190899936, 7.660330220592, 10.5760425135007, 10.736126499168, 15.178661602272, 19.019603410164, 24.804154325664, 17.399929153824, 6.87435813197033, 5.614025524128, 18.401528106864, 10.604270434464, 15.802442216064, 23.443754735016, 7.48717405349485, 10.04134646592, 9.858776530176, 9.539279142624, 15.335874602496, 13.647102696864, 6.43215059991284, 8.575715592864, 8.575715592864, 11.80365348456, 7.46761751064, 17.874103848048, 6.89074621609046, 7.49931368004, 11.08415043918, 12.9795813693, 17.01767335086, 18.00659383614, 6.65505918050507, 10.142774208, 11.10633775776, 8.31707485056, 17.90199647712, 13.23632034144, 6.60952692345146, 6.0856645248, 10.862911176768, 13.38846195456, 20.295691190208, 15.275017957248, 4.76575332014558, 4.1838943608, 7.30279742976, 10.459735902, 13.38846195456, 11.52472719384 ),\n  `WTOT [kJ]` = c( 399.249717181043, 384.486031190706, 425.026674308594, 451.534337978137, 486.77325839355, 472.361584680434, 371.104350259043, 368.856327421404, 386.353272360279, 402.152227675927, 428.665944180332, 303.033262017248, 406.141884187901, 406.904114446707, 511.87902385356, 494.390128203813, 544.013230226759, 567.096711781505, 399.827955933609, 402.470708891198, 451.643536491319, 439.95740599879, 478.52829630846, 484.086368294384, 371.880535873387, 362.699172964313, 417.065381312399, 416.353601456395, 461.749153605597, 467.47037904168, 334.351262168179, 296.297295681804, 334.852575539387, 361.946410485473, 387.629312790631, 409.468800571675, 333.805156091563, 309.536558225317, 359.894550831632, 376.231739042368, 417.059450298718, 431.818038742475, 291.374221869366, 277.160987465275, 304.579759607115, 324.673591795083, 369.20630625942, 341.89280425728, 253.210342011047, 227.788914715005, 266.270220124784, 282.890629446418, 307.556750821119, 296.32869511474 ),\n  `P_Tot` = c( 315.087785382455, 315.356007475201, 343.249556933665, 345.621870862815, 376.01429973294, 377.269342767856, 291.340972880708, 296.008730999173, 319.563716705383, 320.346360885814, 342.797408580074, 334.696918549422, 342.780201343152, 364.604429952782, 419.799963753223, 400.467853364667, 431.054304415492, 452.463577903494, 328.689199107333, 348.476140134227, 357.035734534098, 375.551234669824, 395.659416230325, 383.031683804794, 317.381745748518, 278.360889376064, 350.889509890097, 330.104243714921, 363.61916212901, 400.223676014955, 255.677641947778, 247.499507416179, 267.481373216035, 272.461438312168, 297.602794954409, 306.49260579391, 297.677841174368, 262.464492841036, 297.033969571712, 313.722436973434, 332.282195549595, 347.559610294167, 245.195285695477, 236.218071887388, 265.6271457606, 278.279940401837, 297.955305580942, 291.810409732378, 199.166908885976, 204.303811710974, 230.539973534982, 223.28140151954, 248.864184197347, 255.967028389931 ),\n  `P_mean` = c( 286.196809943666, 279.856121744775, 308.058185037385, 316.422860962335, 340.826183919876, 347.288435475183, 277.240209227733, 271.455328132766, 304.467347747788, 298.231190808954, 325.412992360824, 309.694617397985, 323.150737156769, 316.844325140231, 371.96441826512, 380.655666884463, 411.774528793807, 405.478497575611, 300.611680063499, 294.276254054958, 330.974610194196, 323.263418911815, 347.877528040632, 356.523758791993, 264.042555125073, 264.046097801302, 296.595675684983, 312.821367725728, 338.374812212103, 340.655624979066, 222.299144497093, 217.725388710054, 237.149862110928, 238.510476030676, 268.299540676442, 270.26756043723, 259.609504812067, 246.984706949108, 281.340838183762, 276.152650787485, 316.924535968906, 309.069638160985, 220.907452101768, 221.311649982903, 250.936106797992, 254.071699215572, 274.36729230484, 276.737918099592, 175.467181480606, 173.18153762583, 199.048429239061, 199.114857295449, 224.703097248925, 224.226593365666 ),\n  `P_Int` = c( 28.8909754387892, 35.4998857304255, 35.1913718962795, 29.1990099004802, 35.1881158130648, 29.9809072926731, 14.100763652975, 24.5534028664068, 15.0963689575941, 22.1151700768599, 17.3844162192499, 25.0023011514367, 19.629464186383, 47.7601048125507, 47.8355454881021, 19.8121864802047, 19.2797756216845, 46.9850803278833, 28.0775190438347, 54.1998860792695, 26.061124339902, 52.2878157580086, 47.7818881896929, 26.5079250128008, 53.3391906234455, 14.3147915747616, 54.2938342051136, 17.2828759891928, 25.244349916907, 59.5680510358891, 33.3784974506853, 29.7741187061253, 30.3315111051071, 33.950962281492, 29.3032542779672, 36.2250453566804, 38.0683363623011, 15.4797858919276, 15.6931313879501, 37.5697861859489, 15.3576595806892, 38.4899721331819, 24.2878335937096, 14.9064219044849, 14.6910389626079, 24.2082411862652, 23.5880132761018, 15.0724916327862, 23.6997274053699, 31.1222740851432, 31.4915442959206, 24.1665442240911, 24.1610869484215, 31.7404350242649 ),\n  `nD` = c( 76.6564376505317, 86.4007340902643, 86.151834718222, 76.9699534010204, 86.1492001342774, 77.7545030427186, 59.6696464126312, 79.340733311971, 59.0120747230942, 78.6315332132975, 58.5778147794659, 74.8376014062797, 64.4031353722102, 93.4309539387749, 93.4798136132308, 64.6513676939208, 63.9226666971842, 92.926017486389, 76.1787191980119, 100.725884150632, 76.4965310227163, 100.706804663599, 101.493737868195, 76.2895930915614, 94.9222147345463, 67.3025317640006, 95.6908060743521, 67.7563334376017, 68.9089393183102, 97.2326216948995, 82.3157999725342, 85.1151334584554, 84.9867423386037, 82.4121919818754, 85.6636667989095, 82.5434000701904, 88.3525337219238, 59.2843333028158, 59.6458305272363, 87.9682001902262, 59.0753999888102, 88.6749836398094, 86.1743334757487, 65.9431711942811, 65.5106667200724, 86.0812543343512, 85.3489333648682, 66.2728181161696, 75.2098000386556, 87.7106668141683, 88.0529021962314, 75.7959332733154, 75.7891333821615, 88.2820788795832 ),\n  `Efficiency` = c( 66.42, 80.67, 85.6, 72.95, 87.65, 78.67, 80.04, 86.41, 86.78, 88.63, 88.24, 92.41, 73.99, 73.77, 81.11, 85.39, 91.79, 84.47, 72.05, 72.34, 79.17, 76.95, 79.78, 85.17, 66.52, 69.93, 72.41, 82.58, 87.01, 79.53, 65.43, 72.54, 77.02, 70.47, 80.77, 78.76, 64.47, 62.05, 68.4, 71.35, 77.44, 75.1, 81.99, 82.22, 91.47, 89.76, 92.56, 97.11, 50.58, 59.59, 65.12, 56.31, 63.19, 72.06 ),\n  `Pedal_Smoothness` = c( 39.710181579574, 50.8184514296743, 52.4428359792181, 40.2055948041026, 53.6791852731242, 41.0448765909455, 47.914882163269, 51.5335837768147, 49.217483982331, 51.1389458112447, 48.0336788998195, 52.8223258874823, 47.9302436519206, 51.9475600881879, 54.0606647605687, 50.6559277814877, 52.6335181401208, 54.2725782631366, 43.083675000186, 49.0637500123524, 44.6632810590617, 50.293760020264, 51.2896166830574, 46.4638901013413, 48.3291073423363, 44.2590599394396, 52.6720469537052, 47.4439436135393, 48.2471522363413, 57.9737846304978, 42.4301080469913, 50.2908406548503, 52.3570034648903, 42.7127745966365, 52.2685711057555, 44.7936090146139, 46.3565980135841, 38.3575726240913, 39.6615373251182, 49.3105354600425, 42.1880618813037, 51.4796995926358, 54.4350155934243, 49.538139286023, 51.844375965857, 57.5052389013286, 57.6775357922151, 52.6180510620694, 32.375968743603, 42.0671208740445, 44.8980312830359, 34.1636884387502, 36.5443594656413, 47.3128113809467 ),\n  `P_max` = c( 720.71392917246, 550.697854561856, 587.417097655553, 787.012012890423, 634.931737852808, 846.118844347542, 578.609811212814, 526.754221690469, 618.616237792837, 583.178213938422, 677.46839262409, 586.294927750192, 674.210503713599, 609.931100907041, 688.050026599798, 751.453351178328, 782.342779552722, 747.114860859711, 697.739178615104, 599.783453121439, 741.044102327642, 642.75054953451, 678.261118990867, 767.313623578198, 546.342710728637, 596.59219640589, 563.098821554568, 659.349421443241, 701.336341167984, 587.602874558339, 523.918403061563, 432.932490041913, 452.947736533387, 558.40548473631, 513.309499380782, 603.361877693434, 560.027085542369, 643.90077383047, 709.354344682915, 560.027686195494, 751.218524473997, 600.371875917469, 405.818662295843, 446.750025682425, 484.017990617248, 441.823569590808, 475.691772431568, 525.937225940098, 541.967355078066, 411.679083397134, 443.334425922299, 582.825995654505, 614.87764605695, 473.923630452372 ),\n  `HR_percent` = c( 87.37, 85.07, 88.4, 90.93, 93.12, 93.78, 88.05, 88.16, 92.21, 91.97, 95.39, 93.58, 84.41, 84.65, 88.64, 89.98, 91.12, 94.04, 89.19, 89.26, 92.25, 92.32, 93.98, 94.9, 86.65, 87.88, 89.95, 91.14, 93.96, 94.27, 90.9, 86.55, 87.59, 91.62, 91.13, 95.12, 86.77, 87.49, 90.8, 89.74, 93.35, 94.18, 80.64, 81.03, 84.87, 88.21, 91.54, 92.47, 91.92, 88.36, 90.08, 92.49, 93.58, 93.31 ),\n  `VO2_percent` = c( 71.27, 66.6, 72.84, 76.05, 83.97, 83.1, 73.17, 73.36, 75.13, 76.76, 82.17, 80.02, 65.96, 64.11, 76.98, 75.53, 81.19, 87.7, 77.06, 75.21, 82.91, 81.14, 86.2, 88.05, 69.58, 67.18, 76.09, 77.01, 83.24, 82.99, 68.97, 61.94, 67.21, 72.61, 75.89, 79.96, 59.98, 55.95, 63.85, 65.63, 72.7, 75.69, 74.64, 71.07, 77.24, 82.44, 89.64, 82.88, 64.16, 59.83, 66.38, 68.75, 72.98, 72.62 ),\n  `ΔBLC` = c( 2.14440476388244, 2.41, 3.25, 2.66, 4.22, 1.59, 2.28540699787984, 2.32, 3.28, 4.11, 5.36, 3.76, 1.32245689846256, 1.08, 3.54, 2.04, 3.04, 4.51, 1.64039583472131, 2.2, 2.16, 2.09, 3.36, 2.99, 1.3350755332152, 1.78, 1.78, 2.45, 1.55, 3.71, 1.67230744683529, 1.82, 2.69, 3.15, 4.13, 4.37, 1.31227592057723, 2, 2.19, 1.64, 3.53, 2.61, 2.17216275938861, 2, 3.57, 4.4, 6.67, 5.02, 1.25297825424965, 1.1, 1.92, 2.75, 3.52, 3.03 ),\n  `Wirk_Brutto` = c( 0.21091819774276, 0.218687083170556, 0.218760618322075, 0.215611035633622, 0.214547147778117, 0.218930425263281, 0.227778316752638, 0.221045746532832, 0.241032841135073, 0.231877904887968, 0.241135116972538, 0.237391436703597, 0.231766180410934, 0.235455654830026, 0.225781269887199, 0.237080456805955, 0.238940307096781, 0.22236502148504, 0.223093734025061, 0.221665349290325, 0.225584494767251, 0.224321087908687, 0.226863452429123, 0.228356628526559, 0.210066541077549, 0.215613658605269, 0.214257766456576, 0.225374565032104, 0.226632861157903, 0.225342311634305, 0.202757163964259, 0.220274153111015, 0.221156816095123, 0.2037476019667, 0.219912947132494, 0.211113698805482, 0.231505614168667, 0.234285612923503, 0.235567631959634, 0.222650724211751, 0.231727760126706, 0.219734608022672, 0.225208598362406, 0.23752066449308, 0.24609162628488, 0.235239077451739, 0.23507782711413, 0.257565789353377, 0.196493707208499, 0.20725848437317, 0.212413076069613, 0.205403057940064, 0.218886073914972, 0.222063328733195 ),\n  `Wirk_Netto` = c( 0.235366208704023, 0.24575401991436, 0.243091404958539, 0.238518403096868, 0.235435907276559, 0.240279695180822, 0.255934451435372, 0.248097421797994, 0.269612985904083, 0.258824217026203, 0.267696887307786, 0.264544459494061, 0.259459192084525, 0.264732681287629, 0.248201900922679, 0.261299577904801, 0.261524156177508, 0.242125397562104, 0.251321138621137, 0.250186487127734, 0.251530175390694, 0.250643819041199, 0.251705746605124, 0.25286873845261, 0.235236336194875, 0.242214059349332, 0.23731394539996, 0.249555183341606, 0.249068360041437, 0.247347607416278, 0.221558994244514, 0.243163021575891, 0.242168848169494, 0.221339658358084, 0.238068303279725, 0.227659204021592, 0.25865339661502, 0.263730596001978, 0.261320891591058, 0.245994762806019, 0.253547895823224, 0.239800952281731, 0.248645123409885, 0.263685769900833, 0.270630156183426, 0.257261586154533, 0.255302073344076, 0.281816507813529, 0.229914263078336, 0.245377374830505, 0.246568081428814, 0.237160085395944, 0.250569512513164, 0.254821599878365 ),\n  `Wirk_Total` = c( 0.215050980096665, 0.218361213965118, 0.21743918934395, 0.210231759369089, 0.210052326032456, 0.220565206870156, 0.224120419796381, 0.220781351398079, 0.236416282347832, 0.222476343746092, 0.227738869937329, 0.224836096783589, 0.238697915485563, 0.233601219961414, 0.217999410562797, 0.230984992520443, 0.227076019064188, 0.214502300481599, 0.225555773878964, 0.219352301338166, 0.219846792958958, 0.220428214984546, 0.218092136279684, 0.220946373711054, 0.213005949212925, 0.218400909748379, 0.213344733685403, 0.225400741075485, 0.219843269599878, 0.218616391702131, 0.199460121420396, 0.220446212520149, 0.212466511624337, 0.197689880977766, 0.207646479631449, 0.198013299225654, 0.233318299679759, 0.239375318086974, 0.234519392583452, 0.220198847250673, 0.227970762256012, 0.214722135551155, 0.227447147538819, 0.239548486250032, 0.247162950474793, 0.234763503071659, 0.2229381955183, 0.24282867143177, 0.207891012768686, 0.228081605080525, 0.224262888819237, 0.211157426124462, 0.219182082639067, 0.227004603734556 ),\n  `Wirk_Arbeit` = c( 0.247862487404545, 0.253160968214816, 0.248317305395203, 0.238101384924385, 0.235636793902554, 0.248353056021652, 0.252223124451487, 0.248655390436469, 0.264750516922094, 0.247972342497358, 0.252051352897696, 0.249835173535799, 0.290674339857892, 0.284351853248305, 0.254041969959835, 0.27075806004536, 0.262059956436982, 0.246006374208853, 0.282917168134632, 0.274677400862769, 0.267938862065388, 0.270217570609923, 0.262573343325185, 0.265388250568887, 0.265857359551926, 0.274313879330951, 0.259309573409811, 0.274063975273831, 0.261750935900445, 0.259684339862698, 0.23098710636663, 0.26058009978106, 0.245991096843795, 0.22621104152906, 0.235354360073126, 0.222849715844585, 0.286385011940742, 0.299154252396369, 0.283190110066154, 0.263522755836858, 0.267668336610019, 0.250621087215401, 0.257193553520699, 0.272706537461809, 0.277912008983077, 0.261953055017254, 0.24533102151784, 0.269380995629809, 0.25452140555158, 0.286410297975261, 0.271577778890731, 0.252576522311175, 0.258114707808469, 0.269138120186613 )\n  , check.names = FALSE\n)\n\n# Stehen Werte in Wirk_Arbeit auf NA\nBedingungen_data_Wirkungsgrad$Wirk_Arbeit[Bedingungen_data_Wirkungsgrad$Bedingung == \"stehen\"] &lt;- NA\n\n# Spaltennamen ändern\nnames(Bedingungen_data_Wirkungsgrad)[names(Bedingungen_data_Wirkungsgrad) == \"W*Aerob [kJ]\"] &lt;- \"WAerob_kJ\"\nnames(Bedingungen_data_Wirkungsgrad)[names(Bedingungen_data_Wirkungsgrad) == \"WPCR [kJ]\"] &lt;- \"WPCR_kJ\"\nnames(Bedingungen_data_Wirkungsgrad)[names(Bedingungen_data_Wirkungsgrad) == \"WBLC [kJ]\"] &lt;- \"WBLC_kJ\"\nnames(Bedingungen_data_Wirkungsgrad)[names(Bedingungen_data_Wirkungsgrad) == \"WTOT [kJ]\"] &lt;- \"WTOT_kJ\"\n\n# UI Definition\nui &lt;- fluidPage(\n  titlePanel(\"Wirkungsgrad: Boxplots und Histogramme\"),\n  \n  sidebarLayout(\n    sidebarPanel(\n      width = 2,\n      checkboxGroupInput(\"selectedBedingung\", \"Bedingungen:\",\n                         unique(Bedingungen_data_Wirkungsgrad$Bedingung),\n                         selected = c(\"sitzen\", \"stehen\")),\n      checkboxGroupInput(\"selectedIntensität\", \"Intensitäten:\",\n                         unique(Bedingungen_data_Wirkungsgrad$Intensität),\n                         selected = unique(Bedingungen_data_Wirkungsgrad$Intensität)),\n      checkboxGroupInput(\"selectedProband\", \"Probanden:\",\n                         unique(Bedingungen_data_Wirkungsgrad$Proband),\n                         selected = unique(Bedingungen_data_Wirkungsgrad$Proband)),\n      radioButtons(\"wirkungsgrad\", \"Wirkungsgrad:\",\n                   choiceNames = list(\n                     HTML(\"η&lt;sub&gt;muskulär&lt;/sub&gt;\"),\n                     HTML(\"η&lt;sub&gt;Total&lt;/sub&gt;\"),\n                     HTML(\"η&lt;sub&gt;Brutto&lt;/sub&gt;\"),\n                     HTML(\"η&lt;sub&gt;Netto&lt;/sub&gt;\"),\n                     HTML(\"η&lt;sub&gt;Arbeit&lt;/sub&gt;\")\n                   ),\n                   choiceValues = list(\n                     \"Wirk_Muskulär\",\n                     \"Wirk_Total\",\n                     \"Wirk_Brutto\",\n                     \"Wirk_Netto\",\n                     \"Wirk_Arbeit\"\n                   ),\n                   selected = \"Wirk_Muskulär\")\n    ),\n    mainPanel(\n      width = 9,\n      tabsetPanel(\n        tabPanel(\"Boxplots\", plotlyOutput(\"boxplot\")),\n        tabPanel(\"Histogramme\", uiOutput(\"histogramOutput\"))\n      )\n    )\n  )\n)\n\n# Server Logik\nserver &lt;- function(input, output, session) {\n  \n  filtered_data &lt;- reactive({\n    data &lt;- Bedingungen_data_Wirkungsgrad %&gt;%\n      filter(Proband %in% input$selectedProband)\n    \n    # Gruppennamen-Generierung basierend auf ausgewählten Filtern\n    data$Gruppe &lt;- case_when(\n      length(input$selectedBedingung) &gt; 0 && length(input$selectedIntensität) &gt; 0 ~ \n        paste(data$Intensität, data$Bedingung, sep = \"_\"),\n      length(input$selectedBedingung) &gt; 0 ~ data$Bedingung,\n      length(input$selectedIntensität) &gt; 0 ~ data$Intensität,\n      TRUE ~ \"Alle\"\n    )\n    \n    # Filtern nach ausgewählten Bedingungen und Intensitäten\n    if (length(input$selectedBedingung) &gt; 0) {\n      data &lt;- data %&gt;% filter(Bedingung %in% input$selectedBedingung)\n    }\n    \n    if (length(input$selectedIntensität) &gt; 0) {\n      data &lt;- data %&gt;% filter(Intensität %in% input$selectedIntensität)\n    }\n    \n    return(data)\n  })\n  \n  # Erweiterte color_map\n  color_map &lt;- reactive({\n    c(\n      # Kombinierte Farben\n      \"leicht_sitzen\" = \"#42BA97\", \"leicht_stehen\" = \"#62A39F\",\n      \"moderat_sitzen\" = \"#1CADE4\", \"moderat_stehen\" = \"#2683C6\",\n      \"schwer_sitzen\" = \"#EF5350\", \"schwer_stehen\" = \"#C8133B\",\n      # Einzelne Intensitäten\n      \"leicht\" = \"#42BA97\", \"moderat\" = \"#1CADE4\", \"schwer\" = \"#EF5350\",\n      # Einzelne Bedingungen\n      \"sitzen\" = \"#62A39F\", \"stehen\" = \"#2683C6\",\n      # Fallback\n      \"Alle\" = \"#808080\"\n    )\n  })\n  \n  # Wirkungsgrad Boxplot\n  output$boxplot &lt;- renderPlotly({\n    data &lt;- filtered_data()\n    \n    if (nrow(data) == 0) {\n      return(plotly_empty() %&gt;% \n               layout(title = \"Keine Daten für die ausgewählten Kriterien verfügbar\"))\n    }\n    \n    color_map_values &lt;- color_map()\n    \n    p2BxI &lt;- plot_ly(data = data, \n                     x = ~Gruppe, \n                     y = ~get(input$wirkungsgrad),\n                     type = \"box\",\n                     color = ~Gruppe,\n                     colors = color_map_values[unique(data$Gruppe)],\n                     opacity = 0.8, \n                     line = list(color = \"black\", width = 0.9),\n                     boxpoints = \"outliers\",  \n                     pointpos = 0,\n                     marker = list(color = \"black\", size = 4),\n                     boxmean = TRUE,  \n                     hoverlabel = list(bgcolor = \"#F5F5F5\"),\n                     showlegend = FALSE\n    ) %&gt;%\n      layout(\n        title = paste('Wirkungsgrad nach Bedingung und Intensität'),\n        margin = list(t = 40),\n        xaxis = list(\n          title = htmltools::HTML('&lt;b&gt;Gruppe&lt;/b&gt;'), \n          showgrid = TRUE,  \n          gridcolor = \"lightgray\",  \n          gridwidth = 0.05\n        ),  \n        yaxis = list(\n          title = htmltools::HTML(paste('&lt;b&gt;', \"Wirkungsgrad\", '&lt;/b&gt;')), \n          tickformat = \".3f\",\n          showgrid = TRUE,  \n          gridcolor = \"lightgray\",  \n          gridwidth = 0.05\n        )\n      )\n    return(p2BxI)\n  })\n  \n  # Histogramme\n  output$histogramOutput &lt;- renderUI({\n    data &lt;- filtered_data()\n    \n    if (nrow(data) == 0) {\n      return(p(\"Keine Daten für die ausgewählten Kriterien verfügbar\"))\n    }\n    \n    groups &lt;- unique(data$Gruppe)\n    n_groups &lt;- length(groups)\n    \n    # Erstellen Sie Reihen mit je zwei Plots\n    rows &lt;- lapply(seq(1, n_groups, by = 2), function(i) {\n      fluidRow(\n        column(6, plotlyOutput(outputId = paste0(\"hist_\", gsub(\" \", \"_\", groups[i])), height = \"400px\")),\n        if (i + 1 &lt;= n_groups) column(6, plotlyOutput(outputId = paste0(\"hist_\", gsub(\" \", \"_\", groups[i + 1])), height = \"400px\")) else NULL\n      )\n    })\n    \n    # Erstellen Sie die Ausgabe-UI\n    do.call(tagList, rows)\n  })\n  \n  # Rendere die einzelnen Histogramme\n  observe({\n    data &lt;- filtered_data()\n    color_map_values &lt;- color_map()\n    \n    # Berechne globale min und max Werte für die x-Achse\n    x_min &lt;- min(data[[input$wirkungsgrad]], na.rm = TRUE)\n    x_max &lt;- max(data[[input$wirkungsgrad]], na.rm = TRUE)\n    \n    for (group in unique(data$Gruppe)) {\n      local({\n        local_group &lt;- group\n        output_id &lt;- paste0(\"hist_\", gsub(\" \", \"_\", local_group))\n        \n        output[[output_id]] &lt;- renderPlotly({\n          group_data &lt;- data[data$Gruppe == local_group, ]\n          \n          # Bestimme die Farbe basierend auf der Gruppe\n          group_color &lt;- if(local_group %in% names(color_map_values)) {\n            color_map_values[local_group]\n          } else {\n            # Wenn keine spezifische Farbe definiert ist, versuchen wir, eine passende Farbe zu finden\n            intensity &lt;- strsplit(local_group, \"_\")[[1]][1]\n            condition &lt;- strsplit(local_group, \"_\")[[1]][2]\n            if (paste(intensity, condition, sep = \"_\") %in% names(color_map_values)) {\n              color_map_values[paste(intensity, condition, sep = \"_\")]\n            } else if (intensity %in% names(color_map_values)) {\n              color_map_values[intensity]\n            } else if (condition %in% names(color_map_values)) {\n              color_map_values[condition]\n            } else {\n              \"#999999\"  # Fallback-Farbe\n            }\n          }\n          \n          # Führe Shapiro-Wilk-Test durch\n          sw_test &lt;- shapiro.test(group_data[[input$wirkungsgrad]])\n          sw_result &lt;- paste(\"Shapiro-Wilk Test: W =\", round(sw_test$statistic, 3), \n                             \", p =\", format.pval(sw_test$p.value, digits = 3))\n          \n          # Interpretiere das Ergebnis des Shapiro-Wilk-Tests\n          sw_interpretation &lt;- if(sw_test$p.value &gt; 0.05) {\n            \"Die Daten sind normalverteilt (p &gt; 0.05).\"\n          } else {\n            \"Die Daten sind nicht normalverteilt (p ≤ 0.05).\"\n          }\n          \n          plot_ly(data = group_data, x = ~get(input$wirkungsgrad), type = \"histogram\", \n                  marker = list(color = group_color),\n                  opacity = 0.7, nbinsx = 30) %&gt;%\n            layout(\n              title = list(\n                text = paste('Wirkungsgradverteilung -', local_group),\n                font = list(size = 14)\n              ),\n              xaxis = list(title = \"Wirkungsgrad\", range = c(x_min, x_max)),\n              yaxis = list(title = \"Häufigkeit\"),\n              margin = list(l = 30, r = 30, b = 30, t = 60, pad = 4),\n              legend = list(\n                x = 0.98,\n                y = 0.98,\n                xanchor = \"right\",\n                yanchor = \"top\",\n                bgcolor = \"rgba(255, 255, 255, 0.7)\",\n                bordercolor = \"rgba(0, 0, 0, 0)\"\n              ),\n              annotations = list(\n                list(x = 0.5, y = 1.08, xref = \"paper\", yref = \"paper\",\n                     text = sw_result, showarrow = FALSE,\n                     font = list(size = 10)),\n                list(x = 0.5, y = 1.02, xref = \"paper\", yref = \"paper\",\n                     text = sw_interpretation, showarrow = FALSE,\n                     font = list(size = 10))\n              ))\n        })\n      })\n    }\n  })\n}\n\n# ShinyApp starten\nshinyApp(ui = ui, server = server)",
    "crumbs": [
      "Ergebnisse & Statistik",
      "Wirkungsgrad- und Stoffwechselparameter"
    ]
  },
  {
    "objectID": "Ergebnisse/Wirkungsgrad_Statistik.html#operationalisierung-der-hypothesen-zum-muskulären-wirkungsgrad",
    "href": "Ergebnisse/Wirkungsgrad_Statistik.html#operationalisierung-der-hypothesen-zum-muskulären-wirkungsgrad",
    "title": "Wirkungsgrad- und Stoffwechselparameter",
    "section": "Operationalisierung der Hypothesen zum muskulären Wirkungsgrad",
    "text": "Operationalisierung der Hypothesen zum muskulären Wirkungsgrad\nDie Forschungshypothese, die eine intensitätsabhängige Beziehung des muskulären Wirkunsgrades zwischen den Fahrpositionen annimmt, wurde in folgende statistische Hypothesen überführt:\n\nH0: Der muskuläre Wirkungsgrad (ηmuskulär) unterscheidet sich in keiner Intensitätsstufe signifikant zwischen sitzender und stehender Fahrposition.➙ ηmuskulär,sitzen = ηmuskulär,stehen\nH1: Der muskuläre Wirkungsgrad (ηmuskulär) unterscheidet sich in mindestens einer Intensitätsstufe signifikant zwischen sitzender und stehender Fahrposition.➙ ηmuskulär,sitzen ≠ ηmuskulär,stehen\n\nZur Hypothesenprüfung wurde mit dem ηmuskulär eine zweifaktorielle Varianzanalyse (ANOVA) mit Messwiederholung, mit den Faktoren Körperposition (sitzen, stehen) und Intensität (leicht, moderat, schwer) durchgeführt. Bei signifikanten Haupteffekten wurden a priori festgelegte Post-hoc-Analysen mittels gepaarter t-Tests mit Bonferroni-Korrektur berechnet, um die Unterschiede zwischen den Fahrpositionen innerhalb der jeweiligen Intensitätsstufen detailliert zu analysieren. Die Effektstärken wurden durch das partielle Eta-Quadrat (ηp2) für die Varianzanalyse und Cohens d für die Post-hoc-Vergleiche quantifiziert.",
    "crumbs": [
      "Ergebnisse & Statistik",
      "Wirkungsgrad- und Stoffwechselparameter"
    ]
  },
  {
    "objectID": "Ergebnisse/Wirkungsgrad_Statistik.html#inferenzstatistische-analyse-des-muskulären-wirkungsgrad",
    "href": "Ergebnisse/Wirkungsgrad_Statistik.html#inferenzstatistische-analyse-des-muskulären-wirkungsgrad",
    "title": "Wirkungsgrad- und Stoffwechselparameter",
    "section": "Inferenzstatistische Analyse des muskulären Wirkungsgrad",
    "text": "Inferenzstatistische Analyse des muskulären Wirkungsgrad\nDie zweifaktorielle Varianzanalyse des ηmuskulär zeigt signifikante Haupteffekte der Bedingung (F(1,8) = 7.64, p = .024, ηp2 = .202) und der Intensität (F(2,16) = 5.23, p = .018, ηp2 = .114) sowie einen signifikanten Interaktionseffekt der Intensität und Bedingung (F(2,16) = 8.42, p = .003, ηp2 = .054). Die Post-hoc-Analysen mithilfe von gepaarten t-Tests mit Bonferroni-Korrektur zeigen zwischen sitzender und stehender Bedingung bei leichter Intensität einen signifikanten Unterschied mit einer großen Effektstärke (p = .011, d = 1.36). Der Vergleich bei moderater Intensität weist eine mittlere Effektstärke auf, erreicht jedoch keine Signifikanz (p = .153, d = .76). Bei schwerer Intensität zeigt sich ein nicht-signifikanter Unterschied bei kleiner Effektstärke (p = .807, d = .40) (Tabelle 9). Die Nullhypothese, wonach sich der muskuläre Wirkungsgrad (ηmuskulär) innerhalb keiner Intensitätsstufe signifikant zwischen sitzender und stehender Fahrposition unterscheidet, wird für die leichte Intensitätsstufe abgelehnt. Entsprechend wird die Alternativhypothese angenommen, dass sich der muskuläre Wirkungsgrad in mindestens einer Intensitätsstufe signifikant zwischen den Fahrpositionen unterscheidet (p = .011, d = 1.36).\nDer muskuläre Wirkungsgrad beträgt im Mittel über alle Bedingungen und Intensitäten 24.53 ± 1.10% mit einer Spannweite von 22.46% bis 26.91%. Bei differenzierter Betrachtung der Bedingungen zeigt sich ein signifikant höherer Wert in sitzender Position mit 24.98 ± 1.06% im Vergleich zur stehenden Position mit 24.07 ± 0.96%. Der gepaarte t-Test zeigt einen signifikanten Unterschied zwischen den Bedingungen (t(26) = 4.187, p &lt; .001, d = 0.806). Bei Betrachtung der verschiedenen Intensitätsstufen ist ein systematischer Abfall des ηmuskulär von 24.94 ± 1.27% bei leichter über 24.50 ± 1.01% bei moderater bis zu 24.14 ± 0.90% bei schwerer Intensität erkennbar. Die einfaktorielle Varianzanalyse ergab einen signifikanten Effekt der Intensität (F(2,16) = 5.23, p = .018, ηp2 = .395). In den Post-hoc-Analysen wurde ein tendenziell signifikanter Unterschied zwischen leichter und schwerer Intensität mit einer mittleren Effektstärke (p = .096, d = .75) festgestellt, während die Vergleiche zwischen moderater und leichter Intensität (p = .700, d = 0.41) sowie zwischen schwerer und moderater Intensität (p = .710, d = 0.34) keine signifikanten Unterschiede aufwiesen (Tabelle 5).\nDie ermittelten ηmuskulär-Werte dieser Studie liegen, mit durchschnittlich 24.53 ± 1.10% (R: 22.46 - 26.91%), deutlich unterhalb der in Bell & Ferguson (2009) dokumentierten Werte für ηmuskulär von 31.0 ± 4.3%. Dass die hier ermittelten Werte niedriger ausfallen, ist nachvollziehbar, da die Ergebnisse von Bell & Ferguson (2009) auch im Vergleich zur übrigen Literatur außergewöhnlich hohe Wirkungsgrade aufweisen, was auch in der Originalpublikation kritisch reflektiert wurde. Eine direkte Vergleichbarkeit der Absolutwerte mit denen von Bell & Ferguson (2009) ist daher nur eingeschränkt gegeben. Die ermittelten ηmuskulär-Werte liegen zudem unter den von Luhtanen et al. (1987) berichteten Durchschnittswerten von ca. 25.35 ± 3.15%, mit Werten zwischen 21.0 ± 1.5% bis 29.7 ± 4.2%.",
    "crumbs": [
      "Ergebnisse & Statistik",
      "Wirkungsgrad- und Stoffwechselparameter"
    ]
  },
  {
    "objectID": "Ergebnisse/Wirkungsgrad_Statistik.html#explorative-inferenzstatistische-analysen",
    "href": "Ergebnisse/Wirkungsgrad_Statistik.html#explorative-inferenzstatistische-analysen",
    "title": "Wirkungsgrad- und Stoffwechselparameter",
    "section": "Explorative inferenzstatistische Analysen",
    "text": "Explorative inferenzstatistische Analysen\nIm Rahmen der explorativen Analysen wurden weitere Wirkungsgrade sowie deren zugrundeliegende physiologische und mechanische Energiekomponenten untersucht. Die Analyse dieser Parameter erfolgte nach den zuvor beschriebenen statistischen Verfahren. Diese explorative Analyse ermöglicht ein tiefergehendes Verständnis der Gründe für potentielle Unterschiede der Wirkungsgrade zwischen den Fahrpositionen.\n\nGesamtwirkungsgrad\nDie zweifaktorielle Varianzanalyse des ηTotal zeigt keinen signifikanten Haupteffekt der Bedingung (F(1,8) = 0.53, p = .487, ηp2 = .015) und keinen signifikanten Haupteffekt der Intensität (F(2,16) = 1.26, p = .311, ηp2 = .017). Es zeigt sich ein tendenziell signifikanter Interaktionseffekt zwischen Intensität und Bedingung (F(2,16) = 2.90, p = .084, ηp2 = .013). Der Gesamtwirkungsgrad ηTotal liegt mit durchschnittlich 22.19 ± 1.07% (Range (R): 19.77-24.72%) erwartungsgemäß unter dem ηmuskulär. Zwischen den Bedingungen zeigen sich nur geringe Unterschiede (sitzen: 22.06 ± 0.70%, stehen: 22.32 ± 1.34%). Auch über die Intensitäten hinweg bleibt ηTotal weitgehend stabil mit einem leichten Abfall von 22.35 ± 1.10% bei leichter zu 22.01 ± 0.96% bei schwerer Intensität.  Bei differenzierter Betrachtung des ηTotal zeigt sich in sitzender Position ein kontinuierlicher Abfall von leichter (22.38 ± 0.71%) über moderate (22.04 ± 0.66%) zu schwerer Intensität (21.76 ± 0.66%). In der stehenden Position bleibt der ηTotal über die Intensitäten hinweg sehr stabil mit Werten von leicht (22.31 ± 1.44%) über moderat (22.37 ± 1.55%) bis schwer (22.27 ± 1.18%).\n\n\nNettowirkungsgrad\nDie zweifaktorielle Varianzanalyse des ηNetto ergibt keinen signifikanten Haupteffekt der Bedingung (F(1,8) = 0.48, p = .507, ηp2 = .012) und keinen signifikanten Haupteffekt der Intensität (F(2,16) = 0.59, p = .565, ηp2 = .009). Es zeigt sich jedoch ein signifikanter Interaktionseffekt zwischen Intensität und Bedingung (F(2,16) = 4.52, p = .028, ηp2 = .019). Die Post-hoc-Analysen mithilfe von gepaarten t-Tests mit Bonferroni-Korrektur zeigen weder bei leichter (p = 1, d = 0.15), moderater (p = 1, d = -0.27) noch bei schwerer Intensität (p = .445, d = -0.53) signifikante Unterschiede zwischen sitzender und stehender Bedingung (Tabelle 10). Der Nettowirkungsgrad ηNetto beträgt durchschnittlich 24.94 ± 1.23% (R: 22.13-28.18%). Über die Intensitäten hinweg ist ein leichter Anstieg von 24.79 ± 1.22% bei leichter zu 25.08 ± 1.30% bei schwerer Intensität zu beobachten. Bei differenzierter Analyse der Intensität bezüglich der Bedingungen des ηNetto zeigen sich in sitzender Position homogene Werte über alle Intensitätsstufen (leicht: 24.89 ± 0.86%, moderat: 24.78 ± 0.70%, schwer: 24.77 ± 0.97%). In stehender Position ist ein systematischer Anstieg von leichter (24.70 ± 1.54%) über moderate (25.12 ± 1.65%) zu schwerer Intensität (25.39 ± 1.56%) zu beobachten. Die ermittelten ηNetto-Werte liegen mit einer Spanne von 22.13-28.18% und einem Mittelwert von 24.94% oberhalb der in Tabelle 12 am häufigsten dokumentierten ηNetto-Werte von ca. 19-24%. Im Gegensatz zu Harnish et al. (2007), die in beiden Körperpositionen einen Anstieg des ηNetto mit zunehmender Intensität dokumentierten, zeigt die vorliegende Untersuchung ausschließlich in stehender Position einen signifikanten Intensitätseffekt.\n\n\nBruttowirkungsgrad\nDie zweifaktorielle Varianzanalyse des ηBrutto zeigt keinen signifikanten Haupteffekt der Bedingung (F(1,8) = 0.68, p = .433, ηp2 = .013) aber einen signifikanten Haupteffekt der Intensität (F(2,16) = 5.17, p = .019, ηp2 = .062). Zusätzlich zeigt sich ein signifikanter Interaktionseffekt zwischen Intensität und Bedingung (F(2,16) = 4.62, p = .026, ηp2 = .016). Die nachfolgenden Post-hoc-Analysen mittels gepaarter t-Tests mit Bonferroni-Korrektur ergeben weder bei leichter (p = 1, d = 0.13), moderater (p = 1, d = -0.31) noch bei schwerer Intensität (p = .384, d = -0.57) signifikante Unterschiede zwischen sitzender und stehender Bedingung (Tabelle 11).  Der Bruttowirkungsgrad ηBrutto liegt mit 22.43 ± 1.17% (R: 19.65-25.76%) erwartungsgemäß unter dem Nettowirkungsgrad und zeigt zwischen den Bedingungen (sitzen: 22.30 ± 0.78%, stehen: 22.55 ± 1.47%) keine signifikanten Unterschiede (V = 131, p = .167, r = .266). Über die Intensitätsstufen hinweg zeigt sich, bedingt durch den reduzierten Anteil des Ruheenergieumsatzes am aeroben Energieumsatz, ein systematischer Anstieg von leichter (22.06 ± 1.17%) über moderate (22.46 ± 1.18%) zu schwerer Intensität (22.76 ± 1.13%). Die einfaktorielle Varianzanalyse mit Greenhouse-Geisser-Korrektur (ε = 0.563) zeigt einen signifikanten Effekt der Intensität (F(1.125, 9.001) = 5.17, p = .046, ηp2 = .393). Die Post-hoc-Analysen zeigen zwischen leichter und schwerer Intensität einen signifikanten Unterschied mit einer mittleren Effektstärke (p = .047, d = 0.60). Der Vergleich zwischen moderater und leichter Intensität erreicht keine Signifikanz (p = .348, d = .34). Zwischen schwerer und moderater Intensität zeigt sich ebenfalls ein nicht-signifikanter Unterschied (p = .553, d = .26) (Tabelle 6). Die Analyse des ηBrutto innerhalb der Bedingungen zeigt in sitzender Position einen leichten Anstieg von leichter (22.12 ± 0.90%) zu schwerer Intensität (22.48 ± 0.74%). In stehender Position ist ein größerer Anstieg von leichter (22.00 ± 1.45%) zu schwerer Intensität (23.04 ± 1.41%) zu beobachten. Die ermittelten ηBrutto-Werte bewegen sich mit einer Spanne von 19.65-25.76% und einem Mittelwert von 22.43% im oberen Bereich der in Tabelle 12 am häufigsten dokumentierten ηBrutto-Werte von etwa 19-23%. Der beobachtete Anstieg des ηBrutto mit zunehmender Intensität, korrespondiert mit den Befunden mehrerer Studien (Seabury et al. (1977), Chavarren & Calbet (1999), Zoladz et al. (2023)), die ebenfalls einen systematischen Anstieg des ηBrutto bei höherer Belastungsintensität dokumentierten.\n\n\nArbeitswirkungsgrad\nDer Arbeitswirkungsgrad ηArbeit,sitzen wurde aufgrund des nicht bestimmten Sauerstoffumsatzes für die Leerbewegung im Stehen ausschließlich für die sitzende Position berechnet. Mit durchschnittlich 25.91 ± 1.39% (R: 23.54-28.64%) liegt er über dem muskulären Wirkungsgrad und weist die höchsten Werte im Vergleich zu allen anderen berechneten Wirkungsgraden auf. Über die Intensitäten hinweg zeigt sich ein systematischer Abfall von leichter (26.86 ± 1.48%) über moderater (25.81 ± 0.96%) zu schwerer Intensität (25.05 ± 1.16%). Die einfaktorielle Varianzanalyse zeigt einen signifikanten Effekt der Intensität (F(2,16) = 13.34, p &lt; .001) mit großer Effektstärke (ηp2 = .63). Die Post-hoc Analysen bestätigen signifikante Unterschiede zwischen folgenden Intensitätsstufen (schwer-leicht: p = .009, d = 1.389; schwer-moderat: p = .021, d = 1.199). Zwischen der moderaten und leichten Intensitätsstufe zeigte sich ein tendenziell signifikanter Unterschied (p = .067, d = 0.941) (Tabelle 7). Die für die sitzende Position ermittelten ηArbeit-Werte ordnen sich mit durchschnittlich 25.91 ± 1.39% in dem unteren Bereich der von Gaesser & Brooks (1975) (25-28%) berichteten Spannweite ein. Die beobachtete systematische Reduktion des ηArbeit mit zunehmender Belastungsintensität steht dabei im Kontrast zu den von Gaesser & Brooks (1975) dokumentierten Effekten.\n\n\n\n\n\n\nTabellarische Übersicht unterschiedlich berechneter Wirkungsgrade\n\n\n\n\n\n\n\n\n\nTabelle 12: Tabellarische Übersicht unterschiedlich berechneter Wirkungsgrade beim Fahrradfahren unter verschiedenen Bedingungen\n\n\n\nAutorenBelastungsintensitätTrittrate [U·min⁻¹]TeilnehmendeBerechneter ηWirkungsgrad [%]Dickinson & Dickinson (1929)Belastungsdauer: 10 min28-111N = 1 | ♀ηnettoηnetto = 19.0 ± 2.8%→ Optimale Trittrate bei 33.3 U/minHenry & DeMoor (1950)113 | 150 Belastungsdauer: 6 min61N = 9 | ♂ηnettoηnetto = 21.2% | ηnetto = 19.3% → Niedriger ηnetto bei höherer LastGaesser & Brooks (1975)32.7 | 65.4 | 98.1 | 130.8 Belastungsdauer: 6-8 min40 | 60 | 80 | 100N = 12 | 19-24 Jahre | ♂ηbruttoηnettoηArbeitηDeltaη40,brutto = 12-20 | η60,brutto = 12-20 | η80,brutto = 10-19 | η100,brutto = 8-17η40,netto = 19-24 | η60,netto = 19-24 | η80,netto = 15-22 | η100,netto = 10-19η40,Arbeit = 25-26 | η60,Arbeit = 26-27 | η80,Arbeit = 26 | η100,Arbeit = 27-28ηDelta = 24.4-34.0→ η steigt mit steigender BelastungsintensitätSeabury et al. (1977)40.8 | 81.7 | 122.6 | 163.4 | 196.1 | 204.2 | 245.1 | 286.0 | 326.8 Belastungsdauer: 6 min42 | 46 | 50 | 54 | 58 | 59 | 61 | 62 | 64N = 3 | ♂ηbruttoηbrutto = 15.4 | ηbrutto = 19.2 | ηbrutto = 20.9 | ηbrutto = 21.9 | ηbrutto = 21.4 | ηbrutto = 22.6 | ηbrutto = 23.0 | ηbrutto = 23.4 | ηbrutto = 23.6→ Steigender ηbrutto bei höherer LastSuzuki (1979)20-80% V̇O₂ₘₐₓBelastungsdauer: 15 min60 | 100N = 6  3ST: 78% ST-Fasern & 3FT: 76% FT-Fasern | 32.0 ± 5.6 Jahre | ♂LN: 2-4V̇O₂ₘₐₓ = 60.7 ± 5.7 [l·min⁻¹·kg⁻¹]ηDeltaST-Gruppe:ηDelta, 60 = 23.3 ± 0.9ηDelta, 100 = 19.6 ± 1.6FT-Gruppe:ηDelta, 60 = 25.3 ± 2.3ηDelta, 100 = 28.8 ± 1.0→ ηDelta sinkt/steigt in ST-Gruppe/FT-Gruppe mit steigender TrittrateLuhtanen et al. (1987)50% V̇O₂ₘₐₓ | AerT | AnT | AnT + 30 Watt | AnT + 60 WattBelastungsdauer: 5 min60N = 12 | 21-38 Jahre | ♂LN: 3V̇O₂ₘₐₓ = 59.6 ± 2.5 [l·min⁻¹·kg⁻¹]ηbruttoηnettoηmuskulärηbrutto = 17.4 ± 1.0 - 19.7 ± 2.8ηnetto = 17.5 ± 0.7 - 21.8 ± 2.4ηmuskulär = 21.0 ± 1.5 - 29.7 ± 4.2→ η sinkt mit steigender BelastungsintensitätFrancescato et al. (1995)20-125W Belastungsdauer: 6 min40 | 60 | 80 | 100N = 4 | 22.2 ± 1.5 Jahre | ♂LN: 1V̇O₂max = 37.8 ± 4.9 [ml·min⁻¹·kg⁻¹]ηDeltaηDelta = 22.9 - 32.0→ ηdelta steigt mit steigender TrittrateChavarren & Calbet (1999)54% | 63%| 73% | 80% | 87% | 93% der V̇O₂ₘₐₓBelastungsdauer: 6 min60 | 80 | 100 | 120N = 7 | 22-25 Jahre | ♂LN: 4-5V̇O₂ₘₐₓ = 67.77 ± 5.07 [l·min⁻¹·kg⁻¹]ηbruttoηDeltaηbrutto = 13.0 ± 0.4 - 19.9 ± 0.7ηDelta = 21.5 ± 0.8 - 23.9 ± 1.0→ ηbrutto steigt mit steigender Belastungsintensität→ ηbrutto sinkt mit steigender Drehzahl→ ηDelta steigt mit steigender DrehzahlBeneke et al. (2002)WAnTST: letzte Stufe bei 362 ± 41 WattWAnT = 80 - 170N = 7 | 21.6 ± 3.8 Jahre | ♂LN: 1-3; Sportartfremd: Rugby V̇O₂ₘₐₓ = 51.34 ± 9.44 [l·min⁻¹·kg⁻¹]ηnettoηnetto, WAnT = 16.2 ± 1.6ηnetto, ST = 24.1 ± 1.7Millet et al. (2002)75% des PPOBelastungsdauer: 6 min60 | 90N = 8 | 20.7 ± 3.9 Jahre | ♂ηbruttoηbrutto,sitzen = 22.4 ± 0.8ηbrutto,stehen = 22.5 ± 1.9→ Keine sig. Unterschiede zw. ηbrutto,stehen und ηbrutto,sitzenHarnish et al. (2007)50% | 65% | 75% | 93% des PPOSitzen: 74.6-82.4Stehen: 57.0-65.8N = 8 | 25.8 ± 7.2 Jahre | 7♂ 1♀LN: 4-5V̇O₂ₘₐₓ = 68.8 ± 5.0 [l·min⁻¹·kg⁻¹]ηnettoηnetto,sitzen = 24.2 ± 1.7 - 26.0 ± 1.7 ηnetto,stehen = 25.1 ± 3.7 - 26.7 ± 2.3 → Keine sig. Unterschiede zw. Sitzen und Stehen→  ηnetto steigt mit steigender BelastungsintensitätBell & Ferguson (2009)75% der VT45 | 60 | 75 | 90N = 16 (8 jung / 8 alt) | 19-74 Jahre | ♀ηnettoηmuskulärηnetto, jung = 27.5 ± 4.0 | 29.1 ± 5.1ηnetto, alt = 22.4 ± 6.9 | 20.7 ± 5.5ηmuskulär, jung = 32.0 ± 3.1 | 34.0 ± 5.5ηmuskulär, alt = 30.2 ± 3.1 | 27.9 ± 4.1→ Muskeltemp.normal | Muskeltemp.erhöhtBouillod & Pinot (2014)3.8 | 4.2 | 4.6 [W·kg⁻¹]-N = 13LN: Eliteηbruttoηbrutto, sitzen = 20.6 ± 1.1 ηbrutto, stehen = 21.5 ± 5.2 → Im Stehen sig. höherer ηbruttoDunst et al. (2023)3s, 8s, 12s, 60s Maximalsprints120N = 12 | LN: Elite-Bahnradsportler3♀: 18.7 ± 4.7 Jahre9♂: 22.2 ± 4.4 Jahreηbruttoηbrutto = 10.01 ± 2.18 (3s) - 18.42 ± 1.51 (60s)→ Anstieg von ηbrutto  mit zunehmender SprintdauerZoladz et al. (2023)30-120WBelastungsdauer: 6 min60N = 17 | 23 ± 3 Jahre | ♂LN: 1-3V̇O₂max = 52.3 ± 5.5 [ml·min⁻¹·kg⁻¹]ηbruttoηDeltaηbrutto = 11.6 ± 1.4 - 21.4 ± 1.1ηDelta = 29.8 ± 1.9→ Steigender ηbrutto bei höherer LastCarlsson et al. (2024)AerTBelastungsdauer: 5 min-N = 10 | 25 ± 8 Jahre | ♂LN: Elite-Nationalηbruttoηbrutto, sitzen = 21.3 ± 1.2 ηbrutto, stehen = 21.3 ± 1.1 ηbrutto, sitzen und stehen = 21.0 ± 1.1 → Keine sig. Unterschiede zw. den BedingungenWAnT: Wingate Anaerobic Test; AerT: Aerobe Schwelle; AnT: Anaerobe Schwelle; ST: Stufentest; PPO (Peak Power Output): maximale mechanische Leistung in einem Eingangstest; MAP (Maximal Aerobic Power): höchste über 1 Minute gemittelte Leistung in einem Eingangstes; V̇O2max [ml·min-1·kg-1]: maximaler Sauerstoffvolumenstrom; Pmax: maximale mechanische Leistung; VT: Ventilatorische Schwelle; LN: Leistungsniveau nach De Pauw et al. (2013) abhängig von der V̇O2max [ml·min-1·kg-1] eingeteilt in LN1: &lt;45, LN2: 45-54.9, LN3: 55-64.9, LN4: 65-71, LN5: &gt;71\n\n\n\n\n\n\n\n\n\n\nParameter des physiologischen Energieumsatzes\nDer physiologische Gesamtenergieumsatz WTOT beträgt im Mittel 386.3 ± 75.5 kJ (R: 227.8-567.1 kJ). Zwischen den Bedingungen zeigen sich nur geringe Unterschiede (sitzen: 384.1 ± 79.3 kJ, stehen: 388.5 ± 73.0 kJ). Der gepaarte t-Test zeigt entsprechend keine signifikanten Unterschiede zwischen den Bedingungen (t(26) = -0.761, p = .454, d = 0.146). Über die Intensitäten hinweg ist ein systematischer Anstieg von leichter (344.2 ± 56.4 kJ) über moderate (389.3 ± 69.4 kJ) zu schwerer Intensität (425.4 ± 79.2 kJ) zu beobachten. Bei differenzierter Betrachtung des WTOT innerhalb der Bedingungen zeigt sich dieser Anstieg sowohl in sitzender (leicht: 342.5 ± 60.2 kJ, moderat: 388.7 ± 72.7 kJ, schwer: 421.1 ± 89.7 kJ) als auch in stehender Position (leicht: 345.9 ± 55.9 kJ, moderat: 389.9 ± 70.3 kJ, schwer: 429.7 ± 72.4 kJ).\nDer aerobe Energiebeitrag WAerob macht mit durchschnittlich 343.2 ± 65.1 kJ (R: 211.7-502.4 kJ) den Großteil des Gesamtenergieumsatzes aus. Zwischen den Bedingungen zeigen sich nur geringe Unterschiede (sitzen: 341.0 ± 68.2 kJ, stehen: 345.5 ± 62.9 kJ). Der gepaarte t-Test bestätigt keine signifikanten Unterschiede zwischen den Bedingungen (t(26) = -0.896, p = .379, d = 0.172). Über die Intensitäten hinweg zeigt sich ein systematischer Anstieg von leichter (309.9 ± 48.8 kJ) über moderate (346.0 ± 59.1 kJ) zu schwerer Intensität (373.8 ± 71.8 kJ).\nDer anaerobe Energiebeitrag WPCr beträgt im Mittel 31.0 ± 9.9 kJ (R: 11.9-55.9 kJ). Zwischen den Bedingungen zeigen sich nur geringe Unterschiede (sitzen: 30.6 ± 9.4 kJ, stehen: 31.5 ± 10.5 kJ). Der gepaarte t-Test zeigt entsprechend keine signifikanten Unterschiede zwischen den Bedingungen (t(26) = -0.607, p = .549, d = 0.117). Über die Intensitäten hinweg ist ein systematischer Anstieg von leichter (26.4 ± 8.0 kJ) über moderate (31.2 ± 10.4 kJ) zu schwerer Intensität (35.5 ± 9.9 kJ) zu beobachten.\nDer anaerobe Energiebeitrag WBLC beträgt im Mittel 12.0 ± 4.9 kJ (R: 4.2-24.8 kJ). Zwischen den Bedingungen zeigen sich nur geringe Unterschiede (sitzen: 12.5 ± 5.3 kJ, stehen: 11.5 ± 4.4 kJ). Der gepaarte t-Test zeigt entsprechend keine signifikanten Unterschiede zwischen den Bedingungen (t(26) = 1.068, p = .295, d = 0.205). Über die Intensitäten hinweg ist ein systematischer Anstieg von leichter (7.6 ± 2.1 kJ) über moderate (11.9 ± 3.2 kJ) zu schwerer Intensität (15.8 ± 4.5 kJ) zu beobachten.\nDie Netto-Blutlaktatakkumulation (ΔBLC) beträgt im Mittel 2.75 ± 1.19 mmol·l-1 (R: 1.08-6.67 mmol·l-1). Zwischen den Bedingungen zeigen sich nur geringe Unterschiede (sitzen: 2.82 ± 1.30 mmol·l-1, stehen: 2.60 ± 1.07 mmol·l-1). Der Wilcoxon-Test bestätigt keine signifikanten Unterschiede zwischen den Bedingungen (V = 217, p = .509, r = .127). Über die Intensitäten hinweg ist ein systematischer Anstieg von leichter (1.74 ± 0.44 mmol·l-1) über moderate (2.72 ± 0.80 mmol·l-1) zu schwerer Intensität (3.68 ± 1.24 mmol·l-1) zu beobachten. Bei differenzierter Betrachtung der ΔBLC innerhalb der Bedingungen zeigt sich dieser Anstieg sowohl in sitzender (leicht: 1.72 ± 0.54 mmol·l-1, moderat: 2.80 ± 0.83 mmol·l-1, schwer: 3.95 ± 1.16 mmol·l-1) als auch in stehender Position (leicht: 1.76 ± 0.34 mmol·l-1, moderat: 2.64 ± 0.79 mmol·l-1, schwer: 3.41 ± 1.32 mmol·l-1).\n\n\nErgometrische Parameter zur Bestimmung des Wirkungsgrades\nDie Gesamtleistung PTot beträgt im Mittel 316.5 ± 57.9 W (R: 199.2-452.5 W). Zwischen den Bedingungen zeigen sich signifikante Unterschiede (t(26) = 4.254, p &lt; .001, d = 0.819) mit höheren Werten in sitzender Position (322.0 ± 60.1 W) im Vergleich zur stehenden Position (311.0 ± 56.2 W). Über die Intensitäten hinweg ist ein systematischer Anstieg von leichter (285.9 ± 48.2 W) über moderate (317.3 ± 54.6 W) zu schwerer Intensität (346.4 ± 56.6 W) zu beobachten. Dieser Anstieg zeigt sich sowohl in sitzender (leicht: 292.9 ± 51.9 W, moderat: 322.2 ± 58.1 W, schwer: 350.9 ± 61.6 W) als auch in stehender Position (leicht: 278.9 ± 46.1 W, moderat: 312.4 ± 53.8 W, schwer: 341.9 ± 54.6 W).\nDie mechanische Leistung Pmech beträgt im Mittel 286.7 ± 54.3 W (R: 173.2-411.8 W). Zwischen den Bedingungen zeigen sich signifikante Unterschiede (t(26) = -3.954, p &lt; .001, d = 0.761) mit niedrigeren Werten in sitzender Position (284.6 ± 53.4 W) im Vergleich zur stehenden Position (288.9 ± 56.1 W). Über die Intensitäten hinweg ist ein systematischer Anstieg von leichter (256.4 ± 43.7 W) über moderate (287.8 ± 51.2 W) zu schwerer Intensität (316.0 ± 52.6 W) zu beobachten. Dieser Anstieg zeigt sich sowohl in sitzender (leicht: 255.3 ± 44.2 W, moderat: 284.9 ± 50.7 W, schwer: 313.4 ± 53.3 W) als auch in stehender Position (leicht: 257.5 ± 45.8 W, moderat: 290.6 ± 54.6 W, schwer: 318.7 ± 55.1 W).\nDie interne Leistung PInt beträgt im Mittel 29.8 ± 12.1 W (R: 14.1-59.6 W). Zwischen den Bedingungen zeigen sich signifikante Unterschiede (V = 369, p &lt; .001, r = .830) mit höheren Werten in sitzender Position (37.5 ± 11.3 W) im Vergleich zur stehenden Position (22.1 ± 6.9 W). Über die Intensitäten hinweg ist die interne Leistung weitgehend konstant (leicht: 29.5 ± 12.6 W, moderat: 29.5 ± 12.3 W, schwer: 30.4 ± 12.0 W). Dies zeigt sich sowohl in sitzender (leicht: 37.6 ± 11.6 W, moderat: 37.3 ± 11.8 W, schwer: 37.5 ± 11.9 W) als auch in stehender Position (leicht: 21.4 ± 7.4 W, moderat: 21.8 ± 6.9 W, schwer: 23.2 ± 7.1 W).\nDie Drehzahl beträgt im Mittel 79.4 ± 12.2 U·min-1 (R: 58.6-101.5 U·min-1). Zwischen den Bedingungen zeigen sich signifikante Unterschiede (V = 378, p &lt; .001, r= .872) mit höheren Werten in sitzender Position (89.1 ± 6.6 U·min-1) im Vergleich zur stehenden Position (69.8 ± 8.1 U·min-1). Über die Intensitäten hinweg bleibt die Drehzahl konstant (leicht: 79.4 ± 12.3 U·min-1, moderat: 79.4 ± 12.3 U·min-1, schwer: 79.4 ± 12.6 U·min-1). Dies zeigt sich sowohl in sitzender (leicht: 89.1 ± 6.3 U·min-1, moderat: 89.1 ± 6.6 U·min-1, schwer: 89.0 ± 7.7 U·min-1) als auch in stehender Position (leicht: 69.7 ± 8.2 U·min-1, moderat: 69.8 ± 8.4 U·min-1, schwer: 69.9 ± 8.6 U·min-1).",
    "crumbs": [
      "Ergebnisse & Statistik",
      "Wirkungsgrad- und Stoffwechselparameter"
    ]
  },
  {
    "objectID": "Ergebnisse/index_Ergebnisse.html",
    "href": "Ergebnisse/index_Ergebnisse.html",
    "title": "Ergebnisse & Statistik",
    "section": "",
    "text": "In den folgenden Unterkapiteln werden die Ergebnisse der durchgeführten Untersuchungen dargestellt. Die Gliederung erfolgt nach Eingangsuntersuchungen, physiologischen Belastungs- und Nachbelastungsparametern, ergometrischen Belastungsparametern sowie Wirkungsgrad- und Stoffwechselparametern. Im Kapitel “Wirkungsgrad- und Stoffwechselparameter” werden die inferenzstatistischen Analysen zur Hypothesenprüfung durchgeführt, in den anderen erfolgt die Darstellung der Ergebnisse rein deskriptiv. Diese systematische Aufbereitung der Daten soll eine übersichtliche und nachvollziehbare Präsentation der Untersuchungsergebnisse gewährleisten.\nZur systematischen Analyse und Visualisierung der komplexen Datensätze der zentralen Parameterbereiche, wurden interaktive Shiny-Apps entwickelt. Diese ermöglichen eine umfassende und detaillierte Analyse der erhobenen Daten über die verschiedenen Belastungsintensitäten und -bedingungen hinweg. Jede Anwendung verfügt über Auswahlfelder in der Seitenleiste, die eine gezielte Analyse der Daten nach verschiedenen Kombinationen von Intensität (leicht, moderat, schwer) und Bedingung (sitzend, stehend) ermöglichen. Zusätzlich besteht bei allen Apps die Option, einzelne Probanden in die Analyse ein- oder auszuschließen. Die Daten werden jeweils durch aussagekräftige Visualisierungen (Boxplots, Histogramme oder Balkendiagramme) dargestellt, wobei die statistischen Kennwerte (Mittelwert, Median, Quartile, Minimum und Maximum) direkt ablesbar oder durch Überfahren mit der Maus angezeigt werden. Für die gefilterten Daten werden die entsprechenden Werte zusätzlich in interaktiven Tabellen präsentiert, die einen flexiblen Wechsel zwischen der Darstellung aller individuellen Testdurchläufe und einer zusammengefassten Übersicht mit Mittelwerten sowie zugehörigen Standardabweichungen ermöglichen. Die in den Apps dargestellten Daten fungieren als zentrale Grundlage für alle weiteren Analysen der jeweiligen Parameter und ermöglichen eine transparente Nachvollziehbarkeit der durchgeführten statistischen Auswertungen.",
    "crumbs": [
      "Ergebnisse & Statistik"
    ]
  },
  {
    "objectID": "Ergebnisse/Ergometer_Daten.html#interaktive-analyse-der-ergometrischen-leistungsparameter",
    "href": "Ergebnisse/Ergometer_Daten.html#interaktive-analyse-der-ergometrischen-leistungsparameter",
    "title": "Ergometrische Leistungsparameter",
    "section": "Interaktive Analyse der ergometrischen Leistungsparameter",
    "text": "Interaktive Analyse der ergometrischen Leistungsparameter\n#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| viewerHeight: 950\n\nlibrary(shiny)\nlibrary(shinylive)\nlibrary(DT)\nlibrary(dplyr)\nlibrary(plotly)\n\nErg_data_short &lt;- data.frame(\n  `Proband` = c( 1, 1, 1, 1, 1, 1, 6, 6, 6, 6, 6, 6, 10, 10, 10, 10, 10, 10, 13, 13, 13, 13, 13, 13, 15, 15, 15, 15, 15, 15, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23 ),\n  `Nr` = c( 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6 ),\n  `Bedingung` = c( \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\" ),\n  `Intensität` = c( \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\" ),\n  `nD_Vorgabe [U·min⁻¹]` = c( 77, 84, 84, 77, 84, 77, 59, 79, 59, 79, 59, 79, 62, 92, 92, 62, 62, 92, 76, 100, 76, 100, 100, 76, 95, 67, 95, 67, 67, 95, 83, 85, 85, 83, 85, 83, 88, 59, 59, 88, 59, 88, 85, 64, 64, 85, 85, 64, 75, 88, 88, 75, 75, 88 ),\n  `nD [U·min⁻¹]` = c( 76.6564376505317, 86.4007340902643, 86.151834718222, 76.9699534010204, 86.1492001342774, 77.7545030427186, 59.6696464126312, 79.340733311971, 59.0120747230942, 78.6315332132975, 58.5778147794659, 74.8376014062797, 64.4031353722102, 93.4309539387749, 93.4798136132308, 64.6513676939208, 63.9226666971842, 92.926017486389, 76.1787191980119, 100.725884150632, 76.4965310227163, 100.706804663599, 101.493737868195, 76.2895930915614, 94.9222147345463, 67.3025317640006, 95.6908060743521, 67.7563334376017, 68.9089393183102, 97.2326216948995, 82.3157999725342, 85.1151334584554, 84.9867423386037, 82.4121919818754, 85.6636667989095, 82.5434000701904, 88.3525337219238, 59.2843333028158, 59.6458305272363, 87.9682001902262, 59.0753999888102, 88.6749836398094, 86.1743334757487, 65.9431711942811, 65.5106667200724, 86.0812543343512, 85.3489333648682, 66.2728181161696, 75.2098000386556, 87.7106668141683, 88.0529021962314, 75.7959332733154, 75.7891333821615, 88.2820788795832 ),\n  `P_mech_Vorgabe [W]` = c( 290, 290, 320, 320, 350, 350, 280, 280, 305, 305, 325, 325, 325, 325, 380, 380, 410, 410, 305, 305, 335, 335, 360, 360, 270, 270, 305, 305, 330, 330, 225, 225, 245, 245, 275, 275, 250, 250, 280, 280, 315, 315, 230, 230, 260, 260, 280, 280, 185, 185, 210, 210, 235, 235 ),\n  `P_mech [W]` = c( 286.196809943666, 279.856121744776, 308.058185037385, 316.422860962335, 340.826183919876, 347.288435475183, 277.240209227733, 271.455328132766, 304.467347747788, 298.231190808954, 325.412992360824, 309.694617397985, 323.150737156769, 316.844325140231, 371.96441826512, 380.655666884463, 411.774528793808, 405.478497575611, 300.611680063499, 294.276254054958, 330.974610194196, 323.263418911815, 347.877528040632, 356.523758791993, 264.042555125073, 264.046097801302, 296.595675684983, 312.821367725728, 338.374812212103, 340.655624979066, 222.299144497093, 217.725388710054, 237.149862110928, 238.510476030676, 268.299540676442, 270.26756043723, 259.609504812067, 246.984706949108, 281.340838183762, 276.152650787485, 316.924535968906, 309.069638160985, 220.907452101768, 221.311649982903, 250.936106797992, 254.071699215572, 274.36729230484, 276.737918099592, 175.467181480606, 173.18153762583, 199.048429239061, 199.114857295449, 224.703097248925, 224.226593365666 ),\n  `P_mech_kg [W·kg⁻¹]` = c( 3.76574749925876, 3.68231739137862, 4.05339717154454, 4.16345869687283, 4.48455505157731, 4.56958467730504, 3.79781108531141, 3.71856613880502, 4.17078558558614, 4.08535877820485, 4.45771222412087, 4.24239201915048, 3.94086264825329, 3.86395518463696, 4.53615144225757, 4.64214227907881, 5.02164059504643, 4.94485972653184, 4.17516222310415, 4.08717019520774, 4.5968695860305, 4.48976970710854, 4.83163233389766, 4.95171887211102, 3.47424414638254, 3.47429076054345, 3.90257468006557, 4.11607062797011, 4.45230016068557, 4.48231085498771, 3.41998683841681, 3.34962136477006, 3.6484594170912, 3.66939193893347, 4.12768524117603, 4.15796246826507, 3.24511881015084, 3.08730883686386, 3.51676047729703, 3.45190813484356, 3.96155669961133, 3.86337047701231, 4.6022385854535, 4.61065937464381, 5.22783555829151, 5.29316040032442, 5.71598525635083, 5.7653732937415, 2.92445302467677, 2.88635896043051, 3.31747382065102, 3.31858095492415, 3.74505162081542, 3.73710988942776 ),\n  `Torque Efficiency [%]` = c( 66.42, 80.67, 85.6, 72.95, 87.65, 78.67, 80.04, 86.41, 86.78, 88.63, 88.24, 92.41, 73.99, 73.77, 81.11, 85.39, 91.79, 84.47, 72.05, 72.34, 79.17, 76.95, 79.78, 85.17, 66.52, 69.93, 72.41, 82.58, 87.01, 79.53, 65.43, 72.54, 77.02, 70.47, 80.77, 78.76, 64.47, 62.05, 68.4, 71.35, 77.44, 75.1, 81.99, 82.22, 91.47, 89.76, 92.56, 97.11, 50.58, 59.59, 65.12, 56.31, 63.19, 72.06 ),\n  `P_mech_abs [W]` = c( 430.898453269453, 346.932268431489, 359.894794521274, 433.727303347072, 388.867195271955, 441.471798101275, 346.379136378951, 314.139111107741, 350.86692910731, 336.501760889012, 368.792501882788, 335.122366938868, 436.74295487819, 429.476010923678, 458.572565130538, 445.785439492691, 448.616125076261, 480.02899009992, 417.254676419948, 406.786522182967, 418.029194795729, 420.068975285005, 436.036881620291, 418.609977742272, 396.931552233338, 377.562076360227, 409.578155842889, 378.797651732435, 388.906717354007, 428.323957484394, 339.738475124735, 300.163566795685, 307.893824314181, 338.470207382618, 332.172517017126, 343.174345545978, 402.65419504435, 398.061154186489, 411.292076398934, 387.025904346715, 409.236247070283, 411.542819605474, 269.447435024309, 269.166149547195, 274.335758746147, 283.051443499869, 296.406742555017, 284.967630696716, 346.914329776961, 290.644914064715, 305.65464771739, 353.590906241965, 355.615760249487, 311.181510014167 ),\n  `P_max [W]` = c( 720.71392917246, 550.697854561856, 587.417097655553, 787.012012890423, 634.931737852808, 846.118844347542, 578.609811212814, 526.754221690469, 618.616237792837, 583.178213938422, 677.46839262409, 586.294927750192, 674.210503713599, 609.931100907041, 688.050026599798, 751.453351178328, 782.342779552722, 747.114860859711, 697.739178615104, 599.783453121439, 741.044102327642, 642.75054953451, 678.261118990867, 767.313623578198, 546.342710728637, 596.59219640589, 563.098821554568, 659.349421443241, 701.336341167984, 587.602874558339, 523.918403061563, 432.932490041913, 452.947736533387, 558.40548473631, 513.309499380782, 603.361877693434, 560.027085542369, 643.90077383047, 709.354344682915, 560.027686195494, 751.218524473997, 600.371875917469, 405.818662295843, 446.750025682425, 484.017990617248, 441.823569590808, 475.691772431568, 525.937225940098, 541.967355078066, 411.679083397134, 443.334425922299, 582.825995654505, 614.87764605695, 473.923630452372 ),\n  `P_max_kg [W·kg⁻¹]` = c( 9.4830780154271, 7.24602440212969, 7.72917233757307, 10.3554212222424, 8.35436497174747, 11.1331426887834, 7.92616179743581, 7.21581125603382, 8.47419503825805, 7.98874265669071, 9.28038894005602, 8.03143736644098, 8.22207931358047, 7.43818415740294, 8.39085398292436, 9.1640652582723, 9.54076560430149, 9.11115683975258, 9.69082192520977, 8.33032573779776, 10.292279198995, 8.92709096575709, 9.4202933193176, 10.6571336608083, 7.18871987800839, 7.84989732113013, 7.40919502045484, 8.6756502821479, 9.22810975221031, 7.73161677050446, 8.06028312402404, 6.66049984679866, 6.96842671589827, 8.59085361132785, 7.8970692212428, 9.28249042605283, 7.00033856927961, 8.04875967288088, 8.86692930853643, 7.00034607744368, 9.39023155592496, 7.50464844896836, 8.45455546449672, 9.30729220171718, 10.0837081378593, 9.20465769980849, 9.91024525899101, 10.9570255404187, 9.0327892513011, 6.86131805661889, 7.38890709870498, 9.71376659424175, 10.2479607676158, 7.8987271742062 ),\n  `Pedal_Smoothness [%]` = c( 39.710181579574, 50.8184514296743, 52.4428359792181, 40.2055948041026, 53.6791852731242, 41.0448765909455, 47.914882163269, 51.5335837768147, 49.217483982331, 51.1389458112447, 48.0336788998195, 52.8223258874823, 47.9302436519206, 51.9475600881879, 54.0606647605687, 50.6559277814877, 52.6335181401208, 54.2725782631366, 43.083675000186, 49.0637500123524, 44.6632810590617, 50.293760020264, 51.2896166830574, 46.4638901013413, 48.3291073423363, 44.2590599394396, 52.6720469537052, 47.4439436135393, 48.2471522363413, 57.9737846304978, 42.4301080469913, 50.2908406548503, 52.3570034648903, 42.7127745966365, 52.2685711057555, 44.7936090146139, 46.3565980135841, 38.3575726240913, 39.6615373251182, 49.3105354600425, 42.1880618813037, 51.4796995926358, 54.4350155934243, 49.538139286023, 51.844375965857, 57.5052389013286, 57.6775357922151, 52.6180510620694, 32.375968743603, 42.0671208740445, 44.8980312830359, 34.1636884387502, 36.5443594656413, 47.3128113809467 ),\n  `P_L_percent [%]` = c( 48.33, 50.2, 50.31, 48.74, 50.1, 49.16, 48.83, 47.25, 48.87, 47.74, 48.51, 48.13, 49.1, 47.89, 48.24, 49.08, 49.15, 48.32, 50.47, 51.64, 50.42, 52.2, 52.58, 50.35, 48.94, 48.97, 48.42, 48.87, 48.36, 48.81, 46.98, 47.29, 46.58, 45.97, 46.3, 45.61, 48.33, 47.48, 47.28, 47.99, 47.43, 48.98, 46.68, 47.57, 47.92, 46.93, 47.05, 47.83, 47.46, 48.28, 48.55, 47.93, 47.89, 47.39 ),\n  `P_R_percent [%]` = c( 51.67, 49.8, 49.69, 51.26, 49.9, 50.84, 51.17, 52.75, 51.13, 52.26, 51.49, 51.87, 50.9, 52.11, 51.76, 50.92, 50.85, 51.68, 49.53, 48.36, 49.58, 47.8, 47.42, 49.65, 51.06, 51.03, 51.58, 51.13, 51.64, 51.19, 53.02, 52.71, 53.42, 54.03, 53.7, 54.39, 51.67, 52.52, 52.72, 52.01, 52.57, 51.02, 53.32, 52.43, 52.08, 53.07, 52.95, 52.17, 52.54, 51.72, 51.45, 52.07, 52.11, 52.61 ),\n  `P_Int_Kinematik [W]` = c( NA, NA, NA, NA, NA, NA, 14.100763652975, 24.5534028664068, 15.0963689575941, 22.1151700768599, 17.3844162192499, 25.0023011514367, NA, NA, NA, NA, NA, NA, NA, 54.1998860792695, 26.061124339902, 52.2878157580086, 47.7818881896929, 26.5079250128008, 53.3391906234455, 14.3147915747616, 54.2938342051136, 17.2828759891928, 25.244349916907, 59.5680510358891, 33.3784974506853, 29.7741187061253, 30.3315111051071, 33.950962281492, 29.3032542779672, 36.2250453566804, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA ),\n  `P_Int_Modell [W]` = c( 25.0030113782592, 35.8012933947664, 35.4927795606203, 25.3110458399501, 35.4895234774056, 26.0929432321431, 11.2772822919912, 26.5114016434881, 10.908542042465, 25.8068079920113, 10.6694874822585, 22.2486486488368, 15.741500125853, 48.0615124768915, 48.1369531524429, 15.9242224196747, 15.3918115611545, 47.2864879922241, 24.1895549833046, 55.9178086672442, 24.4935707465672, 55.8860388484466, 57.2064003074772, 24.2953284415851, 49.517125323862, 17.6500541105649, 50.7297211471405, 18.0094946189141, 18.9442986410243, 53.2215873863158, 26.7383367968065, 29.5600478833988, 29.426480838279, 26.832378813769, 30.1352473609116, 26.960742100465, 38.3697440266419, 11.5918218313976, 11.8051673274201, 37.8711938502897, 11.4696955201592, 38.7913797975227, 24.5892412580504, 11.0184578439549, 10.8030749020779, 24.509648850606, 23.8894209404426, 11.1845275722562, 19.8117633448399, 31.4236817494841, 31.7929519602614, 20.2785801635611, 20.2731228878915, 32.0418426886057 ),\n  `P_Int_Kinematik_Modell [W]` = c( 28.8909754387892, 35.4998857304255, 35.1913718962795, 29.1990099004802, 35.1881158130648, 29.9809072926731, 14.100763652975, 24.5534028664068, 15.0963689575941, 22.1151700768599, 17.3844162192499, 25.0023011514367, 19.629464186383, 47.7601048125507, 47.8355454881021, 19.8121864802047, 19.2797756216845, 46.9850803278833, 28.0775190438347, 54.1998860792695, 26.061124339902, 52.2878157580086, 47.7818881896929, 26.5079250128008, 53.3391906234455, 14.3147915747616, 54.2938342051136, 17.2828759891928, 25.244349916907, 59.5680510358891, 33.3784974506853, 29.7741187061253, 30.3315111051071, 33.950962281492, 29.3032542779672, 36.2250453566804, 38.0683363623011, 15.4797858919276, 15.6931313879501, 37.5697861859489, 15.3576595806892, 38.4899721331819, 24.2878335937096, 14.9064219044849, 14.6910389626079, 24.2082411862652, 23.5880132761018, 15.0724916327862, 23.6997274053699, 31.1222740851432, 31.4915442959206, 24.1665442240911, 24.1610869484215, 31.7404350242649 ),\n  `P_Int_Minetti [W]` = c( 30.9809373585523, 49.9999708568148, 49.4263049800275, 31.4908886354531, 49.4202592921155, 32.7945911926717, 10.9250427921879, 34.1502690837115, 10.4513604007798, 32.9455122957744, 10.1471003487607, 27.0326566244167, 16.6543744575556, 73.767219490831, 73.9216467087448, 16.9126300356257, 16.1629198459443, 72.185435664816, 28.625533659378, 87.4950086871089, 29.1062255383483, 87.428734336969, 90.1936400656646, 28.7925493361139, 72.8402574683913, 18.4088063094599, 75.2282351623464, 18.9103517783538, 20.230298081739, 80.1951316996545, 35.2316188202468, 40.2742001193818, 40.0317444559969, 35.3969341720174, 41.3224846452969, 35.6228942945399, 57.5509437920342, 11.666381586295, 11.9535465499954, 56.5560724625932, 11.5027875753635, 58.3957020942879, 31.2492356208192, 10.715365279786, 10.4370014598679, 31.1144417567931, 30.0690743189332, 10.931239773695, 22.663940206268, 41.9225151672263, 42.5806590146702, 23.3787506423065, 23.370362246721, 43.0256941239315 ),\n  `Koerperlaenge [m]` = c( 1.83, 1.83, 1.83, 1.83, 1.83, 1.83, 1.84, 1.84, 1.84, 1.84, 1.84, 1.84, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.79, 1.79, 1.79, 1.79, 1.79, 1.79, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 1.86, 1.86, 1.86, 1.86, 1.86, 1.86, 1.57, 1.57, 1.57, 1.57, 1.57, 1.57, 1.63, 1.63, 1.63, 1.63, 1.63, 1.63 ),\n  `Masse [kg]` = c( 76, 76, 76, 76, 76, 76, 73, 73, 73, 73, 73, 73, 82, 82, 82, 82, 82, 82, 72, 72, 72, 72, 72, 72, 76, 76, 76, 76, 76, 76, 65, 65, 65, 65, 65, 65, 80, 80, 80, 80, 80, 80, 48, 48, 48, 48, 48, 48, 60, 60, 60, 60, 60, 60 ),\n  `lBein [m]` = c( 0.893, 0.893, 0.893, 0.893, 0.893, 0.893, 0.906, 0.906, 0.906, 0.906, 0.906, 0.906, 0.876, 0.876, 0.876, 0.876, 0.876, 0.876, 4.23, 4.23, 4.23, 4.23, 4.23, 4.23, 0.851, 0.851, 0.851, 0.851, 0.851, 0.851, 0.851, 0.851, 0.851, 0.851, 0.851, 0.851, 0.925, 0.925, 0.925, 0.925, 0.925, 0.925, 0.749, 0.749, 0.749, 0.749, 0.749, 0.749, 0.78, 0.78, 0.78, 0.78, 0.78, 0.78 ),\n  `lOS [m]` = c( 0.439, 0.439, 0.439, 0.439, 0.439, 0.439, 0.446, 0.446, 0.446, 0.446, 0.446, 0.446, 0.427, 0.427, 0.427, 0.427, 0.427, 0.427, 0.423, 0.423, 0.423, 0.423, 0.423, 0.423, 0.412, 0.412, 0.412, 0.412, 0.412, 0.412, 0.412, 0.412, 0.412, 0.412, 0.412, 0.412, 0.458, 0.458, 0.458, 0.458, 0.458, 0.458, 0.359, 0.359, 0.359, 0.359, 0.359, 0.359, 0.379, 0.379, 0.379, 0.379, 0.379, 0.379 ),\n  `lUS [m]` = c( 0.582305761606392, 0.582305761606392, 0.582305761606392, 0.582305761606392, 0.582305761606392, 0.582305761606392, 0.590793534155546, 0.590793534155546, 0.590793534155546, 0.590793534155546, 0.590793534155546, 0.590793534155546, 0.567571140915392, 0.567571140915392, 0.567571140915392, 0.567571140915392, 0.567571140915392, 0.567571140915392, 0.561751724518937, 0.561751724518937, 0.561751724518937, 0.561751724518937, 0.561751724518937, 0.561751724518937, 0.547909664087065, 0.547909664087065, 0.547909664087065, 0.547909664087065, 0.547909664087065, 0.547909664087065, 0.547909664087065, 0.547909664087065, 0.547909664087065, 0.547909664087065, 0.547909664087065, 0.547909664087065, 0.605978547475074, 0.605978547475074, 0.605978547475074, 0.605978547475074, 0.605978547475074, 0.605978547475074, 0.470545428200083, 0.470545428200083, 0.470545428200083, 0.470545428200083, 0.470545428200083, 0.470545428200083, 0.496883286094431, 0.496883286094431, 0.496883286094431, 0.496883286094431, 0.496883286094431, 0.496883286094431 ),\n  `uOS [m]` = c( 0.586, 0.586, 0.586, 0.586, 0.586, 0.586, 0.576, 0.576, 0.576, 0.576, 0.576, 0.576, 0.617, 0.617, 0.617, 0.617, 0.617, 0.617, 0.565, 0.565, 0.565, 0.565, 0.565, 0.565, 0.586, 0.586, 0.586, 0.586, 0.586, 0.586, 0.532, 0.532, 0.532, 0.532, 0.532, 0.532, 0.602, 0.602, 0.602, 0.602, 0.602, 0.602, 0.509, 0.509, 0.509, 0.509, 0.509, 0.509, 0.579, 0.579, 0.579, 0.579, 0.579, 0.579 ),\n  `uUS [m]` = c( 0.372, 0.372, 0.372, 0.372, 0.372, 0.372, 0.367, 0.367, 0.367, 0.367, 0.367, 0.367, 0.387, 0.387, 0.387, 0.387, 0.387, 0.387, 0.362, 0.362, 0.362, 0.362, 0.362, 0.362, 0.372, 0.372, 0.372, 0.372, 0.372, 0.372, 0.346, 0.346, 0.346, 0.346, 0.346, 0.346, 0.38, 0.38, 0.38, 0.38, 0.38, 0.38, 0.32, 0.32, 0.32, 0.32, 0.32, 0.32, 0.354, 0.354, 0.354, 0.354, 0.354, 0.354 ),\n  `lKurbel [m]` = c( 0.175, 0.175, 0.175, 0.175, 0.175, 0.175, 0.175, 0.175, 0.175, 0.175, 0.175, 0.175, 0.1725, 0.1725, 0.1725, 0.1725, 0.1725, 0.1725, 0.1725, 0.1725, 0.1725, 0.1725, 0.1725, 0.1725, 0.175, 0.175, 0.175, 0.175, 0.175, 0.175, 0.1725, 0.1725, 0.1725, 0.1725, 0.1725, 0.1725, 0.1725, 0.1725, 0.1725, 0.1725, 0.1725, 0.1725, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.1725, 0.1725, 0.1725, 0.1725, 0.1725, 0.1725 )\n  , check.names = FALSE\n)\n\n# UI Definition\nui &lt;- fluidPage(\n  titlePanel(\"Ergometer Daten Analyse\"),\n  \n  sidebarLayout(\n    sidebarPanel(\n      width = 2,\n      style = \"height: 90vh; overflow-y: auto;\",\n      radioButtons(\"viewType\", \"Datenansicht:\",\n                   choices = c(\"Einzelwerte\" = \"individual\",\n                               \"Mittelwerte & BP\" = \"means\"),\n                   selected = \"means\"),\n      checkboxGroupInput(\"selectedBedingung\", \"Bedingungen:\",\n                         choices = unique(Erg_data_short$Bedingung),\n                         selected = unique(Erg_data_short$Bedingung)),\n      checkboxGroupInput(\"selectedIntensität\", \"Intensitäten:\",\n                         choices = unique(Erg_data_short$Intensität),\n                         selected = unique(Erg_data_short$Intensität)),\n      radioButtons(\"selectedVariable\", \"Variable für Boxplot:\",\n                   choices = c(\n                     \"nD_Vorgabe [U·min⁻¹]\" = \"nD_Vorgabe [U·min⁻¹]\",\n                     \"nD [U·min⁻¹]\" = \"nD [U·min⁻¹]\",\n                     \"P_mech_Vorgabe [W]\" = \"P_mech_Vorgabe [W]\",\n                     \"P_mech [W]\" = \"P_mech [W]\",\n                     \"P_mech_kg [W·kg⁻¹]\" = \"P_mech_kg [W·kg⁻¹]\",\n                     \"Torque Efficiency [%]\" = \"Torque Efficiency [%]\",\n                     \"P_mech_abs [W]\" = \"P_mech_abs [W]\",\n                     \"P_max [W]\" = \"P_max [W]\",\n                     \"P_max_kg [W·kg⁻¹]\" = \"P_max_kg [W·kg⁻¹]\",\n                     \"Pedal_Smoothness [%]\" = \"Pedal_Smoothness [%]\",\n                     \"P_Int_Kinematik [W]\" = \"P_Int_Kinematik [W]\",\n                     \"P_Int_Modell [W]\" = \"P_Int_Modell [W]\",\n                     \"P_Int_Kinematik_Modell [W]\" = \"P_Int_Kinematik_Modell [W]\",\n                     \"P_Int_Minetti [W]\" = \"P_Int_Minetti [W]\"\n                   ),\n                   selected = \"P_mech [W]\"),\n      checkboxGroupInput(\"selectedProband\", \"Probanden:\",\n                         choices = sort(unique(Erg_data_short$Proband)),\n                         selected = sort(unique(Erg_data_short$Proband)))\n    ),\n    mainPanel(\n      width = 10,\n      conditionalPanel(\n        condition = \"input.viewType == 'means'\",\n        plotlyOutput(\"boxplot\")\n      ),\n      DTOutput(\"ergTable\")\n    )\n  )\n)\n\n# Server-Logik\nserver &lt;- function(input, output, session) {\n  \n  # Gruppierte Variablen nach Dezimalstellen\n  digits_0 &lt;- c(\"nD_Vorgabe [U·min⁻¹]\", \n                \"P_mech_Vorgabe [W]\", \"Nr\")\n  \n  digits_1 &lt;- c(\"nD [U·min⁻¹]\",\n                \"P_mech [W]\",\n                \"P_Int_Minetti [W]\", \n                \"P_mech_abs [W]\",\n                \"P_max [W]\",\n                \"P_Int_Kinematik [W]\", \n                \"P_Int_Modell [W]\", \n                \"P_Int_Kinematik_Modell [W]\",\n                \"Masse [kg]\", \n                \"uOS [m]\",\n                \"Torque Efficiency [%]\", \n                \"Pedal_Smoothness [%]\",\n                \"P_L_percent [%]\", \n                \"P_R_percent [%]\")\n  \n  digits_2 &lt;- c(\"P_mech_kg [W·kg⁻¹]\", \n                \"P_max_kg [W·kg⁻¹]\")\n  \n  digits_3 &lt;- c(\"lKurbel [m]\", \n                \"Koerperlaenge [m]\", \n                \"lBein [m]\",\n                \"lOS [m]\", \n                \"lUS [m]\",\n                \"uOS [m]\",\n                \"uUS [m]\")\n  \n  \n  # Hilfsfunktion für Nachkommastellen\n  get_digits_for_column &lt;- function(col_name) {\n    if(col_name %in% digits_0) {\n      return(0)\n    } else if(col_name %in% digits_1) {\n      return(1)\n    } else if(col_name %in% digits_2) {\n      return(2)\n    } else if(col_name %in% digits_3) {\n      return(3)\n    }\n    return(1)\n  }\n  \n  # Reaktive gefilterte Daten für Tabelle\n  filtered_data &lt;- reactive({\n    data &lt;- Erg_data_short\n    \n    if (length(input$selectedProband) &gt; 0) {\n      data &lt;- data %&gt;% filter(Proband %in% input$selectedProband)\n    }\n    \n    if (length(input$selectedBedingung) &gt; 0) {\n      data &lt;- data %&gt;% filter(Bedingung %in% input$selectedBedingung)\n    }\n    \n    if (length(input$selectedIntensität) &gt; 0) {\n      data &lt;- data %&gt;% filter(Intensität %in% input$selectedIntensität)\n    }\n    \n    if (input$viewType == \"means\") {\n      # Bestimme Gruppierungsvariablen basierend auf Auswahl\n      group_vars &lt;- c()\n      if (length(input$selectedBedingung) &gt; 0 && length(input$selectedIntensität) == 0) {\n        group_vars &lt;- \"Bedingung\"\n      } else if (length(input$selectedBedingung) == 0 && length(input$selectedIntensität) &gt; 0) {\n        group_vars &lt;- \"Intensität\"\n      } else if (length(input$selectedBedingung) &gt; 0 && length(input$selectedIntensität) &gt; 0) {\n        group_vars &lt;- c(\"Bedingung\", \"Intensität\")\n      }\n      \n      if (length(group_vars) == 0) {\n        grouped_data &lt;- data %&gt;%\n          summarise(across(where(is.numeric), \n                           list(mean = ~mean(., na.rm = TRUE),\n                                sd = ~sd(., na.rm = TRUE)))) %&gt;%\n          mutate(Gruppe = \"Gesamt\")\n        group_vars &lt;- \"Gruppe\"\n      } else {\n        grouped_data &lt;- data %&gt;%\n          group_by(across(all_of(group_vars))) %&gt;%\n          summarise(across(where(is.numeric), \n                           list(mean = ~mean(., na.rm = TRUE),\n                                sd = ~sd(., na.rm = TRUE)))) %&gt;%\n          ungroup()\n      }\n      \n      result_data &lt;- grouped_data %&gt;%\n        select(all_of(group_vars))\n      \n      numeric_cols &lt;- names(data)[sapply(data, is.numeric)]\n      for(col in numeric_cols) {\n        mean_col &lt;- paste0(col, \"_mean\")\n        sd_col &lt;- paste0(col, \"_sd\")\n        \n        if(mean_col %in% names(grouped_data) && sd_col %in% names(grouped_data)) {\n          digits &lt;- get_digits_for_column(col)\n          result_data[[col]] &lt;- paste0(\n            format(round(grouped_data[[mean_col]], digits), nsmall = digits),\n            \" ± \",\n            format(round(grouped_data[[sd_col]], digits), nsmall = digits)\n          )\n        }\n      }\n      \n      return(result_data)\n    }\n    \n    return(data)\n  })\n  \n  # Reaktive gefilterte Daten für Plots\n  filtered_data_plots &lt;- reactive({\n    data &lt;- Erg_data_short %&gt;%\n      filter(Proband %in% input$selectedProband)\n    \n    if (length(input$selectedBedingung) &gt; 0) {\n      data &lt;- data %&gt;% filter(Bedingung %in% input$selectedBedingung)\n    }\n    \n    if (length(input$selectedIntensität) &gt; 0) {\n      data &lt;- data %&gt;% filter(Intensität %in% input$selectedIntensität)\n    }\n    \n    # Gruppierung basierend auf Auswahl\n    if (length(input$selectedBedingung) &gt; 0 && length(input$selectedIntensität) == 0) {\n      data$Gruppe &lt;- data$Bedingung\n    } else if (length(input$selectedBedingung) == 0 && length(input$selectedIntensität) &gt; 0) {\n      data$Gruppe &lt;- data$Intensität\n    } else {\n      data$Gruppe &lt;- paste(data$Intensität, data$Bedingung, sep = \"_\")\n    }\n    \n    return(data)\n  })\n  \n  # Color Map\n  color_map &lt;- reactive({\n    c(\n      \"leicht_sitzen\" = \"#42BA97\", \"leicht_stehen\" = \"#62A39F\",\n      \"moderat_sitzen\" = \"#1CADE4\", \"moderat_stehen\" = \"#2683C6\",\n      \"schwer_sitzen\" = \"#EF5350\", \"schwer_stehen\" = \"#C8133B\"\n    )\n  })\n  \n  # Tabellen-Output\n  output$ergTable &lt;- renderDT({\n    data &lt;- filtered_data()\n    \n    if (input$viewType == \"individual\") {\n      columnDefs &lt;- lapply(seq_len(ncol(data)), function(i) {\n        list(\n          targets = i-1,\n          width = paste0(max(\n            nchar(names(data)[i]),\n            max(nchar(as.character(data[[i]])))\n          ) * 10, \"px\"),\n          className = \"dt-nowrap\"\n        )\n      })\n      \n      datatable(data,\n                options = list(\n                  pageLength = 10,\n                  scrollX = TRUE,\n                  scrollCollapse = TRUE,\n                  autoWidth = FALSE,\n                  columnDefs = columnDefs\n                )\n      ) %&gt;%\n        formatRound(\n          columns = intersect(names(data), digits_0),\n          digits = 0\n        ) %&gt;%\n        formatRound(\n          columns = intersect(names(data), digits_1),\n          digits = 1\n        ) %&gt;%\n        formatRound(\n          columns = intersect(names(data), digits_2),\n          digits = 2\n        ) %&gt;%\n        formatRound(\n          columns = intersect(names(data), digits_3),\n          digits = 3\n        )\n    } else {\n      columnDefs &lt;- lapply(seq_len(ncol(data)), function(i) {\n        list(\n          targets = i-1,\n          width = paste0(max(\n            nchar(names(data)[i]),\n            max(nchar(as.character(data[[i]])))\n          ) * 10, \"px\"),\n          className = \"dt-nowrap\"\n        )\n      })\n      \n      datatable(data,\n                options = list(\n                  pageLength = 10,\n                  scrollX = TRUE,\n                  scrollCollapse = TRUE,\n                  autoWidth = FALSE,\n                  columnDefs = columnDefs\n                ),\n                escape = FALSE\n      )\n    }\n  })\n  \n  # Boxplot\n  output$boxplot &lt;- renderPlotly({\n    data &lt;- filtered_data_plots()\n    color_map_values &lt;- color_map()\n    \n    # Farben anpassen basierend auf Gruppierung\n    if (length(input$selectedBedingung) &gt; 0 && length(input$selectedIntensität) == 0) {\n      colors &lt;- c(\"sitzen\" = \"#42BA97\", \"stehen\" = \"#62A39F\")\n    } else if (length(input$selectedBedingung) == 0 && length(input$selectedIntensität) &gt; 0) {\n      colors &lt;- c(\"leicht\" = \"#42BA97\", \"moderat\" = \"#1CADE4\", \"schwer\" = \"#EF5350\")\n    } else {\n      colors &lt;- color_map_values\n    }\n    \n    p &lt;- plot_ly(data = data, \n                 x = ~Gruppe, \n                 y = as.formula(paste0(\"~`\", input$selectedVariable, \"`\")),\n                 type = \"box\",\n                 color = ~Gruppe,\n                 colors = colors[unique(data$Gruppe)],\n                 opacity = 0.8,\n                 line = list(color = \"black\", width = 0.9),\n                 boxpoints = \"outliers\",\n                 pointpos = 0,\n                 marker = list(color = \"black\", size = 4),\n                 boxmean = TRUE,\n                 hoverlabel = list(bgcolor = \"#F5F5F5\"),\n                 showlegend = FALSE\n    ) %&gt;%\n      layout(title = paste('Boxplot:', input$selectedVariable),\n             margin = list(t = 40),\n             xaxis = list(title = \"Gruppe\"),\n             yaxis = list(title = input$selectedVariable))\n    \n    return(p)\n  })\n}\n\n# App starten\nshinyApp(ui = ui, server = server)",
    "crumbs": [
      "Ergebnisse & Statistik",
      "Ergometrische Leistungsparameter"
    ]
  },
  {
    "objectID": "Ergebnisse/Ergometer_Daten.html#verlauf-der-tangentialleistung-aller-durchgänge-über-den-pedalzyklus",
    "href": "Ergebnisse/Ergometer_Daten.html#verlauf-der-tangentialleistung-aller-durchgänge-über-den-pedalzyklus",
    "title": "Ergometrische Leistungsparameter",
    "section": "Verlauf der Tangentialleistung aller Durchgänge über den Pedalzyklus",
    "text": "Verlauf der Tangentialleistung aller Durchgänge über den Pedalzyklus\nDie folgenden Abbildungen visualisieren die mittlere gewichtsbezogene Tangentialleistung über eine Kurbelumdrehung (360°) für beide Beine, wobei die Hauptkurven (gepunktet) sowie deren Streuung (gestrichelt) dargestellt sind. Die horizontale graue Linie kennzeichnet die mittlere mechanische Leistung. Die vertikalen schwarzen Linien markieren die Zeitpunkte der positiven und negativen Leistungsmaxima, die im Sitzen bei etwa 90° (positiv) und 270° (negativ) auftreten. Im Stehen verschieben sich diese Maxima um circa 30° nach hinten. Im Vergleich der Fahrbedingungen zeigen sich im Stehen höhere Maximalwerte sowie eine zeitlich verzögerte Kraftentfaltung. Mit zunehmender Intensität bleiben die Kurvencharakteristika weitgehend stabil, lediglich die Maximalwerte und die Streuung steigen an. Die Symmetrie zwischen linkem und rechtem Bein bleibt in allen Bedingungen mit den erwarteten ca. 180° versetzten Leistungsmaxima erhalten.\n\nGesamtLeicht_SitzenLeicht_StehenModerat_SitzenModerat_StehenSchwer_SitzenSchwer_Stehen\n\n\n\n\n\n\n\n\nAbbildung 1: Verlauf der gewichtsbezogenen Tangentialleistung aller Durchgänge über den Drehwinkel für beide Beine\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 2: Verlauf der gewichtsbezogenen Tangentialleistung der leicht_sitzen-Bedingung über den Drehwinkel für beide Beine\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 3: Verlauf der gewichtsbezogenen Tangentialleistung der leicht_stehen-Bedingung über den Drehwinkel für beide Beine\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 4: Verlauf der gewichtsbezogenen Tangentialleistung der moderat_sitzen-Bedingung über den Drehwinkel für beide Beine\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 5: Verlauf der gewichtsbezogenen Tangentialleistung der moderat_stehen-Bedingung über den Drehwinkel für beide Beine\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 6: Verlauf der gewichtsbezogenen Tangentialleistung der schwer_sitzen-Bedingung über den Drehwinkel für beide Beine\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 7: Verlauf der gewichtsbezogenen Tangentialleistung der schwer_stehen-Bedingung über den Drehwinkel für beide Beine",
    "crumbs": [
      "Ergebnisse & Statistik",
      "Ergometrische Leistungsparameter"
    ]
  },
  {
    "objectID": "Ergebnisse/Ergometer_Daten.html#kreisförmige-darstellung-der-positiven-und-negativen-leistungsanteile-der-pedalzyklen",
    "href": "Ergebnisse/Ergometer_Daten.html#kreisförmige-darstellung-der-positiven-und-negativen-leistungsanteile-der-pedalzyklen",
    "title": "Ergometrische Leistungsparameter",
    "section": "Kreisförmige Darstellung der positiven und negativen Leistungsanteile der Pedalzyklen",
    "text": "Kreisförmige Darstellung der positiven und negativen Leistungsanteile der Pedalzyklen\nDie dargestellten Abbildungen stellen die mittlere Torque Efficiency sowie die positiven (P+) und negativen (P-) Leistungsanteile während der Pedalzyklen kreisförmig dar. Im Vergleich der Fahrbedingungen zeigt sich im Sitzen eine leicht höhere durchschnittliche Torque Efficiency (78.17%) als im Stehen (76.43%) (Abbildung 8). Mit steigender Intensität steigt die Torque Efficiency von 71.17% (leicht) über 77.86% (moderat) auf 82.87% (schwer) (Abbildung 9). Diese Steigerung ist in beiden Fahrbedingungen zu beobachten, wobei im Stehen bei leichter Intensität die geringste (69.19%) und bei schwerer Intensität die höchste Torque Efficiency (83.04%) erreicht wird (Abbildung 10). Die positiven Leistungsanteile (grün) und negativen Leistungsanteile (rot) bleiben innerhalb den Bedingungen über die Kurbelumdrehung weitgehend konstant.\n\nBedingungenIntensitätenBedingungen_Intensitäten\n\n\n\n\n\n\n\n\n\n\nAbbildung 8: Kreisförmige Darstellung der mittleren positiven (P+) und negativen (P-) Leistungsanteile mit resultierender Torque Efficiency während der Pedalzyklen in stehender und sitzender Position\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 9: Kreisförmige Darstellung der mittleren positiven (P+) und negativen (P-) Leistungsanteile mit resultierender Torque Efficiency während der Pedalzyklen in den drei Intensitätsstufen\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 10: Kreisförmige Darstellung der mittleren positiven (P+) und negativen (P-) Leistungsanteile mit resultierender Torque Efficiency während der Pedalzyklen in den Bedingungen sowie drei Intensitätsstufen",
    "crumbs": [
      "Ergebnisse & Statistik",
      "Ergometrische Leistungsparameter"
    ]
  },
  {
    "objectID": "Ergebnisse/Ergometer_Daten.html#zusammenhänge-von-effizienzparametern-der-tretbewegung-und-mechanischer-leistung",
    "href": "Ergebnisse/Ergometer_Daten.html#zusammenhänge-von-effizienzparametern-der-tretbewegung-und-mechanischer-leistung",
    "title": "Ergometrische Leistungsparameter",
    "section": "Zusammenhänge von Effizienzparametern der Tretbewegung und mechanischer Leistung",
    "text": "Zusammenhänge von Effizienzparametern der Tretbewegung und mechanischer Leistung\nDie nachstehenden Abbildungen zeigen die Zusammenhänge zwischen verschiedenen biomechanischen Parametern der Tretbewegung beim Radfahren. Die erste Analyse untersucht die Beziehung zwischen Pmech,kg und der Torque Efficiency und zeigt einen starken, signifikanten Zusammenhang (F(1,52) = 112.80, p &lt; .001, R² = 0.68). Dies deutet darauf hin, dass Probanden mit höheren Pmech,kg Werten in der letzten Stufe des Stufentests tendenziell auch höhere Torque Efficiency Werte aufweisen. Für die Pedal Smoothness zeigt sich ebenfalls ein signifikanter, wenn auch moderaterer Zusammenhang mit Pmech,kg (F(1,52) = 28.56, p &lt; .001, R² = 0.35). Die Daten legen nahe, dass leistungsstärkere Probanden möglicherweise eine gleichmäßigere Trittbewegung mit geringeren relativen Leistungsspitzen im Pedalzyklus aufweisen könnten. Der hochsignifikante positive Zusammenhang zwischen Pedal Smoothness und Torque Efficiency (F(1,52) = 67.24, p &lt; .001, R² = 0.56) könnte auf eine Verbindung dieser Parameter hinweisen. Die Daten deuten an, dass eine höhere Effizienz der Kraftübertragung mit einer gleichmäßigeren Tretbewegung einhergehen könnte.\n\nTorque Efficiency und PmechPedal Smoothness und PmechPedal Smoothness und Torque Efficiency\n\n\n\n\n\n\n\n\n\n\nAbbildung 11: Zusammenhang der Torque Efficiency [%] und Pmech [W·kg-1]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 12: Zusammenhang der Pedal Smoothness [%] und Pmech [W·kg-1]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 13: Zusammenhang der Pedal Smoothness und der Torque Efficiency",
    "crumbs": [
      "Ergebnisse & Statistik",
      "Ergometrische Leistungsparameter"
    ]
  },
  {
    "objectID": "Ergebnisse/Ergometer_Daten.html#interaktive-analyse-der-zusammenhänge-ausgewählter-verschiedener-leistungsparameter-mittels-linearer-regression",
    "href": "Ergebnisse/Ergometer_Daten.html#interaktive-analyse-der-zusammenhänge-ausgewählter-verschiedener-leistungsparameter-mittels-linearer-regression",
    "title": "Ergometrische Leistungsparameter",
    "section": "Interaktive Analyse der Zusammenhänge ausgewählter verschiedener Leistungsparameter mittels linearer Regression",
    "text": "Interaktive Analyse der Zusammenhänge ausgewählter verschiedener Leistungsparameter mittels linearer Regression\nDie folgende Shiny-App bietet die Möglichkeit zur Analyse von weiteren Zusammenhängen ausgewählter Leistungsparameter. In der Seitenleiste können die ausgewählten Daten nach Probanden, Intensitäten und Bedingungen gefiltert werden. Die Auswahl der x- und y-Achse definiert die Variablen für die Regressionsanalyse. Es wird ein interaktives Streudiagramm mit Regressionslinie erstellt, das den linearen Zusammenhang der gewählten Parameter darstellt. Die Anwendung analysiert verschiedene anthropometrische sowie physiologische und ergometrische Leistungsparameter. Für jede Parameterkombination erfolgt eine lineare Regressionsanalyse mit Regressionsgleichung, Bestimmtheitsmaß (R2) und statistischer Signifikanz.\n#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| viewerHeight: 650\nlibrary(shiny)\nlibrary(plotly)\nlibrary(dplyr)\nlibrary(broom)\nlibrary(RColorBrewer)\nlibrary(DT)\n\nBedingungen_data_Shiny_Regression &lt;- data.frame(\n  `Proband` = c( \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"06\", \"06\", \"06\", \"06\", \"06\", \"06\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"13\", \"13\", \"13\", \"13\", \"13\", \"13\", \"15\", \"15\", \"15\", \"15\", \"15\", \"15\", \"19\", \"19\", \"19\", \"19\", \"19\", \"19\", \"20\", \"20\", \"20\", \"20\", \"20\", \"20\", \"22\", \"22\", \"22\", \"22\", \"22\", \"22\", \"23\", \"23\", \"23\", \"23\", \"23\", \"23\" ),\n  `Nr` = c( 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6 ),\n  `Bedingung` = c( \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\" ),\n  `Intensität` = c( \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\" ),\n  `Torque_Efficiency` = c( 66.42, 80.67, 85.6, 72.95, 87.65, 78.67, 80.04, 86.41, 86.78, 88.63, 88.24, 92.41, 73.99, 73.77, 81.11, 85.39, 91.79, 84.47, 72.05, 72.34, 79.17, 76.95, 79.78, 85.17, 66.52, 69.93, 72.41, 82.58, 87.01, 79.53, 65.43, 72.54, 77.02, 70.47, 80.77, 78.76, 64.47, 62.05, 68.4, 71.35, 77.44, 75.1, 81.99, 82.22, 91.47, 89.76, 92.56, 97.11, 50.58, 59.59, 65.12, 56.31, 63.19, 72.06 ),\n  `Pedal_Smoothness` = c( 39.710181579574, 50.8184514296743, 52.4428359792181, 40.2055948041026, 53.6791852731242, 41.0448765909455, 47.914882163269, 51.5335837768147, 49.217483982331, 51.1389458112447, 48.0336788998195, 52.8223258874823, 47.9302436519206, 51.9475600881879, 54.0606647605687, 50.6559277814877, 52.6335181401208, 54.2725782631366, 43.083675000186, 49.0637500123524, 44.6632810590617, 50.293760020264, 51.2896166830574, 46.4638901013413, 48.3291073423363, 44.2590599394396, 52.6720469537052, 47.4439436135393, 48.2471522363413, 57.9737846304978, 42.4301080469913, 50.2908406548503, 52.3570034648903, 42.7127745966365, 52.2685711057555, 44.7936090146139, 46.3565980135841, 38.3575726240913, 39.6615373251182, 49.3105354600425, 42.1880618813037, 51.4796995926358, 54.4350155934243, 49.538139286023, 51.844375965857, 57.5052389013286, 57.6775357922151, 52.6180510620694, 32.375968743603, 42.0671208740445, 44.8980312830359, 34.1636884387502, 36.5443594656413, 47.3128113809467 ),\n  `Wirk_Brutto` = c( 0.21091819774276, 0.218687083170556, 0.218760618322075, 0.215611035633622, 0.214547147778117, 0.218930425263281, 0.227778316752638, 0.221045746532832, 0.241032841135073, 0.231877904887968, 0.241135116972538, 0.237391436703597, 0.231766180410934, 0.235455654830026, 0.225781269887199, 0.237080456805955, 0.238940307096781, 0.22236502148504, 0.223093734025061, 0.221665349290325, 0.225584494767251, 0.224321087908687, 0.226863452429123, 0.228356628526559, 0.210066541077549, 0.215613658605269, 0.214257766456576, 0.225374565032104, 0.226632861157903, 0.225342311634305, 0.202757163964259, 0.220274153111015, 0.221156816095123, 0.2037476019667, 0.219912947132494, 0.211113698805482, 0.231505614168667, 0.234285612923503, 0.235567631959634, 0.222650724211751, 0.231727760126706, 0.219734608022672, 0.225208598362406, 0.23752066449308, 0.24609162628488, 0.235239077451739, 0.23507782711413, 0.257565789353377, 0.196493707208499, 0.20725848437317, 0.212413076069613, 0.205403057940064, 0.218886073914972, 0.222063328733195 ),\n  `Wirk_Netto` = c( 0.235366208704023, 0.24575401991436, 0.243091404958539, 0.238518403096868, 0.235435907276559, 0.240279695180822, 0.255934451435372, 0.248097421797994, 0.269612985904083, 0.258824217026203, 0.267696887307786, 0.264544459494061, 0.259459192084525, 0.264732681287629, 0.248201900922679, 0.261299577904801, 0.261524156177508, 0.242125397562104, 0.251321138621137, 0.250186487127734, 0.251530175390694, 0.250643819041199, 0.251705746605124, 0.25286873845261, 0.235236336194875, 0.242214059349332, 0.23731394539996, 0.249555183341606, 0.249068360041437, 0.247347607416278, 0.221558994244514, 0.243163021575891, 0.242168848169494, 0.221339658358084, 0.238068303279725, 0.227659204021592, 0.25865339661502, 0.263730596001978, 0.261320891591058, 0.245994762806019, 0.253547895823224, 0.239800952281731, 0.248645123409885, 0.263685769900833, 0.270630156183426, 0.257261586154533, 0.255302073344076, 0.281816507813529, 0.229914263078336, 0.245377374830505, 0.246568081428814, 0.237160085395944, 0.250569512513164, 0.254821599878365 ),\n  `Wirk_Total` = c( 0.215050980096665, 0.218361213965118, 0.21743918934395, 0.210231759369089, 0.210052326032456, 0.220565206870156, 0.224120419796381, 0.220781351398079, 0.236416282347832, 0.222476343746092, 0.227738869937329, 0.224836096783589, 0.238697915485563, 0.233601219961414, 0.217999410562797, 0.230984992520443, 0.227076019064188, 0.214502300481599, 0.225555773878964, 0.219352301338166, 0.219846792958958, 0.220428214984546, 0.218092136279684, 0.220946373711054, 0.213005949212925, 0.218400909748379, 0.213344733685403, 0.225400741075485, 0.219843269599878, 0.218616391702131, 0.199460121420396, 0.220446212520149, 0.212466511624337, 0.197689880977766, 0.207646479631449, 0.198013299225654, 0.233318299679759, 0.239375318086974, 0.234519392583452, 0.220198847250673, 0.227970762256012, 0.214722135551155, 0.227447147538819, 0.239548486250032, 0.247162950474793, 0.234763503071659, 0.2229381955183, 0.24282867143177, 0.207891012768686, 0.228081605080525, 0.224262888819237, 0.211157426124462, 0.219182082639067, 0.227004603734556 ),\n  `Wirk_Muskulär` = c( 0.236759931308537, 0.246060440608401, 0.242278598743508, 0.229631619431488, 0.231738880422805, 0.239606281503452, 0.235519448379419, 0.240751242958341, 0.248138483274488, 0.238973954766177, 0.239905278154682, 0.242987590176426, 0.253197378567756, 0.268813524126113, 0.246034674712508, 0.243007190386035, 0.237707989694929, 0.239357891786449, 0.246622974378944, 0.259752672010051, 0.237157651346767, 0.256082449948023, 0.248047661517146, 0.237373974289561, 0.25603524395526, 0.230241128289079, 0.252398922767891, 0.237853768450825, 0.236244609842595, 0.256844301131177, 0.229409310695982, 0.250592406029218, 0.239641017649487, 0.225830203382915, 0.230325301880732, 0.22455381609002, 0.2675313748833, 0.254378184934767, 0.247600833815352, 0.250156276904196, 0.239017863265009, 0.241462546103667, 0.252453992795637, 0.255683248260526, 0.261633090232167, 0.257132037314701, 0.242104726162168, 0.256054300732916, 0.235970111612527, 0.269069913213186, 0.259743624458201, 0.236785575354483, 0.242749525282335, 0.259138280507211 ),\n  `Masse` = c( 76, 76, 76, 76, 76, 76, 73, 73, 73, 73, 73, 73, 82, 82, 82, 82, 82, 82, 72, 72, 72, 72, 72, 72, 76, 76, 76, 76, 76, 76, 65, 65, 65, 65, 65, 65, 80, 80, 80, 80, 80, 80, 48, 48, 48, 48, 48, 48, 60, 60, 60, 60, 60, 60 ),\n  `P_mech` = c( 286.196809943666, 279.856121744776, 308.058185037385, 316.422860962335, 340.826183919876, 347.288435475183, 277.240209227733, 271.455328132766, 304.467347747788, 298.231190808954, 325.412992360824, 309.694617397985, 323.150737156769, 316.844325140231, 371.96441826512, 380.655666884463, 411.774528793808, 405.478497575611, 300.611680063499, 294.276254054958, 330.974610194196, 323.263418911815, 347.877528040632, 356.523758791993, 264.042555125073, 264.046097801302, 296.595675684983, 312.821367725728, 338.374812212103, 340.655624979066, 222.299144497093, 217.725388710054, 237.149862110928, 238.510476030676, 268.299540676442, 270.26756043723, 259.609504812067, 246.984706949108, 281.340838183762, 276.152650787485, 316.924535968906, 309.069638160985, 220.907452101768, 221.311649982903, 250.936106797992, 254.071699215572, 274.36729230484, 276.737918099592, 175.467181480606, 173.18153762583, 199.048429239061, 199.114857295449, 224.703097248925, 224.226593365666 ),\n  `P_mech_kg` = c( 3.76574749925877, 3.68231739137863, 4.05339717154454, 4.16345869687283, 4.48455505157731, 4.56958467730504, 3.79781108531141, 3.71856613880502, 4.17078558558614, 4.08535877820485, 4.45771222412087, 4.24239201915048, 3.94086264825328, 3.86395518463696, 4.53615144225757, 4.64214227907881, 5.02164059504643, 4.94485972653184, 4.17516222310415, 4.08717019520775, 4.5968695860305, 4.48976970710854, 4.83163233389766, 4.95171887211102, 3.47424414638254, 3.47429076054345, 3.90257468006557, 4.11607062797011, 4.45230016068557, 4.48231085498771, 3.41998683841681, 3.34962136477006, 3.6484594170912, 3.66939193893347, 4.12768524117603, 4.15796246826507, 3.24511881015084, 3.08730883686386, 3.51676047729703, 3.45190813484356, 3.96155669961133, 3.86337047701231, 4.6022385854535, 4.61065937464381, 5.22783555829151, 5.29316040032442, 5.71598525635083, 5.76537329374149, 2.92445302467677, 2.88635896043051, 3.31747382065102, 3.31858095492415, 3.74505162081542, 3.73710988942776 ),\n  `nD` = c( 76.6564376505317, 86.4007340902643, 86.151834718222, 76.9699534010204, 86.1492001342774, 77.7545030427186, 59.6696464126312, 79.340733311971, 59.0120747230942, 78.6315332132975, 58.5778147794659, 74.8376014062797, 64.4031353722102, 93.4309539387749, 93.4798136132308, 64.6513676939208, 63.9226666971842, 92.926017486389, 76.1787191980119, 100.725884150632, 76.4965310227163, 100.706804663599, 101.493737868195, 76.2895930915614, 94.9222147345463, 67.3025317640006, 95.6908060743521, 67.7563334376017, 68.9089393183102, 97.2326216948995, 82.3157999725342, 85.1151334584554, 84.9867423386037, 82.4121919818754, 85.6636667989095, 82.5434000701904, 88.3525337219238, 59.2843333028158, 59.6458305272363, 87.9682001902262, 59.0753999888102, 88.6749836398094, 86.1743334757487, 65.9431711942811, 65.5106667200724, 86.0812543343512, 85.3489333648682, 66.2728181161696, 75.2098000386556, 87.7106668141683, 88.0529021962314, 75.7959332733154, 75.7891333821615, 88.2820788795832 ),\n  `VO2_kg_max` = c( 74.4, 74.4, 74.4, 74.4, 74.4, 74.4, 67.8, 67.8, 67.8, 67.8, 67.8, 67.8, 75.4, 75.4, 75.4, 75.4, 75.4, 75.4, 72, 72, 72, 72, 72, 72, 70.1, 70.1, 70.1, 70.1, 70.1, 70.1, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 69.4, 69.4, 69.4, 69.4, 69.4, 69.4, 81.2, 81.2, 81.2, 81.2, 81.2, 81.2, 67.9, 67.9, 67.9, 67.9, 67.9, 67.9 ),\n  `HR_percent` = c( 87.37, 85.07, 88.4, 90.93, 93.12, 93.78, 88.05, 88.16, 92.21, 91.97, 95.39, 93.58, 84.41, 84.65, 88.64, 89.98, 91.12, 94.04, 89.19, 89.26, 92.25, 92.32, 93.98, 94.9, 86.65, 87.88, 89.95, 91.14, 93.96, 94.27, 90.9, 86.55, 87.59, 91.62, 91.13, 95.12, 86.77, 87.49, 90.8, 89.74, 93.35, 94.18, 80.64, 81.03, 84.87, 88.21, 91.54, 92.47, 91.92, 88.36, 90.08, 92.49, 93.58, 93.31 ),\n  `VO2_percent` = c( 71.27, 66.6, 72.84, 76.05, 83.97, 83.1, 73.17, 73.36, 75.13, 76.76, 82.17, 80.02, 65.96, 64.11, 76.98, 75.53, 81.19, 87.7, 77.06, 75.21, 82.91, 81.14, 86.2, 88.05, 69.58, 67.18, 76.09, 77.01, 83.24, 82.99, 68.97, 61.94, 67.21, 72.61, 75.89, 79.96, 59.98, 55.95, 63.85, 65.63, 72.7, 75.69, 74.64, 71.07, 77.24, 82.44, 89.64, 82.88, 64.16, 59.83, 66.38, 68.75, 72.98, 72.62 ),\n  `VO2_avg` = c( 4.032, 3.768, 4.124, 4.28, 4.716, 4.705, 3.609, 3.626, 3.699, 3.783, 4.06, 3.944, 4.176, 3.944, 4.733, 4.652, 4.961, 5.401, 3.965, 3.902, 4.327, 4.195, 4.45, 4.554, 3.728, 3.61, 4.073, 4.095, 4.41, 4.485, 3.232, 2.946, 3.158, 3.407, 3.566, 3.743, 3.324, 3.125, 3.542, 3.637, 4.053, 4.185, 2.929, 2.802, 3.074, 3.208, 3.505, 3.222, 2.637, 2.436, 2.702, 2.802, 2.968, 2.96 ),\n  `VO2_avg_kg` = c( 0.0530526315789474, 0.049578947368421, 0.0542631578947368, 0.0563157894736842, 0.0620526315789474, 0.0619078947368421, 0.0494383561643836, 0.0496712328767123, 0.0506712328767123, 0.0518219178082192, 0.0556164383561644, 0.054027397260274, 0.0509268292682927, 0.0480975609756098, 0.0577195121951219, 0.0567317073170732, 0.0605, 0.0658658536585366, 0.0550694444444444, 0.0541944444444444, 0.0600972222222222, 0.0582638888888889, 0.0618055555555556, 0.06325, 0.0490526315789474, 0.0475, 0.0535921052631579, 0.0538815789473684, 0.0580263157894737, 0.0590131578947368, 0.0497230769230769, 0.0453230769230769, 0.0485846153846154, 0.0524153846153846, 0.0548615384615385, 0.0575846153846154, 0.04155, 0.0390625, 0.044275, 0.0454625, 0.0506625, 0.0523125, 0.0610208333333333, 0.058375, 0.0640416666666667, 0.0668333333333333, 0.0730208333333333, 0.067125, 0.04395, 0.0406, 0.0450333333333333, 0.0467, 0.0494666666666667, 0.0493333333333333 ),\n  `VO2_net_SS` = c( 4.004, 3.712, 4.167, 4.276, 4.986, 4.818, 3.509, 3.494, 3.652, 3.705, 4.014, 4.092, 4.042, 4.027, 4.776, 4.634, 5.108, 5.576, 3.858, 3.746, 4.22, 4.065, 4.479, 4.536, 3.587, 3.466, 3.964, 4.101, 4.406, 4.572, 3.182, 2.837, 3.145, 3.397, 3.596, 3.779, 3.279, 2.99, 3.517, 3.643, 4.162, 4.323, 2.776, 2.645, 2.962, 3.143, 3.468, 3.188, 2.384, 2.211, 2.493, 2.591, 2.812, 2.784 ),\n  `VO2_net_SS_kg` = c( 0.0526842105263158, 0.0488421052631579, 0.0548289473684211, 0.0562631578947368, 0.0656052631578947, 0.0633947368421053, 0.0480684931506849, 0.0478630136986301, 0.050027397260274, 0.0507534246575342, 0.054986301369863, 0.0560547945205479, 0.0492926829268293, 0.049109756097561, 0.0582439024390244, 0.0565121951219512, 0.0622926829268293, 0.068, 0.0535833333333333, 0.0520277777777778, 0.0586111111111111, 0.0564583333333333, 0.0622083333333333, 0.063, 0.0471973684210526, 0.0456052631578947, 0.0521578947368421, 0.0539605263157895, 0.0579736842105263, 0.0601578947368421, 0.0489538461538462, 0.0436461538461538, 0.0483846153846154, 0.0522615384615385, 0.0553230769230769, 0.0581384615384615, 0.0409875, 0.037375, 0.0439625, 0.0455375, 0.052025, 0.0540375, 0.0578333333333333, 0.0551041666666667, 0.0617083333333333, 0.0654791666666667, 0.07225, 0.0664166666666667, 0.0397333333333333, 0.03685, 0.04155, 0.0431833333333333, 0.0468666666666667, 0.0464 ),\n  `W_Aerob` = c( 364.789166022847, 341.629555246705, 380.175743058369, 397.985468023398, 434.291677759482, 433.605222297912, 324.974079503018, 328.244436599334, 338.782659218172, 345.676143718918, 364.680735327353, 257.547695226202, 373.643424879889, 359.053884392895, 449.590938122183, 437.033618580678, 472.355442968317, 502.398965566933, 358.837718601139, 352.868283295468, 394.753364696823, 386.919677670582, 414.624059322391, 422.974893188083, 336.736950672026, 327.040591917684, 374.940893404024, 376.054742927363, 407.568603441812, 413.170309433097, 301.002193914676, 268.616569204091, 293.782454560316, 323.273033581013, 338.095668739063, 356.147551686419, 301.108945263692, 280.951141839367, 322.983175747043, 336.778695169108, 374.987772949063, 386.657728278586, 266.533422098459, 251.790208549518, 278.168675291213, 296.280182766526, 322.403130586883, 294.593727223427, 228.955584309471, 211.732892340367, 242.182720592561, 251.873990890611, 269.030850954527, 263.980675271676 ),\n  `W_PCR` = c( 24.1291998261524, 31.245535169392, 29.1930235666251, 40.7334747429318, 32.1503897341314, 31.0960321619306, 35.5542282425247, 29.8757643229022, 32.3919515398355, 37.4564805468453, 39.181054527315, 28.0856376372225, 25.6241011760421, 42.2362045296838, 43.8865576245131, 46.7522391886717, 55.8553450423781, 41.2539914795555, 33.5030632789753, 39.5610791298099, 47.0313952643199, 43.4984491855838, 48.5683623835727, 47.4643724094369, 28.7114346014479, 27.082865453765, 33.5487723155105, 28.4952050444725, 46.7129326531457, 36.4259657605345, 26.4583220374129, 20.1814127976726, 29.9859705398912, 25.6937955351603, 32.5159707007087, 35.3146550491163, 26.041151647366, 18.4426421779503, 25.8050373268292, 31.1359690227005, 24.1696808725351, 31.9239901224492, 18.2312728474559, 19.2851143909574, 15.5481731391339, 15.0049470739965, 26.5074844823288, 32.024059076605, 19.4890043814307, 11.8721280138382, 16.7847021024629, 20.5569026538069, 25.1374379120318, 20.8232926492238 ),\n  `W_TOT` = c( 399.249717181043, 384.486031190706, 425.026674308594, 451.534337978137, 486.77325839355, 472.361584680434, 371.104350259043, 368.856327421404, 386.353272360279, 402.152227675927, 428.665944180332, 303.033262017248, 406.141884187901, 406.904114446707, 511.87902385356, 494.390128203813, 544.013230226759, 567.096711781505, 399.827955933609, 402.470708891198, 451.643536491319, 439.95740599879, 478.52829630846, 484.086368294384, 371.880535873387, 362.699172964313, 417.065381312399, 416.353601456395, 461.749153605597, 467.47037904168, 334.351262168179, 296.297295681804, 334.852575539387, 361.946410485473, 387.629312790631, 409.468800571675, 333.805156091563, 309.536558225317, 359.894550831632, 376.231739042368, 417.059450298718, 431.818038742475, 291.374221869366, 277.160987465275, 304.579759607115, 324.673591795083, 369.20630625942, 341.89280425728, 253.210342011047, 227.788914715005, 266.270220124784, 282.890629446418, 307.556750821119, 296.32869511474 ),\n  `W_BLC` = c( 10.3313513320441, 11.610940774608, 15.6579076836, 12.815395211808, 20.331190899936, 7.660330220592, 10.5760425135007, 10.736126499168, 15.178661602272, 19.019603410164, 24.804154325664, 17.399929153824, 6.87435813197033, 5.614025524128, 18.401528106864, 10.604270434464, 15.802442216064, 23.443754735016, 7.48717405349485, 10.04134646592, 9.858776530176, 9.539279142624, 15.335874602496, 13.647102696864, 6.43215059991284, 8.575715592864, 8.575715592864, 11.80365348456, 7.46761751064, 17.874103848048, 6.89074621609046, 7.49931368004, 11.08415043918, 12.9795813693, 17.01767335086, 18.00659383614, 6.65505918050507, 10.142774208, 11.10633775776, 8.31707485056, 17.90199647712, 13.23632034144, 6.60952692345146, 6.0856645248, 10.862911176768, 13.38846195456, 20.295691190208, 15.275017957248, 4.76575332014558, 4.1838943608, 7.30279742976, 10.459735902, 13.38846195456, 11.52472719384 )\n  , check.names = FALSE\n)\n\n# Auswahl der gewünschten Variablen\nselected_vars &lt;- c(\"Torque_Efficiency\", \"Pedal_Smoothness\", \n                   \"Wirk_Brutto\", \"Wirk_Netto\", \"Wirk_Total\", \"Wirk_Muskulär\",\n                   \"W_Aerob\", \"W_PCR\", \"W_TOT\", \"W_BLC\",\n                   \"Masse\", \"nD\", \n                   \"P_mech\", \"P_mech_kg\", \"VO2_max\", \"VO2_kg_max\", \"VO2_avg\",\"VO2_avg_kg\", \"VO2_net_SS\",\"VO2_net_SS_kg\", \"HR_percent\", \"VO2_percent\")\n\n# Datenbereinigung\nBedingungen_data_Shiny_Regression&lt;- Bedingungen_data_Shiny_Regression%&gt;%\n  # Konvertiere Proband zu Faktor\n  mutate(Proband = as.factor(Proband),\n         Bedingung = as.factor(Bedingung),\n         Intensität = as.factor(Intensität))\n\n# UI\nui &lt;- fluidPage(\n  tags$head(\n    tags$style(HTML(\"\n      .well {\n        overflow-y: auto;  /* Ermöglichen Sie vertikales Scrollen */\n        overflow-x: hidden; /* Verstecken Sie horizontales Scrollen */\n      }\n    \"))\n  ),\n  \n  titlePanel(\"Interaktive Regressionsanalyse\"),\n  \n  fluidRow(\n    column(2,\n           wellPanel(\n             selectInput(\"x_variable\", \"X-Achse:\", \n                         choices = selected_vars,\n                         selected = \"Torque_Efficiency\"),  # Standard X-Achse\n             selectInput(\"y_variable\", \"Y-Achse:\", \n                         choices = selected_vars,\n                         selected = \"Wirk_Total\"),  # Standard Y-Achse\n             \n             checkboxGroupInput(\"selectedBedingung\", \"Bedingungen:\",\n                                choices = levels(Bedingungen_data_Shiny_Regression$Bedingung),\n                                selected = levels(Bedingungen_data_Shiny_Regression$Bedingung)),\n             \n             checkboxGroupInput(\"selectedIntensität\", \"Intensitäten:\",\n                                choices = levels(Bedingungen_data_Shiny_Regression$Intensität),\n                                selected = levels(Bedingungen_data_Shiny_Regression$Intensität)),\n             \n             checkboxGroupInput(\"selectedProband\", \"Probanden:\",\n                                choices = levels(Bedingungen_data_Shiny_Regression$Proband),\n                                selected = levels(Bedingungen_data_Shiny_Regression$Proband))\n           )\n    ),\n    column(10,\n           plotlyOutput(\"regressionPlot\")\n    )\n  ),\n  \n  fluidRow(\n    column(12,\n           DTOutput(\"summaryTable\"),\n           br(), br()\n    )\n  )\n)\n\nserver &lt;- function(input, output, session) {\n  \n  filtered_data &lt;- reactive({\n    req(input$x_variable, input$y_variable)\n    \n    Bedingungen_data_Shiny_Regression%&gt;%\n      filter(Proband %in% input$selectedProband,\n             Bedingung %in% input$selectedBedingung,\n             Intensität %in% input$selectedIntensität)\n  })\n  \n  # Regression Modell\n  regression_model &lt;- reactive({\n    data &lt;- filtered_data()\n    \n    # Sicherstellen, dass Variablen numerisch sind\n    x_var &lt;- input$x_variable\n    y_var &lt;- input$y_variable\n    \n    formula &lt;- as.formula(paste(y_var, \"~\", x_var))\n    \n    # Fehlerbehandlung für Regression\n    tryCatch({\n      lm(formula, data = data)\n    }, error = function(e) {\n      message(\"Fehler bei der Regressionsberechnung: \", e$message)\n      NULL\n    })\n  })\n  \n  output$regressionPlot &lt;- renderPlotly({\n    req(input$x_variable, input$y_variable)\n    \n    data &lt;- filtered_data()\n    \n    # Prüfe, ob genug Datenpunkte vorhanden sind\n    req(nrow(data) &gt; 2)\n    \n    # Lineare Regression\n    lin_reg &lt;- regression_model()\n    \n    req(!is.null(lin_reg))\n    \n    # Regressionsstatistiken\n    reg_summary &lt;- summary(lin_reg)\n    reg_coefficients &lt;- coef(lin_reg)\n    \n    # Formatierte Regressionsergebnisse\n    equation_text &lt;- sprintf(\"%s(%s) = %.4f · %s + %.4f\", \n                             input$y_variable,\n                             input$x_variable,\n                             reg_coefficients[input$x_variable], \n                             input$x_variable,\n                             reg_coefficients[\"(Intercept)\"])\n    r_squared_text &lt;- sprintf(\"R² = %.4f\", reg_summary$r.squared)\n    \n    # F-Statistik und p-Wert\n    f_stat &lt;- reg_summary$fstatistic\n    p_value &lt;- pf(f_stat[\"value\"], f_stat[\"numdf\"], f_stat[\"dendf\"], lower.tail = FALSE)\n    f_stat_text &lt;- sprintf(\"F (%d, %d) = %.4f, p = %.7f\", \n                           f_stat[\"numdf\"], f_stat[\"dendf\"], \n                           f_stat[\"value\"], p_value)\n    \n    # Sequenz für Regressionslinie\n    x_seq &lt;- seq(min(data[[input$x_variable]], na.rm = TRUE), \n                 max(data[[input$x_variable]], na.rm = TRUE), \n                 length.out = 100)\n    regression_data &lt;- data.frame(x = x_seq)\n    names(regression_data) &lt;- input$x_variable\n    regression_values &lt;- predict(lin_reg, newdata = regression_data)\n    \n    # Plotly-Diagramm\n    plot_ly() %&gt;%\n      add_markers(data = data, \n                  x = as.formula(paste0(\"~\", input$x_variable)), \n                  y = as.formula(paste0(\"~\", input$y_variable)), \n                  type = 'scatter', \n                  mode = 'markers',\n                  color = ~Proband, \n                  colors = colorRampPalette(brewer.pal(10,\"Spectral\"))(length(unique(data$Proband))),\n                  marker = list(size = 9, opacity = 0.8)) %&gt;%\n      layout(\n        title = paste(input$y_variable, \"vs.\", input$x_variable),\n        margin = list(t = 40), \n        xaxis = list(title = input$x_variable),\n        yaxis = list(title = input$y_variable)\n      ) %&gt;%\n      add_lines(x = ~x_seq, y = ~regression_values, \n                name = \"Regressionslinie\", \n                line = list(color = 'darkgrey', width = 2),\n                showlegend = FALSE) %&gt;%\n      add_annotations(\n        text = equation_text, \n        x = min(data[[input$x_variable]], na.rm = TRUE), \n        y = max(data[[input$y_variable]], na.rm = TRUE), \n        showarrow = FALSE, \n        xanchor = 'left', \n        yanchor = 'bottom'\n      ) %&gt;%\n      add_annotations(\n        text = r_squared_text, \n        x = min(data[[input$x_variable]], na.rm = TRUE), \n        y = min(data[[input$y_variable]], na.rm = TRUE) + \n          (max(data[[input$y_variable]], na.rm = TRUE) - \n             min(data[[input$y_variable]], na.rm = TRUE)) * 0.94, \n        showarrow = FALSE, \n        xanchor = 'left', \n        yanchor = 'bottom'\n      ) %&gt;%\n      add_annotations(\n        text = f_stat_text, \n        x = min(data[[input$x_variable]], na.rm = TRUE), \n        y = min(data[[input$y_variable]], na.rm = TRUE) + \n          (max(data[[input$y_variable]], na.rm = TRUE) - \n             min(data[[input$y_variable]], na.rm = TRUE)) * 0.88, \n        showarrow = FALSE, \n        xanchor = 'left', \n        yanchor = 'bottom'\n      )\n  })\n  \n  # Platzhalter für summaryTable\n  output$summaryTable &lt;- renderDT({\n    # Hier können Sie später die Tabelle implementieren\n    NULL\n  })\n}\n\nshinyApp(ui, server)",
    "crumbs": [
      "Ergebnisse & Statistik",
      "Ergometrische Leistungsparameter"
    ]
  },
  {
    "objectID": "Ergebnisse/Ergometer_Daten.html#verlauf-der-modellierten-inneren-leistung-im-pedalzyklus",
    "href": "Ergebnisse/Ergometer_Daten.html#verlauf-der-modellierten-inneren-leistung-im-pedalzyklus",
    "title": "Ergometrische Leistungsparameter",
    "section": "Verlauf der modellierten inneren Leistung im Pedalzyklus",
    "text": "Verlauf der modellierten inneren Leistung im Pedalzyklus\nAbbildung 14 zeigt die modellierte innere Leistung (PInt,Modell) über einen vollständigen Pedalzyklus. Die Kurven stellen den Verlauf für das rechte (grün) und linke (rot) Bein dar, wobei sowohl positive als auch negative Leistungsanteile abgebildet sind.\n\n\n\n\n\n\n\n\nAbbildung 14: Beispielhafter Verlauf der modellierten inneren Leistung (PInt,Modell) über einen kompletten Pedalzyklus (360°), dargestellt mit positiven und negativen Leistungsanteilen für das rechte (grün) und linke Bein (rot).\n\n\n\n\nAbbildung 15 visualisiert im Unterschied zu Abbildung 14 ausschließlich die positiven Leistungsanteile der PInt,Modell. Zusätzlich ist der in diesem Beispiel berechnete Mittelwert der positiven Pint,modell Werte als horizontale Linie (grau gestrichelt) eingezeichnet.\n\n\n\n\n\n\n\n\nAbbildung 15: Beispielhafte Darstellung der positiven Anteile der modellierten inneren Leistung beider Beine mit berechneter Pint_modell als mittlerer Wert der positiven Pint Werte über einen vollständigen Kurbelzyklus.",
    "crumbs": [
      "Ergebnisse & Statistik",
      "Ergometrische Leistungsparameter"
    ]
  },
  {
    "objectID": "Ergebnisse/Ergometer_Daten.html#zeitlicher-verlauf-der-aus-der-3d-kinematik-modellierten-inneren-leistung-während-der-pedalbewegung",
    "href": "Ergebnisse/Ergometer_Daten.html#zeitlicher-verlauf-der-aus-der-3d-kinematik-modellierten-inneren-leistung-während-der-pedalbewegung",
    "title": "Ergometrische Leistungsparameter",
    "section": "Zeitlicher Verlauf der aus der 3D-Kinematik modellierten inneren Leistung während der Pedalbewegung",
    "text": "Zeitlicher Verlauf der aus der 3D-Kinematik modellierten inneren Leistung während der Pedalbewegung\nDie folgenden Abbildungen zeigen den zeitlichen Verlauf der aus der 3D-Kinematik berechneten positiven Anteile der inneren Leistung (PInt,Kinematik) für den jeweiligen Messzeitraum. Dargestellt sind die Leistungsverläufe des rechten (grün) und linken (rot) Beins sowie der gemittelte PInt,Kinematik-Wert (grau gestrichelt). Die interaktive Darstellung ermöglicht die Auswahl verschiedener Probanden und deren jeweiliger Testdurchgänge.\n\nProband 1Proband 6Proband 13Proband 15Proband 19\n\n\n\nTest 1Test 2Test 3Test 4Test 5Test 6\n\n\n\n\n\n\n\n\n\n\nAbbildung 16: Zeitlicher Verlauf der aus der 3D-Kinematik berechneten positiven Anteile der inneren Leistung (Pint) beider Beine mit gemitteltem Pint-Wert (grau gestrichelt) für 01_1.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 17: Zeitlicher Verlauf der aus der 3D-Kinematik berechneten positiven Anteile der inneren Leistung (Pint) beider Beine mit gemitteltem Pint-Wert (grau gestrichelt) für 01_2.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 18: Zeitlicher Verlauf der aus der 3D-Kinematik berechneten positiven Anteile der inneren Leistung (Pint) beider Beine mit gemitteltem Pint-Wert (grau gestrichelt) für 01_3.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 19: Zeitlicher Verlauf der aus der 3D-Kinematik berechneten positiven Anteile der inneren Leistung (Pint) beider Beine mit gemitteltem Pint-Wert (grau gestrichelt) für 01_4.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 20: Zeitlicher Verlauf der aus der 3D-Kinematik berechneten positiven Anteile der inneren Leistung (Pint) beider Beine mit gemitteltem Pint-Wert (grau gestrichelt) für 01_5.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 21: Zeitlicher Verlauf der aus der 3D-Kinematik berechneten positiven Anteile der inneren Leistung (Pint) beider Beine mit gemitteltem Pint-Wert (grau gestrichelt) für 01_6.\n\n\n\n\n\n\n\n\n\n\nTest 2Test 3Test 4Test 5Test 6\n\n\n\n\n\n\n\n\n\n\nAbbildung 22: Zeitlicher Verlauf der aus der 3D-Kinematik berechneten positiven Anteile der inneren Leistung (Pint) beider Beine mit gemitteltem Pint-Wert (grau gestrichelt) für 06_2.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 23: Zeitlicher Verlauf der aus der 3D-Kinematik berechneten positiven Anteile der inneren Leistung (Pint) beider Beine mit gemitteltem Pint-Wert (grau gestrichelt) für 06_3.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 24: Zeitlicher Verlauf der aus der 3D-Kinematik berechneten positiven Anteile der inneren Leistung (Pint) beider Beine mit gemitteltem Pint-Wert (grau gestrichelt) für 06_4.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 25: Zeitlicher Verlauf der aus der 3D-Kinematik berechneten positiven Anteile der inneren Leistung (Pint) beider Beine mit gemitteltem Pint-Wert (grau gestrichelt) für 06_5.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 26: Zeitlicher Verlauf der aus der 3D-Kinematik berechneten positiven Anteile der inneren Leistung (Pint) beider Beine mit gemitteltem Pint-Wert (grau gestrichelt) für 06_6.\n\n\n\n\n\n\n\n\n\n\nTest 3Test 4Test 5Test 6\n\n\n\n\n\n\n\n\n\n\nAbbildung 27: Zeitlicher Verlauf der aus der 3D-Kinematik berechneten positiven Anteile der inneren Leistung (Pint) beider Beine mit gemitteltem Pint-Wert (grau gestrichelt) für 13_3.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 28: Zeitlicher Verlauf der aus der 3D-Kinematik berechneten positiven Anteile der inneren Leistung (Pint) beider Beine mit gemitteltem Pint-Wert (grau gestrichelt) für 13_4.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 29: Zeitlicher Verlauf der aus der 3D-Kinematik berechneten positiven Anteile der inneren Leistung (Pint) beider Beine mit gemitteltem Pint-Wert (grau gestrichelt) für 13_5.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 30: Zeitlicher Verlauf der aus der 3D-Kinematik berechneten positiven Anteile der inneren Leistung (Pint) beider Beine mit gemitteltem Pint-Wert (grau gestrichelt) für 13_6.\n\n\n\n\n\n\n\n\n\n\nTest 1Test 2Test 3Test 4Test 5Test 6\n\n\n\n\n\n\n\n\n\n\nAbbildung 31: Zeitlicher Verlauf der aus der 3D-Kinematik berechneten positiven Anteile der inneren Leistung (Pint) beider Beine mit gemitteltem Pint-Wert (grau gestrichelt) für 15_1.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 32: Zeitlicher Verlauf der aus der 3D-Kinematik berechneten positiven Anteile der inneren Leistung (Pint) beider Beine mit gemitteltem Pint-Wert (grau gestrichelt) für 15_2.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 33: Zeitlicher Verlauf der aus der 3D-Kinematik berechneten positiven Anteile der inneren Leistung (Pint) beider Beine mit gemitteltem Pint-Wert (grau gestrichelt) für 15_3.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 34: Zeitlicher Verlauf der aus der 3D-Kinematik berechneten positiven Anteile der inneren Leistung (Pint) beider Beine mit gemitteltem Pint-Wert (grau gestrichelt) für 15_4.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 35: Zeitlicher Verlauf der aus der 3D-Kinematik berechneten positiven Anteile der inneren Leistung (Pint) beider Beine mit gemitteltem Pint-Wert (grau gestrichelt) für 15_5.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 36: Zeitlicher Verlauf der aus der 3D-Kinematik berechneten positiven Anteile der inneren Leistung (Pint) beider Beine mit gemitteltem Pint-Wert (grau gestrichelt) für 15_6.\n\n\n\n\n\n\n\n\n\n\nTest 1Test 2Test 3Test 4Test 5Test 6\n\n\n\n\n\n\n\n\n\n\nAbbildung 37: Zeitlicher Verlauf der aus der 3D-Kinematik berechneten positiven Anteile der inneren Leistung (Pint) beider Beine mit gemitteltem Pint-Wert (grau gestrichelt) für 19_1.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 38: Zeitlicher Verlauf der aus der 3D-Kinematik berechneten positiven Anteile der inneren Leistung (Pint) beider Beine mit gemitteltem Pint-Wert (grau gestrichelt) für 19_2.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 39: Zeitlicher Verlauf der aus der 3D-Kinematik berechneten positiven Anteile der inneren Leistung (Pint) beider Beine mit gemitteltem Pint-Wert (grau gestrichelt) für 19_3.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 40: Zeitlicher Verlauf der aus der 3D-Kinematik berechneten positiven Anteile der inneren Leistung (Pint) beider Beine mit gemitteltem Pint-Wert (grau gestrichelt) für 19_4.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 41: Zeitlicher Verlauf der aus der 3D-Kinematik berechneten positiven Anteile der inneren Leistung (Pint) beider Beine mit gemitteltem Pint-Wert (grau gestrichelt) für 19_5.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 42: Zeitlicher Verlauf der aus der 3D-Kinematik berechneten positiven Anteile der inneren Leistung (Pint) beider Beine mit gemitteltem Pint-Wert (grau gestrichelt) für 19_6.\n\n\n\n\n\n\n\n\n\n\n\nVergleich der berechneten inneren Leistungen: Biomechanisches Modell, 3D-Kinematik und Minetti-Berechnung\nAbbildung 43 zeigt einen direkten Vergleich der inneren Leistung (PInt), die mittels drei verschiedener Methoden (Biomechanisches Modell, 3D-Kinematik und Minetti-Berechnung) für verschiedene Probanden ermittelt wurde. Im niedrigen Drehzahlbereich (60-70 min-1) zeigen alle drei Berechnungsmethoden noch relativ ähnliche Werte mit PInt zwischen 10 und 25 Watt. Mit steigender Drehzahl wird eine zunehmende Abweichung zwischen den Methoden erkennbar. Die Minetti-Berechnung (Dreiecke) tendiert dabei zu den höchsten Werten, während das biomechanische Modell (Kreise) meist die niedrigsten Werte liefert. Die aus der 3D-Kinematik ermittelten Werte (Quadrate) positionieren sich in der Regel zwischen diesen beiden Extremen. Bei Drehzahlen oberhalb von 85 min-1 zeigt sich sich eine progressive Abweichung zwischen der Minetti-Berechnung und den anderen beiden Methoden.\n\n\n\n\n\n\n\n\nAbbildung 43: Vergleich der berechneten inneren Leistungen: Biomechanisches Modell, 3D-Kinematik und Minetti-Berechnung\n\n\n\n\n\n\nIndividuelle Darstellung und kubische Modellierung der inneren Leistung aus dem biomechanischen Modell, der 3D-Kinematik und der kombinierten Berechnung\nDie Abbildungen Abbildung 44, Abbildung 45 und Abbildung 46 illustrieren die körpergewichtsbezogene innere Leistung in Relation zur Trittrate, wobei jeweils eine kubische Modellfunktion den Verlauf der jeweiligen PInt-Berechnung für die steigenden Drehzahlen beschreibt. Das biomechanische Modell (Abbildung 44) liefert dabei eine vollständige Datenbasis für alle Probanden und Belastungen mit einer sehr guten Modellanpassung (R² = 0.999, y = 0.00000075x³). Die kinematikbasierte Analyse (Abbildung 45) beschränkt sich auf die Belastungsintensitäten mit verfügbaren 3D-Kinematik Daten, zeigt jedoch einen vergleichbaren Funktionsverlauf (R² = 0.983, y = 0.00000077x³). Die Kombination beider Methoden (Abbildung 46) ermöglicht durch Einbeziehung der mittleren Differenzen zwischen kinematischer und modellierter innerer Leistung eine Approximation für Belastungsintensitäten ohne Kinematikdaten. Die konsistente Charakteristik der kubischen Modellfunktionen über alle drei Berechnungsansätze unterstützt die gewählte mathematische Beschreibung des Zusammenhangs zwischen Trittrate und innerer Leistung.\n\nPInt,ModellPInt,KinematikPInt,Kinematik,Modell\n\n\n\n\n\n\n\n\n\n\nAbbildung 44: Körpergewichtsbezogene innere Leistung von PInt,Modell in Abhängigkeit von der Trittrate mit kubischer Modellfunktion (y = 0.00000075x³, R² = 0.999).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 45: Körpergewichtsbezogene innere Leistung von PInt,Kinematik in Abhängigkeit von der Trittrate mit kubischer Modellfunktion (y = 0.00000077x³, R² = 0.983).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 46: Körpergewichtsbezogene innere Leistung von PInt,Kinematik,Modell in Abhängigkeit von der Trittrate mit kubischer Modellfunktion (y = 0.00000077x³, R² = 0.985).\n\n\n\n\n\n\n\n\n\nModellvergleich: Einfluss von Körpermasse und Drehzahl auf die innere Leistung\n\n\nDie nachfolgenden Abbildungen zeigen die berechnete innere Leistung (PInt) in Abhängigkeit von Drehzahl und Körpermasse auf Basis des biomechanischen Modells (Abbildung 47) und die Berechnung nach Minetti et al. (2001) (Abbildung 48). Beide Berechnungsmethoden weisen eine nicht-lineare Charakteristik der PInt auf, die sowohl mit steigender Drehzahl als auch mit zunehmender Körpermasse progressiv ansteigt. Diese Systematik manifestiert sich in einer systematisch gestaffelten Verteilung der Kurvenverläufe entsprechend der verschiedenen Körpermassen. Für einen exemplarischen Vergleich bei 70 kg Körpermasse ergeben sich die PInt-Werte der Tabelle 5. Die Tabelle enthält neben den zwei berechneten PInt-Werten auch die während des Drehzahltests ermittelten Werte des Sauerstoffumsatzes für die Leerbewegung (O2-CostnD). Diese wurden mittels der kubischen Modellfunktion \\(\\dot{V}\\mathrm{O}_{2,\\text{net}}(\\text{nD}) \\ [\\text{ml} \\cdot \\text{min}^{-1} \\cdot \\text{kg}^{-1}] = 0.000011 \\cdot \\text{nD}^3\\) berechnet. Für die Umrechnung der O2-CostnD-Werte in die korrespondierende mechanische Leistung [W] wurde ein konservativer O2-Leistungs-Äquivalent von 10 ml·min-1 · W-1 gewählt. Dieser Umrechnungsfaktor orientiert sich an den in der Literatur dokumentierten Werten, die typischerweise im Bereich von 8.5-12.0 ml·min-1 · W-1 liegen (Hansen et al., 1984; Heck et al., 2022; Özyener et al., 2001; Rassouli & Thurnheer, 2015; Wasserman et al., 2011).\n\n\n\n\n\n\nTabelle 5: Vergleich der PInt,Modell und PInt,Minetti für ausgewählte Drehzahlen.\n\n\n\n\n\n\n\n\n\n\n\nDrehzahl [U·min-1]\nPInt,Modell [W]\nPInt,Minetti [W]\nO2-CostnD [ml·min-1]\n\n\n\n\n60\n13.4\n10.71\n166.3 ≙ 16.6 [W]\n\n\n80\n31.7\n33.8\n394.2 ≙ 39.4 [W]\n\n\n100\n62.0\n82.6\n770.0 ≙ 77.0 [W]\n\n\n120\n107.1\n171.4\n1330.6 ≙ 133.1 [W]\n\n\n150\n209.1\n418.4\n2598.8 ≙ 259.9 [W]\n\n\n200\n495.6\n1322.2\n6160.0 ≙ 616.0 [W]\n\n\n\n\n\n\n\n\nWährend das biomechanische Modell initial einen vergleichbaren Anstieg aufweist, zeigt die Minetti-Berechnung insbesondere bei Trittraten oberhalb von 150 U ⋅ min-1 einen deutlich stärkeren Anstieg. Diese abweichenden Charakteristika in den Anstiegen resultieren speziell im hohen Drehzahlbereich in deutlichen Differenzen der absoluten Leistungswerte, wobei die Minetti-Berechnung bei einer Trittrate von 200 U ⋅ min-1 nahezu das Dreifache der modellierten Werte erreicht. Die metabolischen O2-CostnD-Werte liegen bei Drehzahlen bis etwa 100 U·min^{-1} über beiden theoretischen Berechnungen und bewegen sich bei höheren Drehzahlen zwischen den Werten der beiden Modellansätze.\n\nPInt,ModellPInt,Minetti\n\n\n\n\n\n\n\n\n\n\nAbbildung 47: PInt,Modell für verschiedene Körpermassen und Drehzahlen bei den mittleren anthropometrischen Modellparametern aller Probanden (Oberschenkellänge: 41,7 cm, Unterschenkellänge: 55,2 cm, Beinlänge: 122,9 cm, Oberschenkelumfang: 57,2 cm, Unterschenkelumfang: 36,2 cm) und einer theoretischen Kurbellänge von 17,3 cm.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 48: PInt,Minetti für verschiedene Körpermassen und Drehzahlen",
    "crumbs": [
      "Ergebnisse & Statistik",
      "Ergometrische Leistungsparameter"
    ]
  },
  {
    "objectID": "Datensätze.html",
    "href": "Datensätze.html",
    "title": "",
    "section": "",
    "text": "Code"
  },
  {
    "objectID": "Datensätze.html#datensätze-1",
    "href": "Datensätze.html#datensätze-1",
    "title": "",
    "section": "1.1 Datensätze",
    "text": "1.1 Datensätze\n\n1.1.1 “Haupt” - Datensatz\n\n\n\n\n\n\n\n\n1.1.2 Ergometer - Datensatz\n\n\n\n\n\n\n\n\n1.1.3 EPOC - Datensatz\n\n\n\n\n\n\n\n\n1.1.4 Messwerte_Bedingungen - Datensatz\n\n\n\n\n\n\n\n\n1.1.5 Messwerte_Intensitäten - Datensatz\n\n\n\n\n\n\n\n\n1.1.6 Messwerte_Bedingung_Intensität - Datensatz\n\n\n\n\n\n\n\n\n1.1.7 Efficiency - Datensatz"
  },
  {
    "objectID": "Methodik/Stichprobe.html",
    "href": "Methodik/Stichprobe.html",
    "title": "Stichprobe",
    "section": "",
    "text": "Für die Studie wurden ausdauertrainierte Personen gesucht, die eine \\(\\dot{V}O_{2,max}\\) von etwa 65 [ml·min-1·kg-1] oder mehr aufwiesen. Es wurden sowohl Frauen als auch Männer aus dem Radsport oder Triathlon sowie verschiedenen Ausdauersportarten als potenzielle Probanden geworben.\nInsgesamt nahmen 24 Personen an der Studie teil, wovon nur 11 die Einschlusskriterien erfüllten. Davon wurden wiederum 2 Probanden aufgrund fehlender oder schlechter Versuchsdaten entfernt. Von den 9 verbleibenden Probanden waren 2 weiblich und 7 männlich und zwischen 24 und 45 Jahre alt (M = 32.6, SD = 9.4). Die Masse der Probanden lag zwischen 48 und 82 kg (M = 70.4, SD = 10.4) und die Körperlänge zwischen 157 und 186 cm (M = 176.3, SD = 9.43). Die gemessene absolute \\(\\dot{V}O_{2,max}\\) der Probanden lag zwischen 3900 und 6181 [ml·min-1] (M = 4543.7, SD = 789.1) und die gemessene relative \\(\\dot{V}O_{2,max}\\) der Probanden lag zwischen 67.8 und 81.3 [ml·min-1·kg-1] (M = 72.1, SD = 4.0). Somit können neun Probanden nach De Pauw et al. (2013) in Leistungsniveau bzw. “Performance Level = PL” 4 und 5 eingeordnet werden (Abbildung 1).",
    "crumbs": [
      "Methodik",
      "Stichprobe"
    ]
  },
  {
    "objectID": "Methodik/Stichprobe.html#stichprobe",
    "href": "Methodik/Stichprobe.html#stichprobe",
    "title": "Stichprobe",
    "section": "Stichprobe",
    "text": "Stichprobe\nIn folgender Tabelle werden ausgewählte anthropometrische und leistungsphysiologische Daten aus dem Eingangstest der Studienteilnehmer dargestellt.",
    "crumbs": [
      "Methodik",
      "Stichprobe"
    ]
  },
  {
    "objectID": "Methodik/Messmethoden.html",
    "href": "Methodik/Messmethoden.html",
    "title": "Messmethoden",
    "section": "",
    "text": "Um alle relevanten Parameter messen zu können, bedurfte es in den vorliegenden Untersuchungen eines umfangreichen Repertoires an Messgeräten und medizinischem Equipment. Dazu gehörten unter anderem die Messung der Atemgaszusammensetzung der Probanden während der Untersuchung, Blutentnahmen und -analysen sowie Herzratenmessungen und eine dreidimensionale Bewegungserfassung. Für die Durchführung der dreidimensionale Bewegungserfassung wurden reflektierende Marker und ein Kamera-Analyse-System benötigt. Alle Messungen wurden im humanphysiologischen Labor der Sportwissenschaftlichen Fakultät durchgeführt.",
    "crumbs": [
      "Methodik",
      "Messmethoden"
    ]
  },
  {
    "objectID": "Methodik/Messmethoden.html#anthropometrische-messungen",
    "href": "Methodik/Messmethoden.html#anthropometrische-messungen",
    "title": "Messmethoden",
    "section": "Anthropometrische Messungen",
    "text": "Anthropometrische Messungen\nVor dem Beginn der Messung wurden anthropometrische Daten erhoben, um die körperlichen Merkmale der Probanden zu erfassen. Zunächst wurden Alter, Größe und Masse der Probanden erfragt, bzw. mit Hilfe einer Personenwaage gemessen. Zusätzlich wurde der aktuelle und frühere Trainingsumfang in Stunden von den Probanden erfragt. Des Weiteren wurden der Umfang und der Durchmesser mehrerer Körperteile vermessen, welche für die Auswertung der Daten der 3D-Bewegungsanalyse von Bedeutung waren. Durch die Kombination dieser Daten mit den Ergebnissen der Leistungstests konnte ein umfassendes Profil der Probanden erstellt werden, dass für die Analyse und Interpretation der Ergebnisse der Studie von großer Bedeutung war.",
    "crumbs": [
      "Methodik",
      "Messmethoden"
    ]
  },
  {
    "objectID": "Methodik/Messmethoden.html#fahrradergometer",
    "href": "Methodik/Messmethoden.html#fahrradergometer",
    "title": "Messmethoden",
    "section": "Fahrradergometer",
    "text": "Fahrradergometer\nAlle Messungen wurden auf dem stationären Fahrradergometer Lode Excalibur Sport durchgeführt. Das Fahrradergometer Lode Excalibur Sport (Lode BV, Groningen, Niederlande) arbeitet mit einem elektromagnetischen Widerstandssystem und kann eine Spitzenlast von 2500 Watt erreichen. Der Widerstand wird durch ein Magnetfeld erzeugt, das von einem Elektromagneten im Inneren des Geräts erzeugt wird. Der Widerstand kann über den Computer des Ergometers geregelt werden, der die Magnetkraft erhöht oder verringert. Bei Belastungen bis 1500 Watt liegt der Messfehler des Ergometers laut Herstellerangaben bei 2%. Um ein Bergauffahren zu simulieren, wurde das Radergometer mit Hilfe eines Laufbandes mit Steigungsfunktion (Saturn® 300/100r, h/p/cosmos sports & medical GmbH, Nussdorf-Traunstein, Deutschland) um 6° bzw. 10, 5% erhöht. Die Daten zur Reliabilität und Validität des Lode Excalibur Sport sind limitiert. Earnest et al. (2005) berichteten von einer hohen Reliabilität im Vergleich zu einem anderen elektromagnetisch gebremsten Ergometer, aber von unterschiedlichen Werten, wenn die absoluten Leistungsdaten betrachtet wurden. In einer Studie von Micklewright et al. (2006) wurden die Daten des Wingate Anaerobic Tests (WAnT) zwischen einem elektromagnetisch gebremsten Fahrradergometer (Lode Excalibur Sport) und einem mechanisch gebremsten Fahrradergometer (Monark 814e, Monark Exercise AB, Schweden) verglichen. Die Autoren stellten fest, dass es keinen Unterschied in der maximalen und durchschnittlichen Leistung zwischen den Ergometern gab und beurteilten das Lode Excalibur Sport als valides Messgerät für den WAnT. Lunn & Axtell (2019) verwendeten ein vergleichbares Testdesign, kamen aber zu unterschiedlichen Ergebnissen. Die Belastungsdaten des WAnT unterschieden sich signifikant zwischen den beiden getesteten Ergometern. Die Autoren empfehlen aufgrund der schlechten Validität des Lode Excalibur Sport in der Studie, dass die Leistungsdaten dieses Ergometers nicht mit den Leistungsdaten anderer Ergometer verglichen werden sollten. Die Studie bestätigt jedoch, dass das Lode Excalibur Sport ein hoch reliables Instrument für die Messung von WAnT-Daten ist. Aufgrund der ausgezeichneten Reliabilität und der Tatsache, dass in dieser Studie ausschließlich das Lode Excalibur Sport zum Einsatz kam, erweist sich dieses Ergometer als ein geeignetes Messinstrument für die vorliegende Untersuchung.",
    "crumbs": [
      "Methodik",
      "Messmethoden"
    ]
  },
  {
    "objectID": "Methodik/Messmethoden.html#atemgasanalyse",
    "href": "Methodik/Messmethoden.html#atemgasanalyse",
    "title": "Messmethoden",
    "section": "Atemgasanalyse",
    "text": "Atemgasanalyse\nDie Atemgasanalyse wurde mittels des portablen Spirometriemesssystems MetaMax 3B (MM3B) durchgeführt, welches aus einem Messmodul und einem Batteriemodul besteht. Beiden Teile haben dieselbe Größe (120 x 110 x 45 mm) und sind dazu konzipiert, mit Spirometrie Rucksack getragen zu werden. Insgesamt beträgt die Gesamtmasse ca. 1,40 kg. Die Daten werden Atemzug für Atemzug aufgezeichnet, wobei das Atemvolumen mit Hilfe einer Turbine ermittelt wird, welche einen Messbereich bis 20 l/s mit einer Genauigkeit von ± 2 % wiedergibt (CORTEX Biophysik GmbH, 2017). Die Messung der O2-Konzentration im ventilierten Atemgas wird mithilfe einer elektrochemischen Zelle realisiert, während die CO2-Konzentration durch eine Infrarotspektroskopie erhoben wird. Sowohl \\(\\dot{V}O_{2}\\) als auch \\(\\dot{V}CO_{2}\\) werden mittels metabolischer Standardalgorithmen berechnet. Die Daten der Atemgasanalyse können entweder im Speicher des Messmoduls für spätere Übertragung auf einen PC gespeichert werden, oder direkt über Telemetrie an einen PC gesendet werden (Macfarlane & Wong, 2012). Hier können die Atemgas-Daten mit Hilfe der Software MetaSoft während des Tests dargestellt und nach Abschluss der Untersuchung analysiert werden.\nUm eine hohe Messgenauigkeit zu gewährleisten, wurde die Spirometrie vor den Messungen nach den Herstellerangaben kalibriert. Dies umfasst die Kalibrierung des Druck- und Gassensors für Umgebungsluft und Referenzgas sowie des Volumensensors. Vor dem Anlegen des Spirometriemesssystems wurde die Maskengröße durch Vorhalten an das Gesicht des Probanden ermittelt und diese mithilfe eines Kopfbandes so fixiert, dass diese luftdicht anliegt. Daraufhin wurde der Spirometrie Rucksack angelegt. Die Brust- und Schultergurte wurden so eingestellt, dass beim Fahren eine möglichst geringe Bewegung des Rucksacks auftritt. Letztlich wurde das Mundstück inklusive Turbine und Absaugstrecke in die Maske eingeführt (Abbildung 1). Der Proband wurde dazu angehalten, während des gesamten Tests und der Nachbelastungsphase den Kopf möglichst aufrecht zu halten und so wenig wie möglich zu sprechen, um potenzielle Störungen zu vermeiden. Aufgrund der langen Dauer der Messungen durften die Probanden am Ende der Nachbelastungsphasen etwas trinken. Dazu wurde die Maske kurz angehoben und währenddessen mit einem Tuch getrocknet, um die Feuchtigkeit zu reduzieren. Während der Testdurchführung wurden Marker im Programm gesetzt, um den Start und das Ende von den verschiedenen Belastungen im Testprotokoll zu markieren.\nAnschließend wurden die Messdaten der Atemgasanalyse mithilfe der Software Metasoft exportiert und mit Microsoft Excel (Version 2303) und der Open-Source-Programmiersprache R (Version 4.3.2) ausgewertet.\nDie Reliabilität und Validität des MM3B wurde in einer Untersuchung von Vogler, Rice und Gore (2010) betrachtet. Sie bescheinigten dem MM3B nach wiederholten Messungen eine ausgezeichnete Reliabilität mit Abweichungen von 2-4% für \\(\\dot{V}O_{2}\\), \\(\\dot{V}CO_{2}\\) und VE. Im Vergleich zu Referenzwerten des Douglas-Bag-Systems und eines metabolischen Kalibrators überschätzt das MM3B den \\(\\dot{V}O_{2}\\), \\(\\dot{V}CO_{2}\\) und VE jedoch um etwa 3-4%, 5-7% bzw. 4-8%. Die Autoren bescheinigten dem MMB3 dennoch eine adäquate Validität, da das MM3B den metabolischen Bedarfs einer Belastung hinreichend darstellt. Zu ähnlichen Ergebnissen kamen Macfarlane und Wong (2012), welche das MM3B auf Validität und Reliabilität bei Messungen mit verschiedenen Intensitäten untersuchten. Sie konnten zeigen, dass das MM3B eine gute Reliabilität mit geringen Abweichungen aufweist, solange die Messdauer unter drei Stunden bleibt. Während moderater und intensiver körperliche Aktivität hat das MM3B-System die Atemgaswerte in der Studie im Vergleich zum Douglas-Bag-System signifikant um 9,7% bzw. 11.8% für die \\(\\dot{V}O_{2}\\)-Werte und 12,5% bzw. 17,4% für die \\(\\dot{V}CO_{2}\\)-Werte überschätzt.\nBasierend auf diesen Ergebnissen sollten die berichteten Messfehler bei der Betrachtung der absoluten Werte der Atemgasanalyse berücksichtigt werden. Aber aufgrund der ausgezeichneten Reliabilität eignet sich das MM3B dennoch für die Messung der Atemgase in diese Studie.",
    "crumbs": [
      "Methodik",
      "Messmethoden"
    ]
  },
  {
    "objectID": "Methodik/Messmethoden.html#blutlaktat",
    "href": "Methodik/Messmethoden.html#blutlaktat",
    "title": "Messmethoden",
    "section": "Blutlaktat",
    "text": "Blutlaktat\nDie Entnahme der Blutproben zur Bestimmung des Blutlaktatwertes erfolgte minimalinvasiv aus dem Ohrkapillarblut mit Hilfe einer Sicherheitslanzette (Sterilance Press II). Vor der ersten Blutentnahme wurde das Ohrläppchen durch Reiben hyperämisiert, um einen guten Blutfluss sicherzustellen. Vor jeder Entnahme wurde der Abnahmeort mit einem sterilen Tupfer gereinigt und von Schweiß befreit, da die Laktatkonzentration im Schweiß um den Faktor 10–30 höher ist als im Blut (Heck et al., 2022, S. 118). Aufgrund der vielen Messungen waren mehrere Punktionen erforderlich, wobei entweder die alte Einstichstelle verwendet wurde oder eine neue Stelle leicht darüber punktiert wurde. Das Kapillarblut wurde mit Hilfe einer 20µl End-to-End Kapillare entnommen und danach in einem Reaktionsgefäß mit 1ml Hämolyselösung gelöst. Nach dem Ende der Messungen wurden die Proben direkt mit einem Laktatanalysegerät analysiert (Biosen S_Line Lab+, EKF diagnostic sales GmbH, Barleben, Deutschland). Das Gerät verwendet ein enzymatischamperometrisches Messprinzip mit Chip-Sensoren im Bereich von 0,5-40 mmol·l-1. Die Messgenauigkeit beträgt 0,01 mmol·l-1 und der Hersteller gibt an, dass eine Streuung der Messwerte von &lt;1,5% im Vergleich zum Standardwert von 12 mmol·l-1zu erwarten ist (EKF Diagnostics, 2013).",
    "crumbs": [
      "Methodik",
      "Messmethoden"
    ]
  },
  {
    "objectID": "Methodik/Messmethoden.html#herzratenmessung",
    "href": "Methodik/Messmethoden.html#herzratenmessung",
    "title": "Messmethoden",
    "section": "Herzratenmessung",
    "text": "Herzratenmessung\nDie Herzratenmessung erfolgte mit einem Brustgurt (Polar H10) sowie einem Herzraten-Armband (Polar Verity Sense). Das Herzraten-Armband diente dabei als Backup, falls der Brustgurt ausfallen oder Fehler aufweisen sollte. Vor Beginn der Tests wurden beide Messgeräte desinfiziert und am unteren Sternum bzw. am Oberarm des Probanden befestigt. Die Daten des Brustgurts wurden während des Tests in Echtzeit an die Atemgasanalyse-Software MetaSoft übertragen und auf einem Monitor angezeigt. Die Herzraten-Daten wurden anschließend zusammen mit den Atemgasanalyse-Daten mithilfe der Software Metasoft exportiert und in Microsoft Excel (Version 2303) oder der Open-Source-Programmiersprache R (Version 4.3.2) analysiert.",
    "crumbs": [
      "Methodik",
      "Messmethoden"
    ]
  },
  {
    "objectID": "Methodik/Messmethoden.html#d-bewegungsmodell",
    "href": "Methodik/Messmethoden.html#d-bewegungsmodell",
    "title": "Messmethoden",
    "section": "3D-Bewegungsmodell",
    "text": "3D-Bewegungsmodell\nFür die 3D-Bewegungsmodellierung wurden nahinfrarot reflektierende Marker und ein Kamerasystem von Vicon eingesetzt. Das Kamerasystem bestand aus acht Vicon Vero Kameras, die im Labor um das Fahrradergometer positioniert wurden, um den Bereich abzudecken, in dem sich der Proband bewegt. Das Vicon-System erfasst dabei mit einer Aufnahmefrequenz von 100 Hertz fortlaufend Bilder, was bedeutet, dass 100 Einzelbilder (Frames) pro Sekunde aufgezeichnet werden. Pro aufgezeichnetem Durchgang, der jeweils 10 Sekunden dauerte, wurden exakt 1000 Frames erfasst. Das System verfolgt dabei die Position und Bewegung der Marker im Raum. Die Marker sind kleine Kugeln, welche Materialien enthalten, die Nahinfrarotlicht reflektieren und es dem Vicon-System ermöglichen, ihre Position im dreidimensionalen Raum genau zu bestimmen. Jeder Frame enthält dabei die exakten Positionskoordinaten aller am Körper und Fahrrad angebrachten Marker. Ein Teil der Marker wurde vor Beginn der Tests auf einem enganliegenden Anzug, einer Hose, Schweißbändern und einem Kopfband angebracht. Weitere Marker wurden vor dem Beginn der Tests an den Radschuhen des Probanden platziert. Die Positionierung der Marker ist angelehnt an das Ganzkörpermodellierungs-Modell “Full body modelling with Plug-in Gait” (Vicon, 2022). Die Positionierung der Marker ist in Abbildung 1 zu sehen. Vor jeder Messung in der Ruhephase wurde eine Kalibrierung durchgeführt, bei der die Probanden mehrere Posen auf dem Radergometer einnahmen und verschiedene Bewegungen durchführten. Nach den Tests konnte das 3D-Bewegungsmodell mit Hilfe der Software Vicon Nexus auf einem Computer erstellt und anschließend mit der Open-Source-Programmiersprache R (Version 4.3.2) aufbereitet und ausgewertet werden.\n\n\n\n\n\n\nAbbildung 1: Proband mit allen angelegten Messinstrumenten\n\n\n\n\nPlatzierung der Marker und Datenaufbereitung\nDie anatomischen Marker am Körper des Probanden wurden wie folgt platziert:\n\nAm Kopf: LFHD (Left Front Head - Kopf vorne links) und LBHD (Left Back Head - Kopf hinten links)\nAm Becken: LASI (Left Anterior Superior Iliac Spine - vorderer Beckenkamm links) und LPSI (Left Posterior Superior Iliac Spine - hinterer Beckenkamm links)\nAn den Gelenken: LSJC (Left Shoulder Joint Center - Schultergelenk links), LHJC (Left Hip Joint Center - Hüftgelenk links) und LWJC (Left Wrist Joint Center - Handgelenk links)\nAm Fuß: LToeI (Left Toe Inner - Innenseite des Fußes links) und LToeO (Left Toe Outer - Außenseite des Fußes links)\n\nDas Fahrrad wurde durch folgende Marker erfasst:\n\nLBikeA, LBikeB und LBikeC zur Bestimmung der Fahrradposition im Raum\nZusätzliche Marker an der Kurbelachse zur Erfassung der Tretbewegung\n\nAus diesen Grunddaten wurden weitere wichtige Bezugspunkte berechnet:\n\nDer Hüftmittelpunkt (LHuefte) wurde als arithmetisches Mittel zwischen LASI und LPSI berechnet\nDer Kopfmittelpunkt (LHead) ergab sich aus dem Mittelwert von LFHD und LBHD\nDer Fußreferenzpunkt (LToe) wurde als gewichteter Punkt zwischen LToeI und LToeO berechnet, wobei die äußere Position mit zwei Dritteln und die innere Position mit einem Drittel gewichtet wurde\nDer Nackenpunkt (LNeck) wurde als gewichteter Punkt zwischen Kopfmittelpunkt und Schultergelenk bestimmt\n\nZusätzlich wurde der Schwerpunkt des HAT-Segments (Head-Arms-Trunk) berechnet. Dieser basierte auf biomechanischen Massenverhältnissen der einzelnen Körpersegmente (Abbildung 2) (Winter, 2009, S. 88):\n\nKopf und Hals: 8,1% der Gesamtmasse\nRumpf: 49,7% der Gesamtmasse\nOberarme: je 2,8% der Gesamtmasse\nUnterarme mit Händen: je 2,2% der Gesamtmasse\n\nFür jedes dieser Segmente wurden die Schwerpunkte wie folgt bestimmt:\n\nKopf-Hals-Schwerpunkt: 100% der Strecke zwischen Nacken und Kopfmittelpunkt\nRumpf-Schwerpunkt: 50% der Strecke zwischen Hüft- und Schultergelenk\nOberarm-Schwerpunkt: 43,6% der Strecke von Schulter zu Ellbogen\nUnterarm-Hand-Schwerpunkt: 68,2% der Strecke von Ellbogen zu Handgelenk\n\nDer Gesamt-Schwerpunkt des HAT-Segments ergab sich aus der gewichteten Summe dieser Einzelschwerpunkte entsprechend ihrer Massenanteile.\n\n\n\n\n\n\nAbbildung 2: Anthropometrische Daten zu Segmentmassen, Massenmittelpunkten und Trägheitsradien\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 2: Anthropometrische Daten zu Segmentmassen, Massenmittelpunkten und Trägheitsradien, jeweils dargestellt relativ zur Segmentlänge (Winter, 2009, S. 86)\n\n\n\n\n\n\nFür jeden aufgezeichneten Bewegungsdurchgang wurden die Daten separat in einer Liste gespeichert. Jeder Datensatz enthielt dabei:\n\nDie Framenummer als zeitliche Referenz\nDie X- und Y-Koordinaten aller Körpermarker\n\nDie X- und Y-Koordinaten aller Fahrradmarker\nDie berechneten Zusatzpunkte\n\nDiese umfassende Datenerfassung und -aufbereitung ermöglichte eine detaillierte biomechanische Analyse der Bewegungsabläufe beim Radfahren. Die zeitliche Auflösung von 100 Frames pro Sekunde erlaubte dabei eine detaillierte Untersuchung der Bewegungskomponenten und subtiler Veränderungen in der Bewegungsausführung.",
    "crumbs": [
      "Methodik",
      "Messmethoden"
    ]
  },
  {
    "objectID": "Methodik/Studiendesign.html#pilotierung",
    "href": "Methodik/Studiendesign.html#pilotierung",
    "title": "Studiendesign",
    "section": "Pilotierung",
    "text": "Pilotierung\nIm Verlauf von zwei Pilotversuchen mit jeweils zwei Testterminen wurde das Testprotokoll zur Bestimmung der Wirkungsgrade auf dem Radergometer bei verschiedenen Belastungsintensitäten im Sitzen und Stehen entwickelt und kontinuierlich angepasst. Hierbei wurden geeignete Werte für die Anzahl und Intensität der Belastungsintensitäten, deren Dauer sowie die Länge der Pausen zwischen den Belastungen festgelegt. Das Ziel war es, ein Untersuchungsdesign zu erstellen, das möglichst akkurate Ergebnisse liefert und gleichzeitig in einem realistischen Zeitrahmen an maximal zwei Testzeitpunkten durchführbar ist.\nWährend der ersten Pilotierung wurde zunächst ein Stufentest durchgeführt, um die ventilatorischen Schwellen (VT) zu ermitteln. Diese dienten zur Bestimmung der Intensitäten für die späteren Belastungen. Anschließend wurden an diesen festgelegten Intensitäten mehrere Belastungen sowohl im Sitzen als auch im Stehen durchgeführt. Dabei zeigte sich, dass die vorab errechneten Intensitätsbereiche deutlich zu hoch angesetzt waren. Die Probanden konnten die erstrebten metabolischen Antworten auf die Belastung nicht erreichen. Zur Validierung der Intensitätsbestimmung wurde eine methodische Vergleichsuntersuchung zwischen dem verwendeten 30s-Stufentest und dem vom Bund Deutscher Radfahrer verwendeten Stufentest (STBDR) durchgeführt, deren Ergebnisse in späteren Abschnitten detailliert beschrieben werden. Basierend auf diesen Erkenntnissen wurden die Belastungsintensitäten für die zweite Pilotstudie nach unten angepasst, und die Dauer der Erholungspausen wurde verlängert, um den Sauerstoffvolumenstrom der Nachbelastung genauer erheben zu können.\nNach der Durchführung der beiden Pilotstudien wurde der folgende Untersuchungsablauf festgelegt.",
    "crumbs": [
      "Methodik",
      "Studiendesign"
    ]
  },
  {
    "objectID": "Methodik/Studiendesign.html#studiendesign",
    "href": "Methodik/Studiendesign.html#studiendesign",
    "title": "Studiendesign",
    "section": "Studiendesign",
    "text": "Studiendesign\nDas Studiendesign umfasste zwei Testzeitpunkte und wurde auf Basis der Ergebnisse der Pilotstudien sowie unter Berücksichtigung der aktuellen Literatur zur der Thematik entwickelt. Es wurden geeignete Messinstrumente und Methoden zur Datenerhebung ausgewählt und ein detaillierter Ablaufplan für die Durchführung der Tests erstellt.",
    "crumbs": [
      "Methodik",
      "Studiendesign"
    ]
  },
  {
    "objectID": "Methodik/Studiendesign.html#erster-testzeitpunkt",
    "href": "Methodik/Studiendesign.html#erster-testzeitpunkt",
    "title": "Studiendesign",
    "section": "Erster Testzeitpunkt",
    "text": "Erster Testzeitpunkt\nDer erste Testzeitpunkt umfasste drei verschiedene Belastungstests bis zur Ausbelastung, zwischen denen jeweils eine zehnminütige Erholungsphase lag. Die Gesamtdauer betrug in der Regel zwischen 60 und 70 Minuten. Die ersten beiden Tests kombinierten Eigenschaften eines Rampen- und Stufentests. Der Belastungsanstieg erfolgte wie bei einem Rampenprotokoll, wurde jedoch in Stufen gesteigert. Diese Tests werden im Folgenden als Stufentest bzw. 30s-Stufentest (ST30s ) bezeichnet. Sie dienten der Bestimmung der maximalen mechanischen Leistung, des maximalen Sauerstoffvolumenstroms (\\(\\dot{V}O_{2,max}\\)) sowie der ventilatorischen Schwellen, deren Bestimmungsmethoden später erläutert werden. Die Durchführung orientierte sich an (Kroidl et al., 2007, S. 57), wobei sich die Tests hauptsächlich in der Körperposition unterschieden, sodass der erste im Sitzen (STsitzen), der zweite im Stehen (STstehen) absolviert wurde. Der abschließende Drehzahltest (DT) beinhaltete eine stufenweise Steigerung der Trittrate bei konstant niedriger Last. Dieser Test ermöglichte die Analyse des Einflusses erhöhter Trittraten auf die metabolischen Kosten.\n\nAblauf des ersten Testzeitpunktes:\n\n\nRuhe- und Kalibrierungsphase (ca. 2 min)\nWährend der ersten Phase nahm der Sportler verschiedene Sitz- und Stehpositionen ein, um die Kalibrierung der 3D-Bewegungsanalyse durchzuführen.\nReferenzphase (10 min)\nWährend der Referenzphase bewegte der Proband 10 Minuten lang seine Beine mit einem geringen Widerstand von 50 Watt und einer frei gewählten Trittrate. Durch diese Bewegung wurde das Blut umverteilt, die venösen Speicher entleerten sich, der V̇O2 stieg an und es kam zu einer verzögerten Freisetzung von V̇CO2 aus dem Fettgewebe. Dies hatte zur Folge, dass sich der RQ auf ein Minimum einstellte.\nBelastungsphase: STsitzen (ca. 8-12 min)\nWährend der Belastungsphase wurde die Belastung des Sportlers kontinuierlich gesteigert. Weibliche Sportlerinnen starteten mit einer Belastung von 60 Watt, welche alle 30 Sekunden um 15 Watt erhöht wurde. Männliche Probanden begannen mit einer Belastung von 80 Watt, welche alle 30 Sekunden um 20 Watt gesteigert wurde. Die Last wurde bis zur Ausbelastung gesteigert. Während des ersten Tests war es wichtig, dass die Versuchsteilnehmer in der Belastungsphase ausschließlich in sitzender Position fuhren. Um den Anstieg des Blutlaktats zu messen, wurden während des Tests zwei Laktatproben entnommen, die bei den Anstiegen des respiratorischen Quotienten von ungefähr 0,95 und 1,00 erfolgten.\nErholungsphase (10 min)\nIn der Erholungsphase sollte der Proband bei einer geringen Last von 50 Watt weiterfahren. In dieser Zeit konnte die EPOC sowie das Nachbelastungslaktat bestimmt werden.\nBelastungsphase: STstehen (ca. 4-6 min)\nDer STstehen wurde ausschließlich im Stehen durchgeführt und startete mit einer höheren Einstiegslast als der STsitzen, damit die Probanden nicht zu lange in stehender Position bei einer geringen Last fahren mussten. Bei Frauen betrug die Startlast 150 Watt und bei Männern 200 Watt. Ansonsten war der Ablauf des STstehen analog zu STsitzen. Hier wurde jedoch auf die Entnahme von Laktatproben während der Belastung verzichtet, da dies beim Fahren im Stehen nur schwer möglich war. Das Ziel des Tests war es, die Ausdauerleistungsfähigkeit in den beiden Radpositionen vergleichbar zu machen.\nErholungsphase (10 min)\nIn der Erholungsphase sollte der Proband bei einer geringen Last von 50 Watt weiterfahren. In dieser Zeit konnte die EPOC sowie das Nachbelastungslaktat bestimmt werden.\nBelastungsphase: Drehzahltest (ca. 10-14 min)\nWährend der Durchführung des DT musste der Proband kontinuierlich einen Widerstand von 10 Watt treten. Die Trittrate begann bei 70 Umdrehungen pro Minute und wurde anschließend alle 30 Sekunden um 5 Umdrehungen pro Minute erhöht, bis der Proband entweder nicht mehr in der Lage war, die Trittrate weiter zu steigern oder die Trittrate abfiel. Die jeweilige Trittrate wurde nicht vom Ergometer vorgegeben, sondern musste vom Sportler selbst eingehalten werden. Der Versuchsleiter gab dem Probanden dabei mündliche Anweisungen, welche Drehzahl beizubehalten war, und gab Feedback darüber, wie genau diese eingehalten wurde. Der DT wurde ausschließlich im Sitzen durchgeführt.\nErholungsphase (15 min)\nIn der Erholungsphase sollte der Proband bei einer geringen Last von 50 Watt weiterfahren. In dieser Zeit konnte die EPOC sowie das Nachbelastungslaktat bestimmt werden.\n\n\n\n\n\n\n\n\nAbbildung 1: Ablauf des zweiten Testzeitpunktes\n\n\n\n\nAbbildung wird noch angepasst\n\n\nMessungen der Blutlaktatkonzentrationen\nWährend des ersten Testzeitpunktes wurden insgesamt 20 Blutlaktatproben entnommen. Die Zeitpunkte der Blutentnahmen waren wie in Abbildung 1 zu sehen folgendermaßen:\n\nMessung des Ruhelaktats vor der Referenzphase\nMessung des Blutlaktatwert direkt vor dem Beginn der Belastung (BLCPRE)\nZwei Blutentnahmen während STsitzen bei RQ &gt; 0,95 und RQ &gt; 1,0\nBlutentnahmen nach STsitzen in den Nachbelastungsminuten: 1, 3, 5, 7, 10\nBlutentnahmen nach STstehen in den Nachbelastungsminuten: 1, 3, 5, 7, 10 Blutentnahmen nach DT in den Nachbelastungsminuten: 1, 3, 5, 7, 10, 15",
    "crumbs": [
      "Methodik",
      "Studiendesign"
    ]
  },
  {
    "objectID": "Methodik/Studiendesign.html#zweiter-testzeitpunkt",
    "href": "Methodik/Studiendesign.html#zweiter-testzeitpunkt",
    "title": "Studiendesign",
    "section": "Zweiter Testzeitpunkt",
    "text": "Zweiter Testzeitpunkt\nDer zweite Testzeitpunkt begann nach einer Erwärmung mit einem kurzen Rampentest (RT) zur Bestimmung der maximalen anaeroben Leistungsfähigkeit. Zwischen allen Belastungen lag jeweils eine zehnminütige Erholungsphase. Die Gesamtdauer betrug in der Regel zwischen 110 und 125 Minuten. Im Hauptteil des Tests wurden mindestens drei verschiedene Belastungsstufen (niedrig, moderat, schwer) in beiden Körperpositionen absolviert, wobei die Reihenfolge der Positionen randomisiert erfolgte. Bei unpassender Intensität wurde eine zusätzliche Belastung mit angepasster Last in beiden Positionen durchgeführt. Die vorgegebenen Trittraten basierten auf den durchschnittlichen Trittraten der entsprechenden Positionen und Belastungsbereiche des ersten Testzeitpunkts, wobei die Probanden diese möglichst genau (±3 U ⋅ min-1) einhalten sollten.\n\nAblauf des zweiten Testzeitpunktes:\n\n\nRuhe- und Kalibrierungsphase (10 min)\nWährend der ersten Phase nimmt der Sportler verschiedene Sitz- und Stehpositionen ein, um die Kalibrierung der 3D-Bewegungsanalyse durchzuführen. Des Weiteren wird die Messung des Ruheumsatzes durchgeführt. Dazu sitzt der Proband den Rest der Ruhephase in Ruhe auf dem Rad.\nErwärmung (10 min)\nDer Proband fährt zehn Minuten lang mit 40% seiner maximalen Leistung aus dem ersten Stufentest.\nErholungsphase (2 min)\nIn der Erholungsphase fährt der Proband bei einer geringen Last von 50 Watt.\nRampentest (ca. 1 min)\nDie Startlast des Rampentests ist 50 Watt und wird anschließend kontinuierlich um 16,67 Watt pro Sekunde gesteigert, bis der Sportler nicht mehr in der Lage ist weiterzutreten.\nErholungsphase (10 min)\nIn der Erholungsphase soll der Proband bei einer geringen Last von 50 Watt weiterfahren. In dieser Zeit kann die EPOC sowie das Nachbelastungslaktat bestimmt werden.\nTestdurchläufe (6 x 5 min)\nDie Probanden absolvieren mindestens sechs Belastungstests, die jeweils fünf Minuten dauern. Die Intensitätsstufen werden sowohl im Sitzen als auch im Stehen durchgeführt und umfassen drei verschiedene Intensitätsstufen (niedrig, moderat, hoch). Zwischen den Tests gibt es eine Erholungsphase von zehn Minuten bei einer Belastung von 50 Watt.\nErholungsphase (15 min)\nIn der Erholungsphase soll der Proband bei einer geringen Last von 50 Watt weiterfahren. In dieser Zeit kann die EPOC sowie das Nachbelastungslaktat bestimmt werden.\n\n\n\n\n\n\n\n\nAbbildung 2: Ablauf des zweiten Testzeitpunktes\n\n\n\n\nAbbildungen werden noch angepasst\n\n\nMessungen der Blutlaktatkonzentrationen\nWährend des ersten Testzeitpunktes werden insgesamt 50 Blutlaktatproben entnommen. Die Zeitpunkte der Blutentnahmen sind wie in (Abbildung 2) zu sehen folgendermaßen:\n\nMessung des Ruhelaktats zu Beginn der Ruhephase\nMessung des Blutlaktatwert direkt vor dem RT (BLCPRE)\nBlutentnahmen nach dem RT in Nachbelastungsminute: 1, 3, 5, 7, 10\nBlutentnahmen während der Belastung 1-6 in Belastungsminute 3 und 5\nBlutentnahmen nach Belastung 1-5 in Nachbelastungsminute: 1, 3, 5, 7, 10 Blutentnahmen nach Belastung 6 in Nachbelastungsminute: 1, 3, 5, 7, 10, 15\n\n\n\nZeitpunkte der Blutentnahmen\nDa nach jeder Belastungsstufe die maximale Blutlaktatkonzentration (BLCmax) bestimmt werden sollte und das Blutlaktat in den ersten Minuten nach Belastungsende besonders bei intensiven Belastungen noch weiter ansteigt, wurden die Blutentnahmen an den beschriebenen Zeitpunkten gewählt. Eine hohe Rate der Blutentnahmen nach Belastungsende ermöglichte dabei eine präzisere Bestimmung der BLCmax, da der exakte Zeitpunkt des Konzentrationsmaximums interindividuell variieren kann.",
    "crumbs": [
      "Methodik",
      "Studiendesign"
    ]
  },
  {
    "objectID": "Methodik/Studiendesign.html#bestimmung-der-ventilatorischen-schwellen",
    "href": "Methodik/Studiendesign.html#bestimmung-der-ventilatorischen-schwellen",
    "title": "Studiendesign",
    "section": "Bestimmung der ventilatorischen Schwellen",
    "text": "Bestimmung der ventilatorischen Schwellen\nUm eine standardisierte metabolische Beanspruchung zwischen den Probanden zu gewährleisten, wurden die ventilatorischen Schwellen (VT) als physiologische Indikatoren für die Stoffwechselprozesse herangezogen. Das primäre Ziel bestand darin, drei klar differenzierte Belastungsintensitäten (leicht, moderat und schwer) zu etablieren, die bei allen Probanden vergleichbare physiologische Reaktionen hervorrufen. Der Fokus lag dabei nicht auf dem exakten Treffen vordefinierter Schwellenwerte, sondern vielmehr auf der Erzeugung deutlich abgrenzbarer metabolischer Beanspruchungsstufen. Zur Determinierung der ventilatorischen Schwellen, die als Orientierungspunkte für diese Intensitätsbereiche dienten, wurde das beschriebene 30s-Stufenprotokoll implementiert. Diese Herangehensweise ermöglichte eine individuelle Anpassung der Belastungsintensitäten bei gleichzeitiger Standardisierung der metabolischen Beanspruchung zwischen den Probanden.\n\nVentilatorische Schwelle 1\nDie VT1 nach Wasserman et al. (1973) auch als “anaerobic threshold” bezeichnet markiert einen bedeutenden physiologischen Wendepunkt während einer progressiv ansteigenden Belastung. An diesem Punkt manifestiert sich erstmals ein messbarer Anstieg der Blutlaktatkonzentration. Diese erhöhte Laktatakkumulation im Blut induziert einen kompensatorischen Mechanismus. Überschüssige H+-Ionen werden durch das Bicarbonatsystem gepuffert, um die Homöostase des physiologischen pH-Wertes aufrechtzuerhalten. Die dabei entstehende zusätzliche CO2-Produktion (= „Excess-CO2“) führt zu einer erhöhten Atemtätigkeit. Der erste deutliche Anstieg dieses Excess-CO2 kann als Kennzeichen zur nicht-invasiven Bestimmung der VT1 verwendet werden (Abbildung 3) (Roecker et al., 2000; Volkov et al., 1975). Zur Bestimmung der VT1 existieren noch weitere bewährte Methoden. Als ein weiteres Bestimmungskriterium dient der Punkt des ersten nicht-linearen Ventilationsanstiegs (Abbildung 9). Des Weiteren kann der Zeitpunkt ermittelt werden, an dem das Verhältnis von \\(\\dot{V}E\\) zu \\(\\dot{V}O_{2}\\) einen systematischen Anstieg zeigt, ohne dass sich simultan das Verhältnis von \\(\\dot{V}E\\) zu \\(\\dot{V}CO_{2}\\) erhöht (Wonisch et al., 2017, S. 177). Die V-Slope-Methode nach Beaver et al. (1986) definiert den ersten überproportionalen Anstieg des \\(\\dot{V}CO_{2}\\) im Verhältnis zum \\(\\dot{V}O_{2}\\) als VT1 (Abbildung 10 und Abbildung 8)(Westhoff et al., 2013). Zusätzlich können der initiale Anstieg des endexspiratorischen O2-Partialdrucks (= PetO2) (Abbildung 4 und Abbildung 5) (Scharhag-Rosenberger & Schommer, 2013) sowie Veränderungen des Atemäquivalents für O2 (= EQO2) zur Bestimmung herangezogen werden (Abbildung 6) (Schonmaker & Greiwing, 2020). In der sportwissenschaftlichen Praxis liegt die VT1 typischerweise im Bereich zwischen 55% und 70% der individuellen \\(\\dot{V}O_{2,max}\\) des Athleten (Güllich & Krüger, 2013, S. 176).\n\nMethodenvergleich zur VT1-Bestimmung: Fallstudie\nDie folgenden Abbildungen illustrieren verschiedene Methoden der VT1-Bestimmung, angewandt auf denselben 30s-Stufentest eines Probanden. Die vertikale grüne Linie markiert den Punkt der größten Übereinstimmung zwischen den verschiedenen Bestimmungskriterien, der hier am Ende der 400-Watt-Stufe identifiziert wurde.\n\nExcess-VCO2PetO2PetO2/PetCO2EQO2HerzrateRQVEVCO2/VO2\n\n\n\n\n\n\n\n\nAbbildung 3: Bestimmung der VT1 auf Basis des Anstieges des Excess-VCO2.\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 4: Bestimmung der VT1 auf Basis des Anstieges von PetO2.\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 5: Bestimmung der VT1 auf Basis des Anstieges von PetO2 / PetCO2.\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 6: Bestimmung der VT1 auf Basis des Konstanten Anstiges von EQO2 bei konstanter EQCO2.\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 7: Bestimmung der VT1 auf Basis der Herzrate.\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 8: Bestimmung der VT1 auf Basis des RQ.\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 9: Bestimmung der VT1 auf Basis der VE.\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 10: Bestimmung der VT1 auf Basis des ersten überproportionalen Anstieges von VCO2 über VO2.\n\n\n\n\n\n\n\n\n\nVentilatorische Schwelle 2\nDie VT2, auch als “Respiratory Compensation Point” (= RCP) bezeichnet, kennzeichnet einen weiteren physiologischen Umschlagpunkt während der progressiven Belastungssteigerung. Oberhalb der VT1 führt die zunehmende Belastung zu einem verstärkten Einsatz anaerober Stoffwechselprozesse. Die daraus resultierende metabolische Azidose erfordert einen weiteren Kompensationsmechanismus. Die vermehrte Freisetzung von H+-Ionen wird durch eine zusätzliche Steigerung der Ventilation ausgeglichen. Diese verstärkte Atemaktivität manifestiert sich in einer erneuten Zunahme der Anstiegssteilheit (Wonisch et al., 2017, S. 177). Zur präzisen Bestimmung der VT2 existieren wieder mehrere Methoden. Ein grundlegendes Bestimmungskriterium ist der Punkt des Anstiegs des \\(\\dot{V}CO_{2}\\) über dem \\(\\dot{V}O_{2}\\) bzw der Punkt an dem der RQ&gt;1 ist (Abbildung 14) (Wasserman & McIlroy, 1964). Des Weiteren kann der Punkt des überproportionalen Anstiegs der \\(\\dot{V}E\\) im Vergleich zur \\(\\dot{V}CO_{2}\\) (= „VE-Slope”) ermittelt werden (Abbildung 16) (Wasserman et al., 2011, S. 84; Whipp et al., 1982). Ein weiteres Bestimmungsmerkmal ist der Anstieg des Atemäquivalents für CO2 (= EQCO2) (Abbildung 11) (Schonmaker & Greiwing, 2020). Auch der Abfall des CO2-Partialdrucks (= PetCO2) kann zur Bestimmung herangezogen werden (Abbildung 12) (Westhoff et al., 2013). Die VT2 tritt in der Regel zeitlich verzögert zur individuellen anaeroben Laktatschwelle auf. Bei ausdauertrainierten Athleten wird sie typischerweise zwischen 80% und 90% der \\(\\dot{V}O_{2,max}\\) beobachtet, während sie bei Untrainierten im Bereich von 70% bis 80% ihrer \\(\\dot{V}O_{2,max}\\) auftritt (Scharhag-Rosenberger & Schommer, 2013).\n\nMethodenvergleich zur VT2-Bestimmung: Fallstudie\nDie folgenden Abbildungen zeigen verschiedene Methoden der VT2-Bestimmung, angewandt auf denselben 30s-Stufentest eines Probanden. Die vertikale grüne Linie markiert den Punkt der größten Übereinstimmung zwischen den verschiedenen Bestimmungskriterien, welcher hier am Ende der 460-Watt-Stufe identifiziert wurde.\n\nEQCO2PetCO2HerzrateRQVEVE/VCO2\n\n\n\n\n\n\n\n\nAbbildung 11: Bestimmung der VT2 auf Basis des konstanten Anstieges des EQCO2 während der Lastphase.\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 12: Bestimmung der VT2 auf Basis des Abfalles von PetCO2 und des Anstieges des PetO2.\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 13: Bestimmung der VT2 auf Basis der Herzrate.\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 14: Bestimmung der VT2 auf Basis des RQ &gt; 1.\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 15: Bestimmung der VT2 auf Basis der VE.\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 16: Test 1\n\n\n\n\n\n\n\n\nVergleich der ventilatorischen Schwellen zwischen ST30s und STBDR\nUm anhand des ST30s geeignete Intensitätsbereiche für den zweiten Testtag festzulegen und die Abweichungen der ermittelten ventilatorischen Schwellen aufgrund der kurzen Stufendauer von einem standardisierten Stufentest mit längerer Stufendauer zu bestimmen, wurden an zwei verschiedenen Tagen jeweils zwei Tests mit zehnminütiger Erholungspause durchgeführt. Der ST30s wurde mit dem vom Bund Deutscher Radfahrer verwendeten Stufentest (STBDR) verglichen, welcher eine Startlast von 100 Watt, 3-Minuten-Stufen und 20-Watt-Schritte beinhaltete. Die Testreihenfolge wurde am zweiten Tag umgekehrt.\nDie maximale erbrachte mechanische Leistung vor dem Belastungsabbruch der zwei Testteilnehmer lag beim ST30s durchschnittlich 120 Watt höher als beim STBDR. Die VT1 wurde im ST30s im Durchschnitt 30 Watt höher bestimmt, während die zweite ventilatorische Schwelle VT2 eine noch deutlichere Differenz von etwa 70 Watt aufwies. Die längere Stufendauer des BDR-Tests resultierte in niedrigeren Werten aufgrund der Möglichkeit zur Ausbildung eines annähernden Fließgleichgewichts (Kroidl et al., 2007, S. 56). Ein vollständiges Steady-State benötigt eine Zeitspanne von etwa 10-12 Minuten. Herzrate, Blutdruck und \\(\\dot{V}O_{2}\\) erreichen bereits nach 2 Minuten ein quasi-Fließgleichgewicht (Haber, 2013, S. 118). Die kurze Stufendauer von 30 Sekunden verhinderte diese metabolische Adaptation, wodurch Stoffwechseländerungen zeitlich verzögert auftraten. Die VT1 im ST30s zeigte eine Verzögerung von etwa 20-40 Sekunden, die VT2 von 60-80 Sekunden im Vergleich zum STBDR.",
    "crumbs": [
      "Methodik",
      "Studiendesign"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/index_Theoretischer_Hintergrund.html",
    "href": "Theoretischer_Hintergrund/index_Theoretischer_Hintergrund.html",
    "title": "Theoretischer Hintergrund",
    "section": "",
    "text": "Radfahren gehört zu den effizientesten Formen der Fortbewegung, die der Mensch aus eigener Kraft ausführen kann. Verglichen mit dem Laufen wird beim Radfahren ein wesentlich größerer Teil der aufgewendeten Energie in Vortrieb umgewandelt. Diese hervorragende mechanische Effizienz macht das Fahrrad nicht nur zu einem praktischen Verkehrsmittel im Alltag, sondern spielt auch im Leistungssport eine entscheidende Rolle. Gerade im Wettkampf, wo bereits kleinste Effizienzunterschiede zwischen Sieg und Niederlage entscheiden können, ist diese Eigenschaft von besonderer Bedeutung (Beneke & Di Prampero, 2001). Die Effizienz der Umwandlung von zugeführter metabolischer Energie in Vortrieb beim Radfahren lässt sich durch den Wirkungsgrad quantifizieren. Dieser beschreibt das Verhältnis zwischen der erzeugten externen Arbeit und der dafür benötigten chemischen Energie des Körpers. Diese Energieumwandlung basiert auf komplexen physiologischen Prozessen: Der menschliche Körper benötigt für jede Bewegung kontinuierlich Energie, wobei nur ein Teil der chemischen Energie in externe Arbeit umgesetzt werden kann. Die übrige Energie verteilt sich auf Wärmeerzeugung, Reibungsverluste und verschiedene zelluläre Prozesse. Das Verhältnis, wie viel der zugeführten chemischen Energie tatsächlich in externe Arbeit umgewandelt wird, definiert den Wirkungsgrad. Eine Optimierung des Wirkungsgrads ermöglicht es Sportlern, bei gleichbleibendem Energieaufwand mehr Leistung zu erzeugen oder eine bestimmte Leistung mit geringerem Energieeinsatz zu erreichen (Bader et al., 1972, S. 8; Stegemann, 1991, S. 62).\nDie nachfolgenden Abschnitte dieses Kapitels beschreiben zunächst die verschiedenen Methoden zur Berechnung des Wirkungsgrads beim Radfahren. Darauf aufbauend werden die erforderlichen Berechnungen des Energieumsatzes sowie der externen und internen mechanischen Arbeit detailliert erläutert. Den Abschluss bildet eine Analyse der biomechanischen und physiologischen Unterschiede zwischen sitzender und stehender Fahrposition, die den Wirkungsgrad maßgeblich beeinflussen können.\n\nQuellenverzeichnis\n\n\nBader, H., Heldt, H. W., Karger, W., & Lübbers, D. W. (1972). Physiologie des Menschen. Band 1 - Bioenergetik (S. 277). Urban & Schwarzenberg.\n\n\nBeneke, R., & Di Prampero, P. E. (2001). Mechanische und metabolische Belastung beim Radfahren - eine Analyse aus physiologischer und biomechanischer Sicht. Deutsche Zeitschrift für Sportmedizin, 52(1), 29–32.\n\n\nStegemann, J. (1991). Leistungsphysiologie (4. Edition, S. 385). Georg Thieme Verlag.",
    "crumbs": [
      "Theoretischer Hintergrund"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Proteinstoffwechsel.html",
    "href": "Theoretischer_Hintergrund/Proteinstoffwechsel.html",
    "title": "Proteinstoffwechsel",
    "section": "",
    "text": "Noch Verfassen\n\nProteinoxidation im aeroben Stoffwechsel\n\n\nIn dieser Methode wird der Eiweißstoffwechsel vernachlässigt, da dessen Energie-umsatz, abgesehen von einer Glykogenverarmung des Sportlers, konstant unter einem Prozent der gesamten Energiebereitstellung liegt (Scharhag-Rosenberger & Schommer, 2013).\nKohlenhydrate und Fette stellen in der Regel den Großteil der metabolischen Energie bereit, die zur Regeneration von ATP benötigt wird, um Muskelarbeit zu leisten. Auch der Abbau von Proteinen kann bis zu 20 verschiedene Aminosäuren bereitstellen, von denen einige oxidiert werden können. Bevor die verschiednen Brennstoffe Kohlenhydrate, Fette und Proteine in die Stoffwechselwege des Katabolismus eintreten können, müssen sie verdaut, assimiliert, verteilt und von den Zellen aufgenommen werden. Für Aminosäuren ist noch ein zusätzlicher Schritt notwendig: die Entfernung der Aminogruppe (-NH2). Dies erfolgt durch Transaminierung, bei der die Aminogruppe auf eine α-Ketosäure übertragen wird, oder durch oxidative Desaminierung, die Ammoniak freisetzt. Das entstandene Ammoniak wird in der Leber durch den Harnstoffzyklus in Harnstoff (CO(NH2)2) umgewandelt. Während dieser Prozesse können schwefelhaltige Aminosäuren zu Sulfaten abgebaut werden. Der entstandene Harnstoff und die Sulfate werden anschließend über den Urin ausgeschieden.\nDas verbleibende Kohlenstoffskelett der Aminosäuren kann ähnlich wie Kohlenhydrate und Fette zu CO2 und H2O oxidiert werden. Der Sauerstoffumsatz und die CO2-Produktion variieren je nach Art des Proteins (Brooks, 2012; Jeukendrup & Gleeson, 2019, S. 100). Ein Beispiel für die Oxidation eines Proteins (Albumin) ist das folgende:\n\\[\n\\begin{aligned}\n\\text{C}_{72}\\text{H}_{112}\\text{N}_2\\text{O}_{22}\\text{S} + 77 \\text{O}_2 &\\rightarrow 63 \\text{CO}_2 + 38 \\text{H}_2\\text{O} + \\text{SO}_3 + 9 \\text{CO(NH}_2)_2 \\quad \\\\\n\\text{RQ} &= \\frac{\\text{CO}_2}{\\text{O}_2} = \\frac{63}{77} = 0.818\n\\end{aligned}\n\\tag{1}\\]\nAufgrund der komplexeren Prozesse der Proteinoxidation ist die Hierarchie der Substratnutzung in Bezug auf die Zeit seit der Assimilation und der metabolischen Leistung: Kohlenhydrate → Lipide → Aminosäuren.\nWährend körperlicher Ruhe trägt die Aminosäureoxidation nur etwa 15 % zum Energieumsatz bei. Während körperlicher Belastung sinkt dieser Beitrag wahrscheinlich auf weniger als 5 %, da Kohlenhydrate und Fette als Hauptbrennstoffe wichtiger werden. Bei längerer körperlicher Betätigung, insbesondere wenn die Kohlenhydratverfügbarkeit eingeschränkt ist, kann die Aminosäureoxidation geringfügig zunehmen. Dennoch überschreitet der Beitrag von Proteinen zum Gesamtenergieumsatz selten 10 %. In Phasen starker Kalorienrestriktion, wenn die Glykogenspeicher erschöpft sind, gewinnt der Proteinkatabolismus an Bedeutung und wird zu einer wichtigeren Energiequelle für die Muskelarbeit.\nFrüh wurde klar, dass körperliche Bewegung wenig Einfluss auf die Stickstoffausscheidung im Urin hat. Todd et al. stellten fest, dass körperliche Aktivität nicht zu einem negativen Stickstoffhaushalt führt, solange die Nahrungsenergie ausreicht. Da wenig zusätzlicher Stickstoff im Urin wegen Bewegung ausgeschieden wird und Messungen schwierig sind, verzichteten Forscher darauf, die Messungen des pulmonalen RER für die Nutzung von Aminosäuren und Proteinen zu korrigieren. Daher nahm man an, dass Kohlenhydrat- und fettbasierte Brennstoffe die bevorzugten Energiesubstrate für Bewegung sind. Brooks (2012)\nDiese Berechnungen gehen davon aus, dass Protein kein wichtiger Energieträger ist. In einigen extremen Bedingungen kann Protein bis zu 15 % des gesamten Energieumsatzes beitragen. In diesem Fall sollte eine Korrektur für die Proteinoxidation vorgenommen werden. Um diese Korrektur vorzunehmen, werden Urinproben gesammelt und die Proteinoxidation aus dem Stickstoffgehalt geschätzt. Ein Gramm Stickstoff im Urin repräsentiert die Oxidation von 6.25 g Protein. Dieses Ergebnis wird von den Raten der Fett- und Kohlenhydratoxidation subtrahiert.\n-&gt; Diesen Abschnitt noch mit dem aus Brooks ergänzen\nWie bereits erwähnt, erhöht das Messen sowohl des O2-Umsatzes als auch der CO2-Produktion die Genauigkeit der Schätzung des Energieumsatzes, da der Energieäquivalent für Sauerstoff leicht unterschiedlich ist, je nachdem, welches Substrat verwendet wird. Wenn zum Beispiel die VO2~ 600 L/Tag, die VCO2~ 500 L/Tag und die Stickstoffausscheidung 25 g/Tag beträgt, beträgt der Energieumsatz 12.068 kJ (2.886 kcal). Mit der einfachen Formel (d. h. ohne Berücksichtigung der Proteinoxidation) beträgt das Ergebnis 12.120 kJ (2.892 kcal), ein Unterschied von nur 0.2 %.\nWenn eine Mischung aus Kohlenhydraten und Fetten oxidiert wird, entspricht der O2-Umsatz der Summe des für die Oxidation der Kohlenhydrate benötigten O2 plus des für Fette benötigten. Ebenso ist die CO2-Produktion die Summe der CO2-Produktion aus Kohlenhydraten und der CO2-Produktion aus Fetten. Wenn zum Beispiel 100 g Kohlenhydrate und 50 g Fett oxidiert werden, beträgt der O2-Umsatz (100 ⋅ 0.746) + (50 ⋅ 2.009) = 175 L. Die CO2-Produktion beträgt (100 ⋅ 0.743) + (50 ⋅ 1.414) = 145 L. Der RQ ist ( = 0.829).\nWenn Experimente mit indirekter Kalorimetrie durchgeführt werden und VO2~ und VCO2~ gemessen werden, wird die umgekehrte Berechnung verwendet:\n\\[\n\\text{Rate der Kohlenhydratoxidation (g/min)} \\cdot \\text{O}_2 (\\text{L/g}) + \\text{Rate der Fettoxidation (g/min)} \\cdot \\text{O}_2 (\\text{L/g}) = \\text{VO}_2 (\\text{L/min})\n\\]\n\\[\n\\text{Rate der Kohlenhydratoxidation (g/min)} \\cdot \\text{CO}_2 (\\text{L/g}) + \\text{Rate der Fettoxidation (g/min)} \\cdot \\text{CO}_2 (\\text{L/g}) = \\text{VCO}_2 (\\text{L/min})\n\\]\nDiese Berechnungen ergeben zwei Gleichungen mit zwei unbekannten Variablen, die gelöst werden können:\n\\[\n\\text{Kohlenhydratoxidation (g/min)} = 4.585 \\cdot \\text{VCO}_2 - 3.226 \\cdot \\text{VO}_2\n\\] \\[\n\\text{Fettoxidation (g/min)} = 1.695 \\cdot \\text{VO}_2 - 1.701 \\cdot \\text{VCO}_2\n\\]\n\nBisher haben wir, wie in der sportphysiologischen Praxis üblich, die Berechnungen der verstoffwechselten Brennstoffe vereinfacht, indem der Eiweißstoffwechsel vernachlässigt wurde. Tatsächlich wird diese Rechnung jedoch zusätzlich durch die Proteinoxidation beeinflusst.\nProteine liefern essentielle Bausteine für Körperstrukturen, während Kohlenhydrate und Fette die Energie für verschiedene Körperfunktionen, einschließlich der Proteinsynthese, bereitstellen. Alle drei Kategorien von Nahrungsenergiequellen erfordern Verdauung, Verwertung und zelluläre Aufnahme, bevor sie in die gemeinsamen Stoffwechselwege der Energiegewinnungsprozesse eintreten. In Bezug auf die Verwertungszeit und die metabolische Effizienz lautet die Hierarchie der Substratnutzung: \\(Kohlenhydrate \\rightarrow Lipide \\rightarrow Aminosäuren\\) (Brooks, 2012)\nDer Abbau von Aminosäuren benötigt zusätzlich die Stickstoffentfernung durch Trans- oder Desaminierung, so entstehen beim Abbau nicht nur CO2 und H2O, sondern auch Harnstoff, eine Verbindung, die Stickstoff enthält. Da Eiweiß durchschnittlich 16% Stickstoff enthält, multipliziert man die aus dem Harn analysierte Stickstoffmenge mit 6,25, um den Eiweißumsatz zu erhalten. Der Eiweißumsatz beträgt unter normalen Ernährungsbedingungen ungefähr 10–15% des Grundumsatzes.\n\nSchon früh gab es Erkentnisse dass körperliche Betätigung wenig Einfluss auf die Stickstoffausscheidung im Urin hat (Cathcart & Burnett, 1926). Später stellten auch Todd et al. (Todd1986?) in detaillierten Studien zur Stickstoffbilanz des Körpers fest, dass körperliche Aktivität, solange die Energiezufuhr ausreichend war, nicht zu einem negativen Stickstoffhaushalt führte. Aufgrund dessen werden die Berechnungen der verstoffwechselten Brennstoffe während der Belastung üblicherweiße nicht für Aminosäuren und Proteine korrigiert.\nDieses Vorgehen kann jedoch kritisch betrachtet werden. Geht man davon aus das Proteine ca. 15 % der täglichen Energieaufnahme liefern, kann angenommen werden, dass Proteine und Aminosäuren ca. 15 % des Ruheumsatzes ausmachen. Nimmt man außerdem an, dass es keinen Anstieg des basalen Protein- und Aminosäurestoffwechel gibt und gleichzeitig der Energiumsatz während der Belastung um das 15-fache steigt, dann tragen Aminosäuren zu 1% des gesamten Energieverbrauchs bei (Jacobs et al., 2006). Sollte jedoch der Protein- und Aminosäurestoffwechel während körperlicher Arbeit um 50% (McKenzie?) oder sogar 400% (Millward?) ansteigt, schätzt man, dass Aminosäuren 2 % bis 4 % des gesamten Energieverbrauchs ausmachen, was die berechnete Lipidoxidation entsprechend verringert. Daher, wie ursprünglich aufgrund des fehlenden Einflusses auf die Stickstoffausscheidung im Urin vermutet, ist die Rolle von Aminosäuren als Brennstoffenergie relativ gering bei gut ernährten Individuen. Das Ergebnis ist, dass der gesamte Körper-RER eine vernünftige Schätzung des nicht-proteinbezogenen RQ während des Trainings darstellt und eine Korrektur für die Aminosäureoxidation typischerweise nicht verwendet wird, selbst wenn sie verfügbar ist (Brooks, 2012; Jacobs et al., 2006)\nDa der Energieumsatz während der Belastung normalerweise durch Kohlenhydrate und Fettsäuren gedeckt wird, ist der Eiweißanteil am Gesamtumsatz bei körperlicher Arbeit praktisch zu vernachlässigen, sodass man auf die Bestimmung des Harnstickstoffs verzichten kann. Für die arbeits- und sportphysiologische Praxis vernachlässigt man den Eiweißstoffwechsel daher ganz.\nIndem man den Eiweißumsatz vernachlässigt, misst man den Grundumsatz immer etwa um 1–1,5% zu hoch, den Arbeitsumsatz dagegen weitgehend korrekt (Stegemann, 1991, S. 58).\nzusätzlich angenommen wurde, dass es während der Betätigung keinen Anstieg des basalen Aminosäure- und Proteinabbaus gibt.\n(Bader et al., 1972, S.8) EINFÜGEN!!!\n\n\nZusätzliche Notizen\nMit einer einzigen Ausnahme sind die kalorischen Äquivalente für die Verbrennung von Nahrungsmitteln innerhalb und außerhalb des Körpers gleich. Protein ist die Ausnahme, weil Stickstoff, ein Element, das einzigartig für Protein ist, im Körper nicht oxidiert, sondern hauptsächlich im Urin, aber auch im Schweiß ausgeschieden wird. Daher ist das kalorische Äquivalent des Proteinmetabolismus etwa 26 % geringer als in einem Bombenkalorimeter.\n\n\n\n\n\n\n\n\nLiteratur\n\nBrooks, G. A. (2012). Bioenergetics of exercising humans. Comprehensive Physiology, 2(1), 537–562. https://doi.org/10.1002/cphy.c110007\n\n\nCathcart, E. P., & Burnett, W. A. (1926). The Influence of Muscle Work on Metabolism in Varying Conditions of Diet. Proceedings of the Royal Society of London, 99(699), 405–426. https://royalsociety.org/people/alan-armstrong-8688/\n\n\nJacobs, K. A., Krauss, R. M., Fattor, J. A., Horning, M. A., Friedlander, A. L., Bauer, T. A., Hagobian, T. A., Wolfel, E. E., & Brooks, G. A. (2006). Endurance training has little effect on active muscle free fatty acid, lipoprotein cholesterol, or triglyceride net balances. American Journal of Physiology - Endocrinology and Metabolism, 291(3), 656–665. https://doi.org/10.1152/ajpendo.00020.2006\n\n\nJeukendrup, A., & Gleeson, M. (2019). Sport Nutrition (3. Edition, S. 602). Human Kinetics.\n\n\nStegemann, J. (1991). Leistungsphysiologie (4. Edition, S. 385). Georg Thieme Verlag."
  },
  {
    "objectID": "Theoretischer_Hintergrund/Energieumsatzberechnung/Energieumsatzberechnung.html",
    "href": "Theoretischer_Hintergrund/Energieumsatzberechnung/Energieumsatzberechnung.html",
    "title": "",
    "section": "",
    "text": "Code"
  },
  {
    "objectID": "Theoretischer_Hintergrund/Energieumsatzberechnung/Energieumsatzberechnung.html#berechnung-der-aeroben-energiekomponente-waer",
    "href": "Theoretischer_Hintergrund/Energieumsatzberechnung/Energieumsatzberechnung.html#berechnung-der-aeroben-energiekomponente-waer",
    "title": "",
    "section": "Berechnung der aeroben Energiekomponente (WAER)",
    "text": "Berechnung der aeroben Energiekomponente (WAER)\nUm den aeroben Energienteil am physiologischen Gesamtenergieumsatz (WAER) zu bestimmen muss der Sauerstoffvolmenstrom über den Belastungszeitraum (V̇O2,Bel) und der Sauerstoffvolumenstom in Ruhe bestimmt werden (V̇O2,Ruhe).\nDie Ruhesauerstoffaufnahme kann abhängig von der Art der folgenden Belastung in Ruhe gemessen werden oder mittels Gleichungen bestimmt werden…\nGleichungen zur Basalrate nach Harris & Benedict (1918)\n\\[\nh_{f, m} =\n\\begin{cases}\nh_{f} = 655,1 + (9,563 \\cdot \\text{Körpermasse [kg]}) + (1,850 \\cdot \\text{Körperlänge [m]}) - (4,676 \\cdot \\text{Alter}) \\\\    \nh_{m} = 66,5 + (13,75 \\cdot \\text{Körpermasse [kg]}) + (5,003 \\cdot \\text{Körperlänge [cm]}) - (6,775 \\cdot \\text{Alter [Jahre]})\n\\end{cases}\n\\tag{2}\\]\nUm den Wert ins Sitzen zu übertragen Multiplikation der Ruhewerte auf Basis von (Ciba-Geigy, 1977, S. 225)…\n\\[\nRMR_{f, m} =\n\\begin{cases}\nRMR_{f} = (h_{f} / (24 \\cdot 60 \\cdot kÄ \\cdot Körpermasse\\;[kg]) \\cdot  4,1868  \\cdot 1,29 \\\\    \nRMR_{m} = (h_{m} / (24 \\cdot 60 \\cdot kÄ \\cdot Körpermasse\\;[kg]) \\cdot  4,1868  \\cdot 1,29\n\\end{cases}\n\\tag{3}\\]\nDaraus lässt sich die über VO2,Ruhe liegende Sauerstoffaufnahme während des Belastungszeitraumes (VO2,Netto) bestimmen.\nDer aerobe Energienteil am physiologischen Gesamtenergieumsatz (WAER) einer Belastung lässt sich berechnen, indem man die über Ruhhesauerstoffaufnahme (VO2,Ruhe) liegende akkumulierte Sauerstoffaufnahme während des Belastungszeitraumes (VO2,Netto) mit dem durchschnittlichen kÄ des Belastungszeitraumes multipliziert (= kÄBel) (Stegemann, 1991, S. 59)\n\\[\nW_{AER}\\;[kJ] = VO_{2,Netto} (t)\\;[l] \\cdot \\overline{kÄ}_{Bel}\\;[kJ \\cdot l^{-1}]\n\\tag{4}\\]\nUm den aeroben Arbeitsumsatz (= Waer) eines Belastungszeitraumes zu erhalten, muss anschließend der Ruheenergieumsatz (definieren und abkürzen) vom errechneten aeroben Anteil des Gesamtenergieumsatzes abgezogen werden. Der Ruheenergieumsatz beschreibt die Energie, die der Körper in völliger Ruhe und im Liegen benötigt, um seine Funktion aufrechtzuerhalten. In der vorliegenden Studie wird der Ruheenergieumsatz als Basis verwendet, da sich der Sportler nicht in liegender Position befindet. Dieser beschreibt den physiologischen Energieumsatz in einem normalen Zustand der Ruhe oder Nicht-Bewegung. Der individuelle Ruheumsatz wird in dieser Untersuchung in den 10 Minuten vor dem Start der ersten Belastung auf dem Fahrradergometer in sitzender Position gemessen. WaerRuhe kann auf ähnliche Weise wie WaerGes berechnet werden, indem man die den durchschnittlichen Sauerstoffvolumenstrom in Ruhe (= V̇O2Ruhe) mit dem entsprechen-den durchschnittlichen kÄ des Zeitraumes der Ruhemessung multipliziert.Waer = WaerGes – WaerRuhe Gl. 5"
  },
  {
    "objectID": "Theoretischer_Hintergrund/Energieumsatzberechnung/Energieumsatzberechnung.html#berechnung-der-anaeroben--laktaziden-energiekomponente-wblc",
    "href": "Theoretischer_Hintergrund/Energieumsatzberechnung/Energieumsatzberechnung.html#berechnung-der-anaeroben--laktaziden-energiekomponente-wblc",
    "title": "",
    "section": "Berechnung der anaeroben- laktaziden Energiekomponente (WBLC)",
    "text": "Berechnung der anaeroben- laktaziden Energiekomponente (WBLC)"
  },
  {
    "objectID": "Theoretischer_Hintergrund/Energieumsatzberechnung/Energieumsatzberechnung.html#berechnung-der-anaeroben--alaktaziden-energiekomponente-wpcr",
    "href": "Theoretischer_Hintergrund/Energieumsatzberechnung/Energieumsatzberechnung.html#berechnung-der-anaeroben--alaktaziden-energiekomponente-wpcr",
    "title": "",
    "section": "Berechnung der anaeroben- alaktaziden Energiekomponente (WPCr)",
    "text": "Berechnung der anaeroben- alaktaziden Energiekomponente (WPCr)\nUm die der anaeroben- alaktazide Energiekomponente WPCr zu bestimmen, wurde der Verlauf des Sauerstoffvolumenstroms zu Beginn und nach dem Ende der Belastung betrachtet.\nZu Beginn der körperlichen Belastung passt sich das Herz-Kreislauf- und Atmungssystem nur verzögert an den gestiegenen Sauerstoffbedarf für zu erbringende mechanische Leistung an.\nDies führt zu einem Sauerstoffdefizit bzw. Sauerstoffschuld, die am Ende der Übung ausgeglichen wird.\nStatt den häufig verwendeten Begriffen Sauerstoffdefizit oder Sauerstoffschuld beschreibt laut (Brooks et al., 2004, S. 218; Gaesser & Brooks, 1984) + Brooks 1970 und 1981 nachschlagen der Begriff “Excess post-exercise oxygen consumption” oder kurz EPOC die nachgeatmete Sauerstoffmenge nach Arbeitsende über den Ruhebedarf hinaus besser,da diese meist größer ist als das anfänglich eingegangene Sauerstoffdefizit (Marées, 2003, S. 377). Im folgenden wird der Begriff EPOC verwendet in dieser Arbeit.\nEin Teil des EPOC wird durch Sauerstoff gedeckt, der aus den Speichern von Blut und Gewebe freigesetzt wird.\nDer verbleibende Anteil, bei Belastungsintensitäten unterhalb der anaeroben Schwelle, wird durch die Spaltung von energiereichen Phosphaten, hauptsächlich Phosphokreatin (PC), gedeckt.(Francescato et al., 2003)\nDie EPOC gliedert sich in einen langsamen Teil, die sogenannte „slow-component“ (= V̇O2EPOCslow) und einen schnellen Teil, die „fast-component“. Der erhöhte V̇O2 des schnelle Teils ist größtenteils auf die Auffüllung der ATP- und CrP-Speicher + der Wiederauffüllung von O2-Speichern (Hämoglobin, Myoglobin) nach der Belastung zurückzuführen und repräsentiert somit den alaktaziden Teil der anaeroben Energiebereitstellung.\nNeben der Wiederherstellung der energiereichen Phosphate können auch Faktoren wie der Transport von Laktat ( Glukoneogenese aus Laktat), eine erhöhte Körperkerntemperatur, eine gestei-gerte Durchblutung oder eine erhöhte Ventilation zur “fast-component” des EPOC beitragen (Børsheim & Bahr, 2003)\nDie Ursachen für den langsamen Teil der EPOC sind nicht eindeutig geklärt, jedoch werden verschiedene Faktoren wie eine erhöhte Aktivität des Sympathikus, des Stoffwechsels, des Herz-Kreislauf-Systems sowie die Rückumwandlung des angefallenen Laktats als potenzielle Ursachen ge-nannt (Åstrand et al., 2003, S. 241; Bahr & Sejersted, 1991) + (Erhöhter Sauerstoffbedarf des Körpergewebes infolge einer erhöhten Körpertemperatur und eines erhöhten Katecholaminspiegels (eine erhöhte Adrenalinausschüttung verursacht eine Steigerung oxidativer Prozesse) Erhöhte Tätigkeit des Herzmuskels und der Atmungseigenmuskulatur mit einem entsprechend vergrößerten Sauerstoffbedarf Vermehrte Produktion des Schilddrüsenhormons Thyroxin).\nDa der Anteil der Energieversorgung durch das anaerob-alaktazide System an der gesamten umgesetzten chemischen Energie während einer Belastung nicht (oder nur schwer durch Biopsie) direkt messbar ist, wird die schnelle Komponente der EPOC berechnet und als Schätz-wert für den WPCR verwendet (R. Beneke et al., 2004).\n–&gt; 3. Komponente der ultra slow anteil auch kurz besprechen, aber im Kontext der Arbeit nicht relevant (Gründe: Erhöhter Muskeltonus Zelluläre Regenerationsvorgänge Stimulation energiebereitstellender Mechanismen (z. B. Atmungskette))\n(Margaria et al., 1933)\n\nBerechnung der Sauerstoffspeicher\nDie Menge des Sauerstoffs, die während des Übergangs von Ruhe zu Arbeit aus den Körperspeichern entnommen wurde, wurde mittels der von Francescato et al. (2003) beschriebenen Methode bestimmt. Die Berechnung umfasst die pulmonalen Sauerstoffspeichern in den Lungen (\\(ΔO~2~S^p^\\)), im venösen Blut (\\(ΔO~2~S^v^\\)) sowie die an Muskelmyoglobin gebundenen Sauerstoffmengen (\\(ΔO~2~S^m^\\)). Die entsprechenden Veränderungen während des Übergangs von Ruhe zu Arbeit (oder umgekehrt) zeigen die Menge des Sauerstoffs, die von den Muskeln zu Beginn der Arbeit verstoffwechselt wurde, die jedoch nicht in den gemessenen Atemgasen zu sehen sind.\n\nPulmonaler Sauerstoffspeicher\n\\(ΔO~2~S^p^\\) kann aus der Differenz zwischen der Zeitkonstante der am Mund gemessenen Sauerstoffaufnahme zum Start der Belastung (\\(τ~Start~\\)) und der auf alveolärer Ebene gemessenen Sauerstoffaufnahme (\\(τ~alveolär~\\)) geschätzt werden.\n\\(\\dot{V}O_{2, SS}\\) sowie τm mit einer monoexponentialen Exponentialfunktion beschrieben für jeden Probanden als Zeitkonstante des Anstieges des Sauerstoffvolumenstormes berechnet.\n\\(\\dot{V}O_{2, SS}\\) sowie \\(τ~Start~\\) wurde mittels nichtlinearer Regression unter Verwendung des folgenden mono-exponentiellen 3-Parameter-Modells für jedes Belastungsintervall modelliert:\n\\[\n\\dot{V}O_2(t) = \\dot{V}O_{2, SS} \\cdot \\left(1 - e^{-\\frac{t - TD}{\\tau_Start}}\\right) + \\dot{V}O_{2, Ruhe}\n\\tag{5}\\]\nDie alveoläre Zeitkonstante \\(τ~alveolär~\\) wurde von Cautero et al. (2002) beim Radfahren mit 34.3s festegelegt und wurde für die folgenden Berechnungen als konstante verwendet.\nAnschließend konnte \\(ΔO~2~S^p^\\) mit folgender Gleichung Gleichung 6 bestimmt werden:\n\\[\n\\Delta O_{2}S_{p} = \\Delta \\dot{V}O_{2, SS} \\cdot (\\tau_{Start} - \\tau_{alveolär})\n\\tag{6}\\]\n\n\nVenöser Sauerstoffspeicher\n\n\nDie Berechnung der Sauerstoffspeicher im venösen Blut basiert auf dem Produkt aus dem venösen Blutvolumen (VBV) und der Veränderung zwischen der arteriovenösen Sauerstoffdifferenz im Steady-State ([Δ(Ca - Cv)_s]) und derjenigen in Ruhe ([Δ(Ca - Cv)_r]). Das venöse Blutvolumen wurde dabei als 65% des gesamten Blutvolumens angenommen, welches wiederum als 7% der Körpermasse (in Kilogramm) angesetzt wurde. Die Herzleistung (Q), die den individuellen mechanischen Leistungen in der vorliegenden Arbeit entspricht, wurde aus Daten für ähnliche Wadenübungen geschätzt. Dies ermöglichte es, die lineare Beziehung zwischen (Q) (Liter/Minute) und mechanischer Leistung (Ws, Watt) zu bestimmen als: \\(Q = 0.40 \\cdot Ws + 5.84\\) (n = 5, r² = 0.945). Die individuellen Werte für (O_2^{Sv}) wurden dann aus den entsprechenden (VO_2) und (Q) Werten abgeleitet, wobei letztere auf der Grundlage der obigen Gleichung aus der entsprechenden mechanischen Leistung abgeleitet wurden. Diese Werte sind in Tabelle 2 für die drei Übungsbedingungen aufgeführt.\nBasierend auf den Werten der Studie von Åstrand et al. (1964), die bei verschiedenen Intensitäten auf dem Fahrradergometer gemessen wurden, wurde das individuelle Herzzeitvolumen in Ruhe (QRuhe) und unter Belastung (QBelastung) für jeden Probanden ermittelt. Die Regressionsgleichungen wurden durch lineare Regression der Herzzeitvolumina in Abhängigkeit vom des Sauerstoffvolumenstroms (\\(\\dot{V}O_{2}[l\\cdot min^{-1}]\\)) bestimmt und beschreiben die Beziehung zwischen (\\(\\dot{V}O_{2}[l\\cdot min^{-1}]\\)) und Herzzeitvolumen, wie in Abbildung 1 zu sehen ist.  Um QBelastung zu berechnen, wurde der modellierte Steady-State-Sauerstoffvolumenstrom der jeweiligen Belastungsintensität (\\(\\dot{V}O_{2, SS}\\)) bzw. der jeweilige VO~2, Ruhe~ jedes Probanden für die Berechnung verwendet. Je nachdem, ob \\(\\dot{V}O_{2, SS}\\) mehr als 70% der im 1. Stufentest bestimmten VO2max des Probanden betrug und abhängig vom Geschlecht, wurde die passende Regressionsgleichung für QBelastung Gleichung 7 oder QRuhe Gleichung 8 ausgewählt und der passende Wert eingesetzt.\n\n\n\n\n\n\n\nAbbildung 1: Beziehung zwischen Herzzeitvolumen und Sauerstoffvolumenstrom auf dem Radergometer (Astrand, 1964)\n\n\n\n\n\n\\[\nQ_{Belastung} =\n\\begin{cases}\n9.88 + 3.23 \\cdot \\dot{V}O_{2, SS}\\quad\\rightarrow & \\text{♀ | }\\dot{V}O_{2, Prozent} \\leq 70 \\%\\\\    \n3.66 + 6.81 \\cdot \\dot{V}O_{2, SS}\\quad\\rightarrow & \\text{♀ | }\\dot{V}O_{2, Prozent} \\geq 70 \\%\\\\\n6.55 + 4.35 \\cdot \\dot{V}O_{2, SS}\\quad\\rightarrow & \\text{♂ | }\\dot{V}O_{2, Prozent} \\leq 70 \\% \\\\\n3.07 + 6.01 \\cdot \\dot{V}O_{2, SS}\\quad\\rightarrow & \\text{♂ | }\\dot{V}O_{2, Prozent} \\geq 70 \\%\n\\end{cases}\n\\tag{7}\\]\n\\[\nQ_{Ruhe} =\n\\begin{cases}\n3.66 + 6.81 \\cdot \\dot{V}O_{2, Ruhe}\\quad\\rightarrow & \\text{♀} \\\\    \n3.07 + 6.01 \\cdot \\dot{V}O_{2, Ruhe}\\quad\\rightarrow & \\text{♂}\n\\end{cases}\n\\tag{8}\\]\nasdf\n\\[\n\\Delta O_2S_{v} = \\left[ \\frac{\\dot{V}O_{2, Belastung}}{Q_{Belastung}} - \\frac{\\dot{V}O_{2,Ruhe}}{Q_{Ruhe}} \\right] \\cdot VBV\n\\tag{9}\\]\n\\[\n\\Delta O_2S_{v} = \\left[ \\Delta (C_a - C_v)^{Belastung} - \\Delta (C_a - C_v)^{Ruhe} \\right] \\cdot VBV = \\left[ \\frac{\\dot{V}O_{2, Belastung}}{Q_{Belastung}} - \\frac{\\dot{V}O_{2,Ruhe}}{Q_{Ruhe}} \\right] \\cdot VBV\n\\]\nDie Muskelmasse der Probanden wurde abhänig vom Geschlecht der Probanden sowie der Versuchsbedingung berechnet. Anhand der Stichprobe von Janssen et al. (2000) wurde die Muskelmasse eingeschätzt. Da es sich hier bei den allen Probanden um sehr aktive Sportler mit vergleichsweise geringem Körperfettanteil habdelte, wurde jeweils von einer aktiven Muskelmase, die der oberen Grenze der der Stichrobe von Janssen et al. (2000) ausgeganegen. Für Frauen entsprach dies ca. 34% Muskelmasseanteil & für Männer ca. 42% Antel der Muskelmasse am der Körpermasse. In verschiedenen Studien ……. wurde der Anteil der aktiven Muskelmasse an der GEsamtmuskelmasse auf ca. 60-80% geschätzt. Hier wurde der Anteil für das Fahren im sitzen auf 65% und im stehen auf 75% aktive MUskelmasse festegelegt. Aus diesen beiden Faktoren urde dann wie folgt die aktive Muskelmasse der Probanden bestimmt:\n\\[\nMuskelmasse_{aktiv} =\n\\begin{cases}\nKörpermasse \\cdot 0.34 \\cdot 0.65 \\quad\\rightarrow & \\text{♀ | Sitzen} \\\\\nKörpermasse \\cdot 0.34 \\cdot 0.75 \\quad\\rightarrow & \\text{♀ | Stehen} \\\\\nKörpermasse \\cdot 0.42 \\cdot 0.65 \\quad\\rightarrow & \\text{♂ | Sitzen} \\\\\nKörpermasse \\cdot 0.42 \\cdot 0.75 \\quad\\rightarrow & \\text{♂ | Stehen} \\\\\n\\end{cases}\n\\tag{10}\\]\n\\[\n\\%deoxyMb = 2.09 \\cdot P_{mech} + 14.2\n\\tag{11}\\] Das venöse Blutvolumen (VBV) wurde nach … berehcnet mit …\n\\[\nVBV = Muskelmasse_{aktiv} \\cdot 0.07\n\\tag{12}\\]\n\n\nSauerstoffspeicher im Myoglobin\n\\[\n\\Delta O_2S_{M} = \\left(\\frac{2.09 \\cdot P_{mech}}{100}\\right) \\cdot 4.46 \\cdot 1.34 \\cdot Muskelmasse_{aktiv}\n\\tag{13}\\]\n\\[\nO_2\\text{def} = EPOC - \\Delta O_2S_p - \\Delta O_2S_v - \\Delta O_2S_m\n\\tag{14}\\]\nDiese Gleichung stellt die Berechnung der Veränderung der Sauerstoffspeicher im venösen Blut dar, wobei die Differenzen der arteriovenösen Sauerstoffkonzentrationen unter Belastung und in Ruhe in Verbindung mit dem venösen Blutvolumen betrachtet werden.\nAuf dieser Grundlage wurde das insgesamt gemessene Brutto-Sauerstoffdefizit korrigiert, um das Netto-Sauerstoffdefizit zu erhalten, welches das Sauerstoffäquivalent der Spaltung von Phosphokreatin (PC) bei Arbeitsbeginn darstellt. Die bestimmte Menge an EPOC (Excess Post-exercise Oxygen Consumption) repräsentiert daher dieses korrigierte Sauerstoffdefizit, das durch die initiale PC-Spaltung entstanden ist."
  },
  {
    "objectID": "Theoretischer_Hintergrund/Energieumsatzberechnung/Anaerobe_alaktazide_Energiebereitstellung.html",
    "href": "Theoretischer_Hintergrund/Energieumsatzberechnung/Anaerobe_alaktazide_Energiebereitstellung.html",
    "title": "Anaerobe- alaktazide Energiekomponente (WPCr)",
    "section": "",
    "text": "Um die anaeroben-alaktazide Energiekomponente WPCr zu bestimmen, wurde der Verlauf des Sauerstoffvolumenstroms zu Beginn und nach dem Ende der Belastung betrachtet. Zu Beginn der körperlichen Belastung passt sich das Herz-Kreislauf- und Atmungssystem nur verzögert an den gestiegenen Sauerstoffbedarf für die zu erbringende mechanische Leistung an. Dies führt zu einem Sauerstoffdefizit bzw. einer Sauerstoffschuld, die am Ende der Übung ausgeglichen wird (Di Prampero et al., 1983).Statt den häufig verwendeten Begriffen Sauerstoffdefizit oder Sauerstoffschuld beschreibt laut (Brooks et al., 2004, S. 218; Gaesser & Brooks, 1984) der Begriff “Excess post-exercise oxygen consumption” (EPOC) die nachgeatmete Sauerstoffmenge nach Arbeitsende über den Ruhebedarf hinaus besser, da diese meist größer ist als das anfänglich eingegangene Sauerstoffdefizit (Marées, 2003, S. 377). Im Folgenden wird der Begriff EPOC verwendet.\nEin Teil des EPOC wird aus den O2-Speichern von Blut und Gewebe bereitgestellt. Der verbleibende Anteil, bei Belastungsintensitäten unterhalb der anaeroben Schwelle, wird durch die Spaltung von energiereichen Phosphaten, hauptsächlich dem Phosphokreatin (PCr), gedeckt. Diese nach der Belastung aufgenommene Sauerstoffmenge dient dabei primär der Wiederherstellung des homöostatischen Gleichgewichts und der Resynthese des umgesetzten PCr, weshalb sie energetisch der Belastungsphase zugeordnet werden muss (Baum & Schuster, 2008; Dunst, 2019; Francescato et al., 2003).\nDie EPOC gliedert sich in einen langsamen Teil, die sogenannte “slow-component” \\(\\dot{V}O_{2,EPOC,slow}\\) und einen schnellen Teil, die “fast-component” \\(\\dot{V}O_{2,EPOC,fast}\\) (siehe Abbildung 1). Der erhöhte \\(\\dot{V}O_{2}\\) des schnellen Teils ist größtenteils auf die Auffüllung der ATP- und CrP-Speicher sowie die Wiederauffüllung von O2-Speichern (Hämoglobin, Myoglobin) nach der Belastung zurückzuführen und repräsentiert somit den alaktaziden Teil der anaeroben Energiebereitstellung. Neben der Wiederherstellung der energiereichen Phosphate können auch Faktoren wie der Transport von Laktat (Glukoneogenese aus Laktat), eine erhöhte Körperkerntemperatur, eine gesteigerte Durchblutung oder eine erhöhte Ventilation zur “fast-component” des EPOC beitragen (Børsheim & Bahr, 2003).\nDie Ursachen für den langsamen Teil der EPOC sind nicht eindeutig geklärt, jedoch werden verschiedene Faktoren wie eine erhöhte Aktivität des Sympathikus, des Stoffwechsels, des Herz-Kreislauf-Systems sowie die Rückumwandlung des angefallenen Laktats als potenzielle Ursachen genannt (Åstrand et al., 2003, S. 241; Bahr & Sejersted, 1991). Weitere mögliche Gründe beinhalten einen erhöhten Sauerstoffbedarf des Körpergewebes infolge einer erhöhten Körpertemperatur und eines erhöhten Katecholaminspiegels (eine erhöhte Adrenalinausschüttung verursacht eine Steigerung oxidativer Prozesse), eine erhöhte Tätigkeit des Herzmuskels und der Atmungseigenmuskulatur mit einem entsprechend vergrößerten Sauerstoffbedarf sowie eine vermehrte Produktion des Schilddrüsenhormons Thyroxin QUELLE!!!!.Obwohl es auch eine ultra-langsame Komponente der EPOC gibt, die durch Faktoren wie erhöhten Muskeltonus, zelluläre Regenerationsvorgänge und die Stimulation energiebereitstellender Mechanismen (z.B. Atmungskette) verursacht wird (Margaria et al., 1933), ist diese im Kontext der vorliegenden Arbeit nicht relevant.\nDa der Anteil der Energieversorgung durch das anaerob-alaktazide System an der gesamten umgesetzten chemischen Energie während einer Belastung nicht oder nur sehr schwer direkt messbar ist, wird die schnelle Komponente der EPOC modelliert und als Basis für die für die Berechnung der anaeroben-alaktazide Energiekomponente verwendet (Beneke et al., 2004).",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Energieumsatzberechnung",
      "Anaerobe- alaktazide Energiekomponente (W~PCr~)"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Energieumsatzberechnung/Anaerobe_alaktazide_Energiebereitstellung.html#modellierung-von-wpcr",
    "href": "Theoretischer_Hintergrund/Energieumsatzberechnung/Anaerobe_alaktazide_Energiebereitstellung.html#modellierung-von-wpcr",
    "title": "Anaerobe- alaktazide Energiekomponente (WPCr)",
    "section": "Modellierung von WPCr",
    "text": "Modellierung von WPCr\nUm die anaerob-alaktazide Energiekomponente während jedem Belastungsintervall zu bestimmen, wurde die EPOC mittels nichtlinearer Regression modelliert. Der Startpunkt der Modellierung wurde dabei durch den ersten messbaren Abfall der \\(\\dot{V}O_2\\,(t)\\) definiert, welcher zeitlich verzögert zum eigentlichen Belastungsende auftreten kann. Diese Zeitverzögerung (tdelay) wurde in der Datenaufbereitung berücksichtigt, indem nur die \\(\\dot{V}O_2\\,(t)\\)-Werte ab dem ersten eindeutigen Abfall einbezogen wurden. Sie ist daher in den folgenden Modellierungsgleichungen und Abbildungen nicht explizit enthalten. Die Modellierung erfolgte unter Verwendung des folgenden bi-exponentiellen Modells mit vier freien Parametern (Beneke et al., 2002; Özyener et al., 2001):\n\\[\n\\dot{V}O_{2EPOC}\\,(t) = A_{fast} \\cdot e^{-(t / \\tau_{fast})} + A_{slow} \\cdot e^{-(t / \\tau_{slow})} + \\dot{V}O_{2,Referenz}\n\\tag{1}\\]\n\n\\(A_{\\text{fast}}\\): Amplitude der schnellen EPOC-Komponente\n\\(A_{\\text{slow}}\\): Amplitude der langsamen EPOC-Komponente\n\\(\\tau_{\\text{schnell}}\\): Zeitkonstante der schnellen EPOC-Komponente\n\\(\\tau_{\\text{slow}}\\): Zeitkonstante der langsamen EPOC-Komponente\n\n\nBerechnung von \\(\\dot{V}O_{2,Referenz}\\)\nDa die Probanden während den Erholungsphasen nicht vollständig ruhten, sondern bei 50 Watt weiterfuhren, erreichte der \\(\\dot{V}O_{2}\\,(t)\\) in der Nachatmungsphase (\\(\\dot{V}O_{2,EPOC}\\,(t)\\)) nach einem initialen rapiden Abfall ein Plateau, das signifikant höher war als der mittlere Sauerstoffvolumenstrom im Ruhezustand (\\(\\dot{V}O_{2,Ruhe}\\)). Für die Modellierung der EPOC wurde daher anstelle von \\(\\dot{V}O_{2,Ruhe}\\) ein individueller Referenzwert (\\(\\dot{V}O_{2,Referenz}\\)) berechnet, der den erhöhten Sauerstoffumsatz bei der in der Nachbelastungsphase vorgegebenen mechanischen Leistung von Pmech,Referenz = 50 Watt widerspiegelt. Die Berechnung des \\(\\dot{V}O_{2,Referenz}\\) erfolgte auf Basis der Messdaten aus der Referenzphase, die vor der ersten Belastung ebenfalls bei 50 Watt absolviert wurde. Der individuelle \\(\\dot{V}O_{2,Referenz}\\)-Wert wurde als Mittelwert der verbleibenden \\(\\dot{V}O_{2}\\,(t)\\)-Messwerte bestimmt, nachdem Ausreißer mittels einer rollenden Fensteranalyse eliminiert wurden. Da bei einigen Probanden Messfehler oder unnatürlich hohe \\(\\dot{V}O_{2}\\,(t)\\)-Werte auftraten, wurde ebenfalls ein theoretischer \\(\\dot{V}O_{2,Referenz}\\) berechnet. Dieser setzt sich aus dem \\(\\dot{V}O_{2,Ruhe}\\) und einem standardisierten Arbeitsaufwand für Pmech von 50 Watt zusammen (siehe Gleichung 2). Der standardisierte Arbeitsaufwand, auch als Energie-Effizienz beziehungsweise im Englischen als “oxygen cost of work” bezeichnet, charakterisiert die Änderung des \\(\\dot{V}O_{2}\\,(t)\\) bezogen auf die Änderung der Pmech (\\(\\frac{\\Delta\\dot{V}O_2}{\\Delta\\text{WR}}\\)). In der Literatur finden sich verschiedene Normwerte der Energie-Effizienz bei der Fahrradergometrie. Nach Rassouli & Thurnheer (2015) liegen diese zwischen 8,5 und 11,0 [ml ∙ min-1 ∙ Watt-1]. Wasserman et al. (2011) geben Werte von etwa 10 [ml ∙ min-1 ∙ Watt-1] an, wobei für trainierte Radfahrer leicht erhöhte Werte von etwa 11 [ml ∙ min-1 ∙ Watt-1] charakteristisch sind. Von Heck et al. (2022) wird für die Fahrradergometrie ein Referenzwert von etwa 12 [ml ∙ min-1 ∙ Watt-1] genannt. Experimentelle Untersuchungen von Hansen et al. (1984) ergaben einen mittleren Anstieg von 9,3 ± 1,35 [ml ∙ min-1 ∙ Watt-1]. Özyener et al. (2001) zeigten eine belastungsabhängige Abstufung der Energie-Effizienz: von 11,52 [ml ∙ min-1 ∙ Watt-1] bei moderater über 11,02 [ml ∙ min-1 ∙ Watt-1] bei hoher und 10,72 [ml ∙ min-1 ∙ Watt-1] bei sehr hoher bis hin zu 9,99 [ml ∙ min-1 ∙ Watt-1] bei Ausbelastungen. Basierend auf den Literaturbefunden wurde für die Berechnung der \\(\\dot{V}O_{2,Referenz}\\) ein konservativer Wert von 10 [ml ∙ min-1 ∙ W-1] für \\(\\frac{\\Delta\\dot{V}O_2}{\\Delta\\text{WR}}\\) verwendet. Bei einer Abweichung des ursprünglich ermittelten \\(\\dot{V}O_{2,Referenz}\\)-Messwertes von mehr als 10% vom theoretischen Wert wurde der ermittelte Messwert durch den theoretischen Wert ersetzt, sodass physiologisch plausible \\(\\dot{V}O_{2,Referenz}\\)-Werte für die folgenden Berechnungen gegeben sind.\n\\[\n\\begin{align}\n\\dot{V}O_{2,\\text{Referenz}} &= \\dot{V}O_{2,\\text{Ruhe}} + \\frac{\\Delta\\dot{V}O_2}{\\Delta\\text{WR}} \\cdot P_{\\text{mech,Referenz}} \\\\\n\\dot{V}O_{2,\\text{Referenz}}\\,[\\text{l} \\cdot \\text{min}^{-1}] &= \\dot{V}O_{2,\\text{Ruhe}}\\,[\\text{l} \\cdot \\text{min}^{-1}] + 0.010\\,[\\text{l} \\cdot \\text{min}^{-1} \\cdot \\text{W}^{-1}] \\cdot 50\\,[\\text{W}]\n\\end{align}\n\\tag{2}\\]\n\n\nDreistufige Modellierung der EPOC\nDie Anpassung der Modellparameter aus Gleichung 1 erfolgte für jeden Belastungsdurchgang in einem dreistufigen Verfahren. Diese sequentielle Modellierung ermöglichte eine systematische Anpassung der Parameter an die individuelle \\(\\dot{V}O_{2}\\,(t)\\)-Nachbelastungskinetik unter Berücksichtigung physiologisch fundierter Grenzwerte aus der Literatur. Die Implementierung der dreistufigen Modellanpassung erwies sich nach systematischer Erprobung als vorteilhaft gegenüber einem einstufigen Modellierungsansatz. Dies zeigte sich sowohl in einer höheren Übereinstimmung der ermittelten Modellparameter mit den in der Literatur dokumentierten Referenzwerten als auch in einer gesteigerten Robustheit bei der Anpassung an unterschiedliche Nachbelastungscharakteristiken. Durch den dreistufigen Ansatz konnten zudem die Parametergrenzen der nichtlinearen Regressionen in den jeweiligen Modellierungsschritten breiter gefasst werden, was die Robustheit der Anpassung zusätzlich erhöhte.\nEine Zusammenstellung relevanter Referenzwerte aus der Fachliteratur, sowohl für die EPOC-Mengen als auch für die Parameter der Bi-Exponentialfunktion des EPOC-Modells, wird in den Tabellen Tabelle 1 und Tabelle 2 dargestellt. Die einzelnen Modellierungsschritte werden in den folgenden Kapiteln detailliert erläutert.\n\n\n\n\nTabelle 1: Gesamt-EPOC-Mengen & EPOC-Mengen der schnellen Komponente aus der Fachliteratur\n\n\n\nQuelleEPOCfast [ml·kg⁻¹]EPOCfast [l]EPOCges [ml·kg⁻¹]EPOCges [l]Hill et al. (1924)---7.5Margaria et al. (1933)36.82.50--Margaria et al. (1963)--75.04.65Margaria et al. (1964)-2.77--Di Prampero (1971)45.0---Margaria (1972)40.0---Di Prampero et al. (1973)32.0---Shephard (1972)--67.05.00Katch (1973)--68.04.89Roberts & Morton (1978)37.452.7970.04.93Beneke et al. (2002)-1.904 ± 0.563--Beneke et al. (2004)32.13 ± 2.592.48 ± 0.20--Francescato et al. (2003)Sehr Leicht: 11.72 ± 2.4Leicht: 20.72 ± 3.4Moderat: 32.73 ± 3.5-Sehr Leicht: 29.2 ± 5.9Leicht: 51.6 ± 8.4Moderat: 81.5 ± 8.8-Dunst et al. (2023a)3s: 18.77 ± 4.568s: 26.60 ± 6.0012s: 29.47 ± 6.1360s: 33.25 ± 7.433s: 1.44 ± 0.358s: 2.04 ± 0.4612s: 2.26 ± 0.4760s: 2.55 ± 0.57--Dunst et al. (2023b)3s: 16.96 ± 3.688s: 24.78 ± 2.0112s: 27.34 ± 5.1360s: 28.68 ± 5.363s: 1.52 ± 0.338s: 2.22 ± 0.1812s: 2.45 ± 0.4660s: 2.57 ± 0.48--Langley (2024)10s: 63.71 ± 16.0615s: 68.00 ± 17.4830s: 78.34 ± 15.0210s: 4.92 ± 1.2415s: 5.25 ± 1.3530s: 6.05 ± 1.16--EPOCges [ml·kg⁻¹]: auf Körpermasse normierte EPOC-Werte; EPOCges [l]: EPOC der gesamten Nachbelstung; EPOCfast [ml·kg⁻¹]: auf Körpermasse normierte EPOC die der Rephosphorylierung von PCr zuzuordnen ist; EPOCfast [l]: EPOC die der Rephosphorylierung von PCr zuzuordnen ist; Zeitangaben (3s, 8s, 10s, 12s, 15s, 30s, 60s): Dauer maximaler Sprints auf dem Radergometer; Intensitätsangaben: Belastungsintensitäten (sehr leicht, leicht, moderat)\n\n\n\n\n\n\n\n\n\nTabelle 2: Literaturbasierte EPOC-Modellparameter der Bi-Exponentialfunktion\n\n\n\nQuelleA [ml·min⁻¹]τA [min]B [ml·min⁻¹]τB [min]WPCr [kJ]Margaria et al. (1933)-≈ 0.60-≈ 50.00-Berg (1947)-0.75---Henry & DeMoor (1950)-0.90 - 0.94-6.94 - 8.00-Henry & Berg (1950)-0.66 - 0.71---Henry et al. (1951)-1.08 - 1.16---DeMoor (1954)-0.88-5.65-Henry & DeMoor (1956)-1.04-5.92-Royce (1969)-1.31-23.81-Katch et al. (1972)-0.66-14.71-Di Prampero et al. (1973)-≈ 0.72-21.70 - 28.90...Katch (1973)2.800.691.44316.94-Roberts & Morton (1978)2.3300.660.3676.87-Di Prampero (1981)-0.60 - 0.72-21.65...Özyener et al. (2001)-M: 0.48 ± 0.10H: 0.70 ± 0.18VH: 0.55 ± 0.08S: 0.58 ± 0.18-VH: 7.67 ± 2.05S: 8.98 ± 6.32-Beneke et al. (2002)2.777 ± 0.4450.70 ± 0.200.675 ± 0.25714.10 ± 13.5040.2 ± 10.6Dunst et al. (2023a)2.49 ± 0.620.84 ± 0.130.51 ± 0.347.34 ± 3.673s: 30.10 ± 7.328s: 42.64 ± 9.6112s: 47.23 ± 9.8260s: 53.30 ± 11.91Dunst et al. (2023b)3s: 1.99 ± 0.448s: 2.74 ± 0.3812s: 2.88 ± 0.5060s: 3.03 ± 0.453s: 0.82 ± 0.148s: 0.84 ± 0.1212s: 0.84 ± 0.1360s: 0.85 ± 0.133s: 0.20 ± 0.178s: 0.42 ± 0.1312s: 0.58 ± 0.1260s: 0.98 ± 0.303s: 5.72 ± 2.528s: 6.46 ± 3.3812s: 8.03 ± 3.1060s: 9.36 ± 5.113s: 31.83 ± 6.988s: 46.50 ± 3.7912s: 51.24 ± 9.5260s: 53.73 ± 9.96Langley et al. (2024)----10s: 102.93 ± 25.9115s: 109.83 ± 28.3030s: 126.39 ± 24.25A [ml·min⁻¹]: Amplitude der schnellen EPOC-Komponente; τA [min]: Zeitkonstante der schnellen EPOC-Komponente; B [ml·min⁻¹]: Amplitude der langsamen EPOC-Komponente; τB [min]: Zeitkonstante der langsamen EPOC-Komponente; W~PCr [kJ]: Berechnete anaerobe- alaktazide Energiekomponente; Zeitangaben (3s, 8s, 10s, 12s, 15s, 30s, 60s): Dauer maximaler Sprints auf dem Radergometer; Intensitätsangaben: M: moderate, H: heavy, VH: very heavy, S: severe exercise intensities\n\n\n\n\n\n\n\n1. Schritt - Bestimmung von \\(\\tau\\)\nUm den Zeitraum der \\(\\dot{V}O_{2EPOC, \\text{fast}}\\,(t)\\) in Abhängigkeit von der individuellen Abfallkinetik des \\(\\dot{V}O_{2,EPOC}\\,(t)\\) für jede Nachatmungsphase zu bestimmen, wurde im ersten Schritt die Zeitkonstante \\(\\tau\\) mittels einer nichtlinearen Regression basierend auf folgendem exponentiellen Drei-Parameter-Modell modelliert:\n\\[\n\\dot{V}O_{2EPOC}\\,(t) = A \\cdot e^{-(t / \\tau)} + C\n\\tag{3}\\]\nFür die nichtlineare Regression wurden folgende Parametergrenzen definiert: \\(A\\): \\([0, \\infty)\\) \\(\\;|\\;\\) \\(\\tau\\): \\([10, 600]\\) \\(\\;|\\;\\) \\(C\\): \\(\\text{unbeschränkt}\\)\nDie ermittelte Zeitkonstante \\(\\tau\\) wurde zur Abgrenzung des Zeitraums der \\(\\dot{V}O_{2EPOC, \\text{fast}}\\,(t)\\) von der \\(\\dot{V}O_{2EPOC, \\text{slow}}\\,(t)\\) verwendet. Als Grenzwert wurde das Zweifache der Zeitkonstante (\\(2\\tau\\)) definiert, da zu diesem Zeitpunkt mit etwa 86,5 % bereits ein Großteil des exponentiellen Abfalls von \\(\\dot{V}O_{2,EPOC}\\,(t)\\) erreicht ist.\n\n\n\n\n\n\nAbbildung 2: Modellierung der exponentiellen \\(\\dot{V}O_{2EPOC}\\,(t)\\)-Funktion zur Bestimmung der Zeitkonstante \\(\\tau\\)\n\n\n\n\n\n2. Schritt - Modellierung von \\(\\dot{V}O_{2EPOC, \\text{slow}}\\,(t)\\)\nAufgrund der methodisch bedingten zeitlichen Begrenzung der Entlastungsphase auf 10 Minuten bei 50 Watt wurde für eine zuverlässige Modellierung der \\(\\dot{V}O_{2EPOC, \\text{slow}}\\,(t)\\) eine verlängerte Nachbelastungsphase von 70 Minuten simuliert. Diese Simulation basierte auf der Annahme, dass nach 60 Minuten sowohl die mit der EPOCfast als auch EPOCslow assoziierten physiologischen Prozesse weitestgehend abgeschlossen sind und der \\(\\dot{V}O_{2}\\,(t)\\) auf das Niveau des berechneten \\(\\dot{V}O_{2,Referenz}\\)-Wertes zurückkehrt. Methodisch wurde dies umgesetzt, indem die berechneten \\(\\dot{V}O_{2,Referenz}\\)-Werte für den Zeitraum von 60 bis 70 Minuten in den Datensatz integriert wurden. Die Anzahl der integrierten \\(\\dot{V}O_{2}\\,(t)\\)-Datenpunkte wurde äquivalent zu den im Zeitintervall der \\(\\dot{V}O_{2EPOC, \\text{slow}}\\,(t)\\) erfassten Messpunkten gewählt, beginnend bei \\(2\\tau\\) bis zum finalen \\(\\dot{V}O_{2}\\,(t)\\)-Messwert der Nachbelastungsphase. Diese Vorgehensweise ermöglichte eine ausgewogene Gewichtung von 50% zwischen den simulierten und den empirisch erfassten \\(\\dot{V}O_{2,Referenz}\\)-Punkten in der nachfolgenden Modellanpassung. Die Anpassung der \\(\\dot{V}O_{2EPOC, \\text{slow}}\\,(t)\\)-Modellfunktion erfolgte mithilfe einer nichtlinearen Regression, basierend auf folgendem exponentiellen Modell mit zwei freien Parametern:\n\\[\n\\dot{V}O_{2EPOC, slow}\\,(t) = A_{slow} \\cdot e^{-(t / \\tau_{slow})} + \\dot{V}O_{2,Referenz}\n\\tag{4}\\]\nFür die nichtlineare Regression wurden folgende Parametergrenzen definiert:\\(A_{slow}\\): \\([0.1, 0.5 \\cdot \\dot{V}O_{2,\\text{max}} \\text{ der Messwerte}]\\) \\(\\;|\\;\\) \\(\\tau_{slow}\\): \\([90, 3600]\\) \\(\\;|\\;\\) \\(\\dot{V}O_{2,\\text{Referenz}}\\): \\(\\text{fixer Parameter}\\)\n\n\n\n\n\n\nAbbildung 3: Darstellung der \\(\\dot{V}O_{2EPOC, \\text{slow}}\\,(t)\\)-Funktion mit den simulierten \\(\\dot{V}O_{2,Referenz}\\)-Werten\n\n\n\n\n\n3. Schritt - Modellierung von \\(\\dot{V}O_{2EPOC, \\text{fast}}\\,(t)\\)\nIm finalen Modellierungsschritt wurde das EPOC-Teilmodell \\(\\dot{V}O_{2EPOC, \\text{fast}}\\,(t)\\) der bi-exponentiellen Gesamtfunktion (Gleichung 1) unter Berücksichtigung der bereits ermittelten Parameter der \\(\\dot{V}O_{2EPOC, \\text{slow}}\\,(t)\\) und \\(\\dot{V}O_{2,Referenz}\\) mit dem folgenden exponentiellen Modell mit zwei freien Parametern bestimmt:\n\\[\n\\dot{V}O_{2EPOC, fast}\\,(t) = A_{fast} \\cdot e^{-(t / \\tau_{fast})}\n\\tag{5}\\] Die Parametergrenzen für die nichtlineare Regression wurden wie folgt definiert:\\(A_{fast}\\): \\([1.0, 1.05 \\cdot (\\dot{V}O_{2,\\text{max}}\\,(t) - A_{slow} -\\dot{V}O_{2,\\text{Referenz}})]\\) \\(\\;|\\;\\) \\(\\tau_{fast}\\): \\([15, 90]\\)\nDie nach Gleichung 1 modellierte Gesamtfunktion ist in Abbildung 4 dargestellt. Dabei entspricht die grüne Fläche in Abbildung 4 unter der EPOCfast-Modellfunktion der O2-Menge, die für die Resynthese der PCr-Speicher benötigt wird.\n\n\n\n\n\n\nAbbildung 4: Komponenten der \\(\\dot{V}O_{2EPOC}\\)-Gesamtfunktion: \\(\\dot{V}O_{2EPOC, \\text{fast}}\\), \\(\\dot{V}O_{2EPOC, \\text{slow}}\\) und \\(\\dot{V}O_{2,Referenz}\\)\n\n\n\n\nShiny-App: EPOC-Modellfunktion\nDie folgende Shiny-App demonstriert die EPOC-Modellanpassung sowohl nach dem beschriebenen Drei-Schritt-Verfahren als auch nach einem einschrittigen Verfahren. Sie ermöglicht das Hochladen eigener \\(\\dot{V}O_{2}(t)\\)-Daten, die mittels nichtlinearer Regression an die Modellparameter angepasst werden können.\n#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| viewerHeight: 1200\nlibrary(shiny)\nlibrary(plotly)\nlibrary(minpack.lm)\nlibrary(dplyr)\nlibrary(shinyjs)\n\n# Beispieldaten ohne Nachbelastung \nt_data &lt;- c(3505.1, 3506.8, 3508.3, 3509.8, 3511.4, 3513.2, 3514.7, 3516.2, 3517.5, 3518.9, 3520.3, 3521.6, 3523.0, 3524.7, 3526.0, 3527.2, 3528.7, 3530.0, 3531.4, 3532.8, 3534.3, 3535.7, 3537.0, 3538.4, 3539.9, 3541.2, 3542.8, 3544.3, 3545.6, 3547.0, 3548.4, 3550.1, 3551.7, 3553.2, 3554.6, 3556.1, 3557.5, 3560.2, 3561.8, 3564.3, 3566.0, 3567.8, 3569.6, 3571.5, 3573.3, 3575.3, 3577.1, 3579.1, 3581.0, 3582.7, 3584.2, 3585.7, 3587.1, 3588.5, 3589.9, 3591.4, 3593.3, 3594.7, 3596.2, 3597.8, 3599.5, 3601.0, 3602.4, 3603.9, 3605.6, 3607.1, 3608.6, 3610.4, 3612.0, 3613.4, 3616.4, 3618.5, 3620.2, 3621.8, 3623.8, 3626.1, 3628.4, 3630.5, 3632.5, 3635.1, 3637.2, 3639.6, 3641.7, 3643.7, 3648.5, 3652.4, 3654.4, 3656.7, 3658.9, 3660.1, 3662.3, 3664.6, 3667.2, 3669.5, 3671.4, 3673.6, 3675.5, 3677.1, 3679.0, 3681.0, 3683.0, 3685.0, 3687.1, 3689.0, 3691.1, 3692.9, 3695.6, 3697.2, 3699.4, 3701.8, 3704.0, 3706.0, 3708.1, 3709.9, 3711.8, 3715.0, 3717.5, 3719.6, 3721.7, 3724.0, 3726.2, 3728.2, 3730.1, 3732.0, 3734.3, 3736.0, 3738.4, 3739.2, 3741.1, 3743.1, 3745.4, 3746.5, 3748.7, 3750.9, 3753.1, 3755.3, 3757.6, 3762.7, 3765.6, 3768.1, 3770.2, 3772.4, 3774.8, 3777.5, 3779.9, 3782.3, 3785.3, 3787.7, 3789.8, 3792.2, 3794.9, 3796.5, 3798.2, 3800.6, 3802.4, 3805.3, 3808.0, 3810.9, 3813.0, 3815.1, 3818.0, 3820.4, 3822.3, 3824.5, 3826.6, 3829.8, 3833.1, 3835.3, 3838.1, 3840.1, 3844.9, 3847.1, 3848.5, 3850.0, 3855.3, 3859.2, 3861.9, 3863.6, 3865.6, 3867.8, 3869.8, 3872.0, 3874.4, 3876.1, 3878.4, 3881.1, 3882.9, 3884.9, 3886.3, 3888.9, 3890.6, 3892.8, 3895.1, 3897.1, 3898.8, 3900.7, 3903.3, 3905.3, 3907.7, 3910.3, 3913.8, 3916.9, 3919.2, 3921.5, 3923.6, 3926.4, 3928.3, 3930.3, 3932.2, 3934.5, 3936.9, 3940.6, 3942.8, 3944.4, 3946.6, 3948.7, 3950.6, 3954.0, 3956.5, 3960.8, 3962.3, 3964.1, 3966.5, 3969.3, 3971.7, 3975.9, 3977.9, 3982.9, 3985.3, 3987.5, 3990.2, 3992.7, 3995.5, 3997.9, 4000.1, 4004.3, 4006.5, 4009.6, 4012.7, 4015.5, 4017.9, 4020.0, 4024.2, 4026.1, 4028.8, 4031.2, 4033.7, 4035.6, 4037.6, 4041.3, 4044.9, 4047.2, 4049.9, 4054.3, 4057.3, 4060.2, 4062.4, 4065.5, 4068.0, 4070.5, 4072.6, 4074.5, 4076.4, 4078.1, 4080.3, 4082.8, 4084.9)\nVO2_data &lt;- c(4.3916, 4.33868, 4.29972, 4.26048, 4.25328, 4.22856, 4.18768, 4.16656, 4.118, 4.06268, 4.00452, 3.9486, 3.85204, 3.81448, 3.74268, 3.67572, 3.61052, 3.5468, 3.47268, 3.37056, 3.25912, 3.20024, 3.17932, 3.13008, 3.08712, 2.97636, 2.95052, 2.891, 2.82488, 2.72496, 2.6324, 2.55344, 2.45564, 2.38944, 2.32268, 2.2388, 2.16588, 2.09852, 1.99972, 1.9584, 1.87604, 1.81076, 1.74984, 1.70644, 1.66456, 1.64564, 1.59204, 1.53048, 1.47084, 1.4078, 1.40632, 1.34116, 1.29948, 1.26596, 1.23048, 1.22116, 1.19188, 1.19668, 1.16332, 1.153, 1.15444, 1.14004, 1.14976, 1.15704, 1.15192, 1.15128, 1.14088, 1.1228, 1.11288, 1.10284, 1.07976, 1.07524, 1.0516, 1.0596, 1.0478, 1.03064, 1.03404, 1.01436, 1.01996, 1.02592, 0.99788, 1.00092, 0.96684, 0.98036, 0.96396, 0.96056, 0.94256, 0.93244, 0.92228, 0.9068, 0.90336, 0.88984, 0.87968, 0.88288, 0.85096, 0.84, 0.83584, 0.83428, 0.82228, 0.82996, 0.8382, 0.831, 0.86264, 0.83748, 0.83664, 0.8596, 0.8622, 0.86216, 0.85472, 0.85588, 0.8374, 0.84796, 0.84512, 0.85952, 0.84476, 0.8158, 0.8146, 0.80048, 0.77164, 0.7736, 0.76624, 0.77088, 0.77992, 0.80724, 0.80412, 0.80112, 0.8068, 0.78476, 0.79444, 0.79072, 0.78772, 0.79112, 0.79316, 0.79112, 0.78536, 0.7758, 0.76944, 0.77496, 0.76204, 0.7836, 0.79964, 0.81584, 0.85324, 0.85488, 0.89108, 0.904, 0.89116, 0.87828, 0.86268, 0.8416, 0.84192, 0.83324, 0.8332, 0.83228, 0.83992, 0.8094, 0.79928, 0.80512, 0.811, 0.82524, 0.82652, 0.8246, 0.80908, 0.80036, 0.80152, 0.81324, 0.79372, 0.76376, 0.78108, 0.76332, 0.75032, 0.78964, 0.78632, 0.78452, 0.78252, 0.77932, 0.78952, 0.78984, 0.7888, 0.77604, 0.79476, 0.8106, 0.79136, 0.76844, 0.73712, 0.7374, 0.74148, 0.75156, 0.74932, 0.7288, 0.72612, 0.75984, 0.76316, 0.76744, 0.76004, 0.75084, 0.70948, 0.70316, 0.68816, 0.70184, 0.6916, 0.681, 0.67276, 0.66776, 0.66792, 0.65952, 0.64368, 0.67064, 0.67144, 0.68348, 0.67592, 0.65776, 0.63996, 0.64432, 0.6382, 0.62112, 0.58896, 0.6054, 0.57796, 0.58432, 0.59236, 0.60632, 0.62372, 0.63128, 0.63308, 0.6444, 0.6382, 0.64336, 0.64684, 0.65508, 0.66076, 0.63596, 0.60768, 0.62748, 0.62472, 0.6284, 0.64236, 0.66068, 0.65004, 0.67312, 0.67836, 0.69416, 0.66368, 0.65028, 0.629, 0.62796, 0.60816, 0.61548, 0.61224, 0.62336, 0.61552, 0.62804, 0.63852, 0.64872, 0.641, 0.633, 0.64456, 0.66328, 0.6502, 0.65676, 0.66388, 0.6542, 0.63828, 0.64624, 0.63272, 0.65072, 0.64964)\n\n# Beispieldaten mit 50 Watt Nachbelastung \nt_data_50W &lt;- c(2552.6, 2554.0, 2555.6, 2557.1, 2558.7, 2560.3, 2562.0, 2563.7, 2565.4, 2567.0, 2568.6, 2570.0, 2571.5, 2572.8, 2574.6, 2576.1, 2577.5, 2579.0, 2580.5, 2582.7, 2584.2, 2586.3, 2587.7, 2589.0, 2590.8, 2592.2, 2594.2, 2595.8, 2597.4, 2599.1, 2600.6, 2602.1, 2603.6, 2605.3, 2606.9, 2608.5, 2610.3, 2612.6, 2613.9, 2615.6, 2617.2, 2618.8, 2621.5, 2623.0, 2625.5, 2627.3, 2628.9, 2630.3, 2631.9, 2633.3, 2635.0, 2636.5, 2638.2, 2639.9, 2641.5, 2643.0, 2644.9, 2646.6, 2648.3, 2649.8, 2651.3, 2652.9, 2654.5, 2656.3, 2658.2, 2660.1, 2661.9, 2663.7, 2665.4, 2667.0, 2669.1, 2670.9, 2672.6, 2674.4, 2676.1, 2678.0, 2679.9, 2681.6, 2683.1, 2684.7, 2685.7, 2687.1, 2690.9, 2692.6, 2695.9, 2697.7, 2698.9, 2701.2, 2703.0, 2705.0, 2706.7, 2708.5, 2710.3, 2711.8, 2713.4, 2715.1, 2716.7, 2718.2, 2719.8, 2721.3, 2723.2, 2725.4, 2727.1, 2729.0, 2730.8, 2732.4, 2733.9, 2735.4, 2737.4, 2739.1, 2741.2, 2743.1, 2746.2, 2747.8, 2749.5, 2751.3, 2753.0, 2755.0, 2757.3, 2759.5, 2761.7, 2763.6, 2765.7, 2767.8, 2769.3, 2770.8, 2772.2, 2774.3, 2776.1, 2777.7, 2779.3, 2781.1, 2783.0, 2786.2, 2787.9, 2789.5, 2791.4, 2793.2, 2795.0, 2796.8, 2798.5, 2800.4, 2802.0, 2804.0, 2805.9, 2807.8, 2809.5, 2812.5, 2814.2, 2816.4, 2818.5, 2821.0, 2822.8, 2824.7, 2826.5, 2828.5, 2830.5, 2831.9, 2833.4, 2835.0, 2836.6, 2838.8, 2840.5, 2842.4, 2844.1, 2846.2, 2848.4, 2851.5, 2853.3, 2855.3, 2858.8, 2861.1, 2863.4, 2865.8, 2868.2, 2870.2, 2872.7, 2875.1, 2877.3, 2879.4, 2883.0, 2884.8, 2887.1, 2888.6, 2891.0, 2893.1, 2895.0, 2896.8, 2898.9, 2900.8, 2903.5, 2905.3, 2907.2, 2909.2, 2911.5, 2913.4, 2915.6, 2917.4, 2919.2, 2921.4, 2923.8, 2925.5, 2927.5, 2929.7, 2932.9, 2935.1, 2937.1, 2939.6, 2941.4, 2943.8, 2945.9, 2948.6, 2950.7, 2952.7, 2956.5, 2958.8, 2961.0, 2962.6, 2964.9, 2966.5, 2967.7, 2969.9, 2971.3, 2973.1, 2975.5, 2977.4, 2979.5, 2981.4, 2983.5, 2985.5, 2988.0, 2990.2, 2992.4, 2994.5, 2998.4, 3000.1, 3002.2, 3004.5, 3007.0, 3008.6, 3010.9, 3013.3, 3015.8, 3017.5, 3019.1, 3021.1, 3023.5, 3025.5, 3027.8, 3029.6, 3030.7, 3033.6, 3035.9, 3038.1, 3040.4, 3042.4, 3046.1, 3048.6, 3050.9, 3053.4, 3055.2, 3057.3, 3059.2, 3061.3, 3063.1, 3065.5, 3067.7, 3069.6, 3071.9, 3074.3, 3076.4, 3078.2, 3080.2, 3082.2, 3084.0, 3086.9, 3089.5, 3092.9, 3095.6, 3098.2, 3100.8, 3103.1, 3106.6, 3108.5, 3110.5, 3113.1, 3115.6, 3121.1, 3124.1, 3127.0, 3129.7, 3132.6, 3134.2, 3136.4, 3138.8, 3141.6, 3144.1, 3146.2, 3149.5, 3152.2, 3154.6, 3157.2, 3159.6)\nVO2_data_50W &lt;- c(4.4001, 4.3817, 4.3121, 4.3409, 4.3439, 4.3299, 4.2480, 4.1318, 4.1017, 4.0326, 3.9826, 3.9325, 3.8651, 3.8096, 3.7446, 3.6772, 3.6132, 3.5336, 3.4854, 3.4446, 3.3776, 3.3045, 3.2331, 3.1704, 3.0984, 3.0216, 2.9686, 2.9386, 2.8810, 2.8061, 2.7353, 2.7127, 2.7239, 2.6456, 2.6377, 2.5957, 2.5540, 2.5138, 2.4619, 2.4145, 2.4251, 2.3901, 2.3788, 2.3462, 2.2943, 2.2786, 2.2648, 2.2418, 2.2427, 2.2392, 2.2386, 2.1912, 2.1595, 2.1360, 2.1111, 2.1224, 2.0777, 2.0514, 2.0310, 1.9780, 1.9727, 1.9440, 1.9551, 1.9516, 1.9462, 1.9169, 1.8937, 1.8818, 1.8560, 1.8333, 1.8018, 1.8064, 1.8136, 1.7820, 1.7528, 1.7488, 1.7494, 1.7520, 1.7599, 1.7941, 1.7951, 1.8142, 1.8182, 1.8387, 1.8880, 1.8747, 1.8848, 1.8750, 1.8730, 1.8576, 1.8532, 1.8552, 1.8566, 1.8779, 1.9174, 1.9636, 1.9640, 1.9728, 1.9767, 2.0114, 1.9866, 2.0298, 2.0401, 2.0414, 2.0417, 2.0099, 2.0261, 1.9837, 1.9544, 1.9402, 1.9313, 1.9273, 1.9265, 1.9295, 1.9441, 1.9727, 1.9943, 2.0044, 1.9720, 1.9654, 1.9225, 1.9068, 1.8688, 1.8623, 1.8394, 1.8563, 1.8187, 1.7995, 1.7750, 1.7498, 1.7746, 1.7715, 1.8122, 1.8389, 1.8352, 1.8090, 1.8296, 1.8238, 1.8328, 1.8290, 1.8123, 1.7960, 1.7923, 1.7896, 1.7622, 1.7592, 1.7674, 1.7858, 1.7950, 1.8137, 1.8496, 1.8495, 1.8664, 1.8851, 1.8865, 1.8747, 1.8502, 1.8631, 1.8322, 1.8341, 1.8650, 1.8490, 1.8762, 1.8531, 1.8437, 1.8368, 1.8438, 1.8350, 1.8540, 1.8645, 1.8486, 1.8179, 1.8006, 1.7843, 1.7765, 1.7372, 1.7319, 1.7322, 1.7202, 1.7160, 1.7033, 1.6818, 1.6498, 1.6551, 1.6361, 1.6277, 1.6271, 1.6044, 1.6204, 1.6176, 1.5965, 1.6116, 1.5948, 1.5813, 1.6099, 1.6333, 1.6588, 1.6799, 1.6902, 1.6858, 1.6819, 1.6689, 1.6550, 1.6356, 1.6488, 1.6722, 1.6864, 1.6533, 1.6580, 1.6782, 1.6916, 1.6921, 1.6927, 1.6946, 1.7046, 1.7356, 1.6985, 1.7132, 1.7104, 1.6868, 1.6894, 1.6880, 1.6834, 1.6632, 1.6246, 1.6189, 1.6194, 1.6530, 1.6906, 1.6982, 1.6821, 1.6484, 1.7026, 1.7012, 1.6998, 1.6902, 1.6894, 1.6715, 1.5961, 1.6080, 1.5906, 1.5955, 1.5864, 1.6033, 1.5882, 1.5746, 1.5551, 1.5417, 1.5668, 1.6209, 1.6475, 1.6627, 1.6290, 1.6070, 1.5852, 1.5877, 1.6354, 1.5954, 1.5910, 1.5767, 1.5835, 1.6019, 1.6368, 1.6969, 1.6874, 1.6751, 1.6753, 1.6987, 1.6867, 1.6964, 1.7220, 1.7142, 1.7196, 1.7078, 1.6907, 1.6628, 1.6343, 1.6318, 1.6129, 1.6256, 1.6123, 1.6096, 1.6335, 1.6262, 1.6195, 1.6204, 1.5709, 1.5486, 1.5559, 1.5600, 1.5710, 1.5819, 1.5609, 1.5808, 1.5985, 1.5951, 1.6267, 1.6258, 1.5771, 1.5974, 1.6163, 1.6230, 1.6052)\n\n# Normalisierung der t_data Werte auf 0\nt_data &lt;- t_data - t_data[1]\nt_data_50W &lt;- t_data_50W - t_data_50W[1]\n\n# Modellfunktion\nmodel_function &lt;- function(t_s, A, TauA, B, TauB, C, t_delay) {\n  A * exp(-(t_s - t_delay) / TauA) + B * exp(-(t_s - t_delay) / TauB) + C\n}\n\n# UI\nui &lt;- fluidPage(\n  useShinyjs(),\n  tags$head(\n    tags$style(HTML(\"\n      .reduced-margin { margin-bottom: 5px !important; }\n      .radio-buttons-compact { margin-top: -20px; }\n    \"))\n  ),\n  titlePanel(\"EPOC-Modellfunktion\"),\n  fluidRow(\n    column(3,\n           style = \"height: 90vh; overflow-y: auto;\",\n           tags$h4(tags$strong(\"Modellparameter:\")),\n           sliderInput(\"A\", \"A\", min = 0.0, max = 6, value = 2.2, step = 0.01),\n           sliderInput(\"TauA\", \"TauA\", min = 5, max = 90, value = 35, step = 0.10),\n           sliderInput(\"B\", \"B\", min = 0.0, max = 5, value = 0.8, step = 0.01),\n           sliderInput(\"TauB\", \"TauB\", min = 0.0, max = 1800, value = 180, step = 0.10),\n           sliderInput(\"C\", \"C\", min = 0.0, max = 3.0, value = 0.30, step = 0.01),\n           sliderInput(\"O2_Store\", \"O2-Speicher [l]\", min = 0, max = 1, value = 0.4, step = 0.01),\n           sliderInput(\"t_delay\", \"Zeitverzögerung [s]\", min = 0, max = 300, value = 0, step = 1),\n           sliderInput(\"VO2_Ruhe\", \"VO2 Ruhe [l · min^-1]\", min = 0.0, max = 1.0, value = 0.3, step = 0.001),\n           sliderInput(\"VO2_Referenz\", \"VO2 Referenz (50 Watt) [l · min^-1]\", min = 0.0, max = 2.0, value = 1.0, step = 0.001),\n           br(), \n           tags$h4(tags$strong(\"Beispieldaten einfügen:\")),\n           actionButton(\"show_data_ohne\", \"ohne Nachbelastung\"),\n           br(), \n           actionButton(\"show_data_50W\", \"50 Watt Nachbelastung\"),\n           br(), br(),\n           fileInput(\"file_upload\", \"CSV-Datei hochladen\", accept = \".csv\"),\n           tags$h4(tags$strong(\"Modelanpassung:\")),\n           actionButton(\"fit_all\", \"nlsLM - Fit\"),\n           tags$h4(class = \"reduced-margin\", \"Optionen:\"),\n           div(class = \"radio-buttons-compact\",\n               radioButtons(\"fit_mit\", \"\", \n                            choices = c(\"mit VO2 Ruhe\" = \"ruhe\", \"mit VO2 Referenz\" = \"referenz\"),\n                            selected = \"referenz\")\n           ),\n           div(class = \"radio-buttons-compact\",\n               radioButtons(\"fit_steps\", \"\", \n                            choices = c(\"3 Schritte\" = \"three_steps\", \"1 Schritt\" = \"one_step\"),\n                            selected = \"three_steps\")\n           ),\n           h4(\"Schrittweise:\"),\n           actionButton(\"fit_tau\", \"1. Fit: Tau\"), br(),\n           actionButton(\"fit_slow\", \"2. Fit: EPOC Slow\"), br(),\n           actionButton(\"fit_full\", \"3. Fit: EPOC Fast\"),\n           br(), br(),\n           sliderInput(\"ruhe_sim_range\", \"Zeitraum der simulierten Ruhewerte [s]:\",\n                       min = 1200, max = 7200, value = c(3600, 4200), step = 100),\n           actionButton(\"toggle_view\", \"Ruhe_sim anzeigen\"),\n           br(), br(),\n           tags$h4(tags$strong(\"Berechnung - Ruheumsatz:\")),\n           radioButtons(\"geschlecht\", \"Geschlecht:\", choices = c(\"Männlich\", \"Weiblich\")),\n           sliderInput(\"koerpermasse\", \"Körpermasse [kg]:\", min = 40, max = 150, value = 90),\n           sliderInput(\"koerperlaenge\", \"Körperlänge [cm]:\", min = 140, max = 220, value = 193),\n           sliderInput(\"alter\", \"Alter [Jahre]:\", min = 18, max = 100, value = 27),\n           sliderInput(\"rq\", \"RQ:\", min = 0.7, max = 1.0, value = 0.77, step = 0.01),\n           actionButton(\"berechne_vo2_ruhe\", \"VO2 Ruhe berechnen\")\n    ),\n    column(8,\n           fluidRow(\n             column(12, plotlyOutput(\"plot\"))\n           ),\n           fluidRow(\n             column(12, htmlOutput(\"instructions\"))\n           )\n    )\n  )\n)\n\nserver &lt;- function(input, output, session) {\n  show_data &lt;- reactiveVal(FALSE)\n  current_data &lt;- reactiveVal(NULL)\n  uploaded_data &lt;- reactiveVal(NULL)\n  tau_estimate &lt;- reactiveVal(NULL)\n  slow_estimates &lt;- reactiveVal(NULL)\n  show_full_view &lt;- reactiveVal(FALSE)\n  max_ruhe_t_s &lt;- reactiveVal(NULL)\n  ruhe_sim &lt;- reactiveVal(NULL)\n  fit_mode &lt;- reactive({\n    input$fit_steps\n  })\n  \n  observeEvent(input$show_data_ohne, {\n    show_data(TRUE)\n    current_data(data.frame(t_s = t_data, VO2_t = VO2_data))\n  })\n  \n  observeEvent(input$show_data_50W, {\n    show_data(TRUE)\n    current_data(data.frame(t_s = t_data_50W, VO2_t = VO2_data_50W))\n  })\n  \n  observeEvent(input$file_upload, {\n    req(input$file_upload)\n    df &lt;- read.csv(input$file_upload$datapath)\n    \n    if (\"t_s\" %in% names(df) && \"VO2_t\" %in% names(df)) {\n      if (df$t_s[1] != 0.0) {\n        df$t_s &lt;- df$t_s - df$t_s[1]\n      }\n      \n      uploaded_data(df)\n      current_data(df)\n      show_data(TRUE)\n    } else {\n      showModal(modalDialog(\n        title = \"Invalid CSV\",\n        \"Die CSV-Datei muss 't_s' und 'VO2_t' als Spaltennamen beinhalten.\",\n        easyClose = TRUE,\n        footer = NULL\n      ))\n    }\n  })\n  \n  # Funktion zur Berechnung des Grundumsatzes\n  berechne_grundumsatz &lt;- function(geschlecht, masse, laenge, alter) {\n    if (geschlecht == \"Männlich\") {\n      return(66.5 + (13.75 * masse) + (5.003 * laenge) - (6.775 * alter))\n    } else {\n      return(655.1 + (9.563 * masse) + (1.850 * laenge) - (4.676 * alter))\n    }\n  }\n  \n  # Funktion zur Berechnung des RMR\n  berechne_rmr &lt;- function(grundumsatz, rq, geschlecht) {\n    ka &lt;- 19.946  # Annahme für RQ = 0.77, passen Sie dies an, wenn nötig\n    faktor &lt;- if(geschlecht == \"Männlich\") 1.287 else 1.278\n    return((grundumsatz / (24 * 60 * ka)) * 4.1868 * faktor)\n  }\n  \n  # Reaktion auf den Klick des \"VO2,Ruhe berechnen\" Buttons\n  observeEvent(input$berechne_vo2_ruhe, {\n    grundumsatz &lt;- berechne_grundumsatz(\n      input$geschlecht,\n      input$koerpermasse,\n      input$koerperlaenge,\n      input$alter\n    )\n    \n    rmr &lt;- berechne_rmr(grundumsatz, input$rq, input$geschlecht)\n    \n    # Aktualisieren Sie den VO2_Ruhe Slider mit dem berechneten Wert\n    updateSliderInput(session, \"VO2_Ruhe\", value = round(rmr, 3))\n    \n    # Zeigen Sie eine Benachrichtigung mit dem berechneten Wert an\n    showNotification(paste(\"Berechnete Ruhesauerstoffaufnahme:\", round(rmr, 3), \"l/min\"), type = \"message\")\n  })\n  \n  observeEvent(input$fit_tau, {\n    if (fit_mode() == \"three_steps\" && show_data()) {\n      Beispieldaten &lt;- current_data()\n      if (is.null(Beispieldaten)) return(p)\n      \n      t_delay &lt;- isolate(input$t_delay)\n      C &lt;- isolate(input$VO2_Ruhe)\n      \n      # Datenfilterung und Zeitverschiebung\n      filtered_data &lt;- Beispieldaten %&gt;%\n        filter(t_s &gt;= t_delay) %&gt;%\n        mutate(t_s = t_s - t_delay)\n      \n      model_tau &lt;- nlsLM(VO2_t ~ x * exp(-t_s/Tau) + C, \n                         data = filtered_data,\n                         start = list(x = max(filtered_data$VO2_t), Tau = 45, C = C),\n                         lower = c(x = 0, Tau = 10, C = 0),\n                         upper = c(x = Inf, Tau = 600, C = Inf),\n                         control = nls.lm.control(maxiter = 1024, ftol = 1e-10, ptol = 1e-10))\n      \n      tau_estimate(round(as.list(coef(model_tau))$Tau, 1))\n      \n      updateSliderInput(session, \"TauA\", value = tau_estimate())\n      updateSliderInput(session, \"A\", value = as.list(coef(model_tau))$x)\n      updateSliderInput(session, \"C\", value = as.list(coef(model_tau))$C)\n      \n      # Set B and TauB sliders to 0\n      updateSliderInput(session, \"B\", value = 0)\n      updateSliderInput(session, \"TauB\", value = 0)\n    }\n  })\n  \n  observeEvent(input$fit_slow, {\n    if (fit_mode() == \"three_steps\") {\n      req(tau_estimate())\n      if (show_data()) {\n        Beispieldaten &lt;- current_data()\n        \n        VO2_Basis &lt;- if(input$fit_mit == \"ruhe\") input$VO2_Ruhe else input$VO2_Referenz\n        t_delay &lt;- isolate(input$t_delay)\n        max_VO2 &lt;- max(Beispieldaten$VO2_t) * 1.1\n        \n        tau2 &lt;- 2 * tau_estimate()\n        tau8 &lt;- 8 * tau_estimate()\n        last_data_point &lt;- max(Beispieldaten$t_s)\n        \n        actual_data_count &lt;- sum(Beispieldaten$t_s &gt;= tau2)\n        \n        ruhe_sim_start &lt;- input$ruhe_sim_range[1]\n        ruhe_sim_end &lt;- input$ruhe_sim_range[2]\n        \n        simulated_time_points &lt;- seq(ruhe_sim_start, ruhe_sim_end, length.out = actual_data_count)\n        \n        ruhe_sim_data &lt;- data.frame(\n          t_s = simulated_time_points,\n          VO2_t = rep(VO2_Basis, actual_data_count)  # Hier VO2_Basis statt VO2_Ruhe verwenden\n        )\n        \n        ruhe_sim(ruhe_sim_data)\n        max_ruhe_t_s(max(ruhe_sim_data$t_s))\n        \n        Beispieldaten_extended &lt;- rbind(Beispieldaten, ruhe_sim_data)\n        \n        filtered_data &lt;- Beispieldaten_extended %&gt;% \n          filter(t_s &gt;= t_delay) %&gt;%\n          mutate(t_s = t_s - t_delay) %&gt;%\n          filter(t_s &gt;= tau2)\n        \n        model_slow &lt;- nlsLM(VO2_t ~ B * exp(-t_s/TauB) + VO2_Basis,\n                            data = filtered_data,\n                            start = list(B = 0.5, TauB = 540),\n                            lower = c(B = 0.1, TauB = 90),\n                            upper = c(B = (max_VO2 * 0.5), TauB = 3600),\n                            control = nls.lm.control(maxiter = 1024, ftol = 1e-10, ptol = 1e-10))\n        \n        slow_estimates_list &lt;- list(\n          B = as.numeric(coef(model_slow)[\"B\"]),\n          TauB = round(as.numeric(coef(model_slow)[\"TauB\"]), 1),\n          C = VO2_Basis\n        )\n        \n        slow_estimates(slow_estimates_list)\n        \n        updateSliderInput(session, \"B\", value = slow_estimates_list$B)\n        updateSliderInput(session, \"TauB\", value = slow_estimates_list$TauB)\n        updateSliderInput(session, \"C\", value = VO2_Basis)  # Hier VO2_Basis statt VO2_Ruhe verwenden\n      }\n    }\n  })\n  \n  observeEvent(input$fit_full, {\n    if (fit_mode() == \"three_steps\") {\n      req(tau_estimate(), slow_estimates())\n      if (show_data()) {\n        Beispieldaten &lt;- current_data()\n        \n        slow_est &lt;- slow_estimates()\n        t_delay &lt;- isolate(input$t_delay)\n        ruhe_sim_start &lt;- input$ruhe_sim_range[1]\n        \n        if (is.null(tau_estimate()) || is.null(slow_est)) {\n          showNotification(\"Einige Schätzwerte fehlen. Bitte führen Sie Schritt 1 und 2 erneut aus.\", type = \"error\")\n          return()\n        }\n        \n        start_params &lt;- list(\n          A = isolate(input$A),\n          TauA = tau_estimate()\n        )\n        \n        # Definiere eine Funktion mit festen Werten für B, TauB und C\n        model_func &lt;- function(t_s, A, TauA) {\n          A * exp(-t_s/TauA) + slow_est$B * exp(-t_s/slow_est$TauB) + slow_est$C\n        }\n        \n        # Berechne 2tau\n        tau2 &lt;- 2 * tau_estimate()\n        \n        # Datenfilterung und Zeitverschiebung\n        Beispieldaten_gefiltert &lt;- Beispieldaten %&gt;%\n          filter(t_s &gt;= t_delay) %&gt;%\n          mutate(t_s = t_s - t_delay) %&gt;%\n          filter(t_s &lt; (ruhe_sim_start - t_delay))  # Entferne simulierte Ruhewerte\n        \n        # Erstelle Gewichte basierend auf t_s\n        weights &lt;- ifelse(Beispieldaten_gefiltert$t_s &lt;= tau2, 1, 1)\n        \n        tryCatch({\n          model_full &lt;- nlsLM(VO2_t ~ model_func(t_s, A, TauA),\n                              data = Beispieldaten_gefiltert,\n                              start = list(A = 2.5, TauA = 42),\n                              lower = c(A = 1.0, TauA = 15),\n                              upper = c(A = 4.0, TauA = 90),\n                              weights = weights,\n                              control = nls.lm.control(maxiter = 1024, ftol = 1e-10, ptol = 1e-10))\n          \n          full_estimates &lt;- list(\n            A = as.numeric(coef(model_full)[\"A\"]),\n            TauA = round(as.numeric(coef(model_full)[\"TauA\"]), 1)\n          )\n          \n          updateSliderInput(session, \"A\", value = full_estimates$A)\n          updateSliderInput(session, \"TauA\", value = full_estimates$TauA)\n          \n          showNotification(\"Fitting erfolgreich abgeschlossen\", type = \"message\")\n        }, error = function(e) {\n          showNotification(paste(\"Fehler beim Fitting:\", e$message), type = \"error\")\n        })\n      }\n    }\n  })\n  \n  observeEvent(input$toggle_view, {\n    show_full_view(!show_full_view())\n  })\n  \n  observeEvent(input$fit_all, {\n    if (show_data()) {\n      if (fit_mode() == \"three_steps\") {\n        # Trigger fit_tau\n        shinyjs::click(\"fit_tau\")\n        \n        # Warte kurz, bevor der nächste Fit ausgeführt wird\n        Sys.sleep(0.5)\n        \n        # Trigger fit_slow\n        shinyjs::click(\"fit_slow\")\n        \n        # Warte kurz, bevor der nächste Fit ausgeführt wird\n        Sys.sleep(0.5)\n        \n        # Trigger fit_full\n        shinyjs::click(\"fit_full\")\n        \n        showNotification(\"Alle Fits wurden nacheinander durchgeführt.\", type = \"message\")\n      } else if (fit_mode() == \"one_step\") {\n        Beispieldaten &lt;- current_data()\n        \n        t_delay &lt;- isolate(input$t_delay)\n        C &lt;- if(input$fit_mit == \"ruhe\") isolate(input$VO2_Ruhe) else isolate(input$VO2_Referenz)\n        \n        best_fit &lt;- NULL\n        best_rss &lt;- Inf\n        \n        withProgress(message = 'Fitting in progress', value = 0, {\n          for (i in 1:100) {\n            # Randomisierte Startwerte\n            A_start &lt;- runif(1, 1.5, 6)\n            TauA_start &lt;- runif(1, 20, 90)\n            B_start &lt;- runif(1, 0.3, 1.0)\n            TauB_start &lt;- runif(1, 300, 900)\n            \n            start_values &lt;- list(A = A_start, TauA = TauA_start, B = B_start, TauB = TauB_start)\n            \n            model_equation &lt;- VO2_t ~ A * exp(-(t_s - t_delay) / TauA) + B * exp(-(t_s - t_delay) / TauB) + C\n            \n            fit &lt;- try(nlsLM(model_equation,\n                             data = Beispieldaten,\n                             start = start_values,\n                             lower = c(A = 1.5, TauA = 20, B = 0.3, TauB = 90),\n                             upper = c(A = 6, TauA = 90, B = 3.0, TauB = 900),\n                             control = nls.control(maxiter = 1024)), silent = TRUE)\n            \n            if (!inherits(fit, \"try-error\")) {\n              rss &lt;- sum(residuals(fit)^2)\n              if (rss &lt; best_rss) {\n                best_rss &lt;- rss\n                best_fit &lt;- fit\n              }\n            }\n            \n            incProgress(1/100, detail = paste(\"Iteration\", i))\n          }\n        })\n        \n        if (!is.null(best_fit)) {\n          params &lt;- as.list(coef(best_fit))\n          updateSliderInput(session, \"A\", value = params$A)\n          updateSliderInput(session, \"TauA\", value = params$TauA)\n          updateSliderInput(session, \"B\", value = params$B)\n          updateSliderInput(session, \"TauB\", value = params$TauB)\n          \n          showNotification(\"Fitting completed successfully!\", type = \"message\")\n        } else {\n          showModal(modalDialog(\n            title = \"nlsLM fehlgeschlagen\",\n            \"Die nicht-lineare Regression mittels Levenberg-Marquardt-Algorithmus konnte nicht erfolgreich durchgeführt werden.\",\n            easyClose = TRUE,\n            footer = NULL\n          ))\n        }\n      }\n    } else {\n      showNotification(\"Bitte fügen Sie zuerst Daten ein.\", type = \"warning\")\n    }\n  })\n  \n  output$plot &lt;- renderPlotly({\n    A &lt;- input$A\n    TauA &lt;- input$TauA\n    B &lt;- input$B\n    TauB &lt;- input$TauB\n    C &lt;- input$C\n    O2_Store &lt;- input$O2_Store\n    t_delay &lt;- input$t_delay\n    VO2_Basis &lt;- if(input$fit_mit == \"ruhe\") input$VO2_Ruhe else input$VO2_Referenz\n    \n    # Bestimmen des x-Achsen-Bereichs\n    x_range &lt;- if (show_full_view()) {\n      c(0, max_ruhe_t_s())\n    } else {\n      max_x_value &lt;- max(600, if (!is.null(current_data())) max(current_data()$t_s) else 600)\n      c(0, max_x_value * 1.1)  # Erhöhung um 10%\n    }\n    \n    max_x &lt;- max(max_ruhe_t_s(), 600 + 0.5 * TauB, max(t_data))\n    \n    Beispieldaten &lt;- current_data()\n    \n    if (!is.null(current_data())) {\n      max_y &lt;- max((A + B + C) * 1.1, max(current_data()$VO2_t) * 1.1)\n    } else {\n      max_y &lt;- (A + B + C) * 1.1\n    }\n    \n    t_s &lt;- seq(0, max_x, by = 1)\n    \n    model_values &lt;- A * exp(-t_s / TauA) + B * exp(-t_s / TauB) + C\n    model_fast &lt;- A * exp(-t_s / TauA)\n    model_slow &lt;- B * exp(-t_s / TauB)\n    model_ruhe &lt;- rep(C, length(t_s))\n    \n    model_fast_func &lt;- function(t_s) A * exp(-t_s / TauA)\n    integrated_model_fast &lt;- integrate(model_fast_func, lower = 0, upper = max(t_s))\n    \n    VO2_fast &lt;- integrated_model_fast$value / 60\n    CE_max &lt;- 21.1307796\n    WPCR &lt;- VO2_fast * CE_max\n    WPCR_corrected &lt;- ifelse(VO2_fast &lt; O2_Store, 0, (VO2_fast * CE_max) - (O2_Store * CE_max))\n    \n    cumulative_area &lt;- cumsum(A * exp(-t_s / TauA)) * diff(t_s)[1]\n    O2_Store_index &lt;- which.min(abs(cumulative_area - O2_Store * 60))\n    O2_Store_x &lt;- t_s[O2_Store_index]\n    \n    last_data_point &lt;- if (!is.null(current_data())) max(current_data()$t_s) else 0\n    \n    eq_text &lt;- sprintf(\"V̇O₂ (t) = %.2f * e&lt;sup&gt;-t / %.1f&lt;/sup&gt; + %.2f * e&lt;sup&gt;-t / %.1f&lt;/sup&gt; + %.2f\", \n                       A, TauA, B, TauB, C)\n    \n    p &lt;- plot_ly() %&gt;%\n      add_trace(x = ~t_s, y = ~model_values, type = 'scatter', mode = 'lines', \n                name = 'Modellfunktion', line = list(color = '#EF6F6A')) %&gt;%\n      add_trace(x = ~t_s, y = ~model_fast, type = 'scatter', mode = 'lines', \n                name = 'EPOC&lt;sub&gt;fast&lt;/sub&gt;', line = list(color = '#42BA97')) %&gt;%\n      add_trace(x = ~t_s, y = ~model_slow, type = 'scatter', mode = 'lines', \n                name = 'EPOC&lt;sub&gt;slow&lt;/sub&gt;', line = list(color = '#BB7693')) %&gt;%\n      add_trace(x = ~t_s, y = ~model_ruhe, type = 'scatter', mode = 'lines', \n                name = 'C', line = list(color = '#1CADE4')) %&gt;%\n      add_ribbons(x = ~t_s, ymin = 0, ymax = ~model_fast, \n                  name = 'EPOC&lt;sub&gt;fast,Integriert&lt;/sub&gt;', fillcolor = 'rgba(66,186,151,0.5)', \n                  line = list(color = \"rgba(0,0,0,0)\")) %&gt;%\n      add_ribbons(x = ~t_s, ymin = 0, ymax = ~model_fast, \n                  data = data.frame(t_s = t_s[1:O2_Store_index], model_fast = model_fast[1:O2_Store_index]),\n                  fillcolor = 'rgba(0,131,143,0.3)', line = list(color = \"rgba(0,0,0,0)\", dash = \"dash\"), \n                  name = 'O&lt;sub&gt;2&lt;/sub&gt;-Speicher') %&gt;%\n      add_trace(x = c(O2_Store_x, O2_Store_x), y = c(0, max(model_fast[O2_Store_index])),\n                type = 'scatter', mode = 'lines', \n                line = list(color = \"#00838F\", width = 1, dash = \"dash\"),\n                name = 'O2 Store Linie', showlegend = FALSE) %&gt;%\n      add_segments(x = 2 * TauA, xend = 2 * TauA, y = 0, yend = max_y,\n                   line = list(color = \"gray\", width = 0.5, dash = \"dash\"),\n                   showlegend = FALSE) %&gt;%\n      layout(title = \"EPOC-Modellfunktion\",\n             margin = list(t = 40),\n             xaxis = list(title = \"Zeit [s]\", range = x_range, autorange = FALSE),\n             yaxis = list(title = \"V̇O&lt;sub&gt;2&lt;/sub&gt;(t) [l·min&lt;sup&gt;-1&lt;/sup&gt;]\", range = c(0, max_y)),\n             legend = list(\n               x = 0.70,\n               y = 0.99,\n               xanchor = \"left\",\n               yanchor = \"top\",\n               bgcolor = \"rgba(255, 255, 255, 0.3)\",\n               bordercolor = \"rgba(0,0,0,0)\",\n               borderwidth = 0\n             ),\n             annotations = list(\n               list(\n                 x = 2 * TauA, y = max_y * 0.70, text = sprintf(\"2tau: %.1f s\", 2 * TauA), showarrow = FALSE, xanchor = \"left\", yanchor = \"bottom\",\n                 textangle = -90, font = list(size = 11, color = \"darkgrey\")\n               ),\n               list(\n                 x = max_x * 0.03, \n                 y = max_y * 0.80,\n                 text = paste(\"W&lt;sub&gt;PCR&lt;/sub&gt;:\", round(WPCR, 2), \"kJ\"),\n                 showarrow = FALSE,\n                 xanchor = 'left',\n                 yanchor = 'bottom',\n                 font = list(\n                   size = 12,\n                   color = \"black\"\n                 )\n               ),\n               list(\n                 x = max_x * 0.03, \n                 y = max_y * 0.70,\n                 text = paste(\"W&lt;sub&gt;PCR, korrigiert&lt;/sub&gt;:\", round(WPCR_corrected, 2), \"kJ\"),\n                 showarrow = FALSE,\n                 xanchor = 'left',\n                 yanchor = 'bottom',\n                 font = list(\n                   size = 12,\n                   color = \"black\"\n                 )\n               ),\n               list(\n                 x = max_x * 0.03, \n                 y = max_y * 0.90,\n                 text = eq_text,\n                 showarrow = FALSE,\n                 xanchor = 'left',\n                 yanchor = 'bottom',\n                 font = list(\n                   size = 12,\n                   color = \"black\"\n                 )\n               )\n             ))\n    \n    if (show_data()) {\n      Beispieldaten &lt;- current_data()\n      if (!is.null(Beispieldaten)) {\n        ruhe_sim_start &lt;- input$ruhe_sim_range[1]\n        \n        # Datenfilterung und Zeitverschiebung\n        Beispieldaten &lt;- Beispieldaten %&gt;%\n          filter(t_s &gt;= t_delay) %&gt;%\n          mutate(t_s = t_s - t_delay) %&gt;%\n          filter(t_s &lt; (ruhe_sim_start - t_delay))  # Entferne simulierte Ruhewerte\n        \n        last_data_point &lt;- max(Beispieldaten$t_s)\n        \n        # Füge last_data_point Linie und Annotation hinzu\n        p &lt;- p %&gt;% add_segments(x = last_data_point, xend = last_data_point, y = 0, yend = max_y,\n                                line = list(color = \"gray\", width = 0.5, dash = \"dash\"),\n                                showlegend = FALSE)\n        \n        p$x$layout$annotations &lt;- c(p$x$layout$annotations,\n                                    list(\n                                      list(\n                                        x = last_data_point, y = max_y * 0.70, text = sprintf(\"t&lt;sub&gt;data_last&lt;/sub&gt;: %.1f s\", last_data_point), showarrow = FALSE, xanchor = \"left\", yanchor = \"bottom\",\n                                        textangle = -90, font = list(size = 11, color = \"darkgrey\")\n                                      )\n                                    ))\n        \n        model_values_at_data &lt;- A * exp(-Beispieldaten$t_s / TauA) + B * exp(-Beispieldaten$t_s / TauB) + C\n        \n        data_subset &lt;- Beispieldaten\n        \n        ss_res &lt;- sum((data_subset$VO2_t - model_values_at_data)^2, na.rm = TRUE)\n        ss_tot &lt;- sum((data_subset$VO2_t - mean(data_subset$VO2_t, na.rm = TRUE))^2, na.rm = TRUE)\n        r_squared &lt;- 1 - (ss_res / ss_tot)\n        \n        p &lt;- p %&gt;%\n          add_trace(data = Beispieldaten, x = ~t_s, y = ~VO2_t, type = 'scatter', mode = 'markers+lines',\n                    name = 'V̇O&lt;sub&gt;2&lt;/sub&gt;', \n                    marker = list(color = 'rgba(38, 131, 198, 0.9)', size = 5.0),\n                    line = list(color = 'rgba(38, 131, 198, 1.0)', width = 0.65, dash = '4 4'))\n        \n        if (show_full_view()) {\n          ruhe_sim &lt;- data.frame(\n            t_s = seq(input$ruhe_sim_range[1], input$ruhe_sim_range[2], by = 1),\n            VO2_t = rep(VO2_Basis, input$ruhe_sim_range[2] - input$ruhe_sim_range[1] + 1)\n          )\n          \n          p &lt;- p %&gt;%\n            add_trace(data = ruhe_sim, x = ~t_s, y = ~VO2_t, type = 'scatter', mode = 'markers+lines',\n                      name = 'Sim. Ruhewerte', \n                      marker = list(color = '#1CADE4', size = 3.0),\n                      line = list(color = '#1CADE4', width = 0.5, dash = '4 4'))\n        }\n        \n        p$x$layout$annotations &lt;- c(p$x$layout$annotations,\n                                    list(\n                                      list(\n                                        x = max_x * 0.03,\n                                        y = max_y * 0.60,\n                                        text = sprintf(\"R²: %.3f\", r_squared),\n                                        showarrow = FALSE,\n                                        xanchor = 'left',\n                                        yanchor = 'bottom',\n                                        font = list(\n                                          family = \"Arial, sans-serif\",\n                                          size = 12,\n                                          color = \"black\"\n                                        )\n                                      )\n                                    ))\n      }\n    }\n    \n    p\n  })\n  \n  output$instructions &lt;- renderUI({\n    HTML(\n      \"&lt;div style='margin-top: 20px; padding: 10px; background-color: #f0f0f0; border: 1px solid #ddd; border-radius: 5px;'&gt;\n    &lt;h4 style='color: #333;'&gt;&lt;strong&gt;Anleitung - Modellanpassung:&lt;/strong&gt;&lt;/h4&gt;\n    &lt;ol style='color: #555;'&gt;\n      &lt;li&gt;Beispiel-VO2-Daten (mit oder ohne Nachbelastung) einfügen oder eigene VO2-Daten als CSV-Datei hochladen.&lt;/li&gt;\n      &lt;li&gt;Ruhesauerstoffaufnahme (VO2 Ruhe) manuell eingeben oder anhand der Parameter (Geschlecht, Körpermasse, Alter, RQ) berechnen lassen.&lt;/li&gt;\n      &lt;li&gt;Bei Daten ohne Nachbelastung 'Mit VO2 Ruhe' wählen, bei Daten mit Nachbelastung 'VO2 Referenz' wählen und den entsprechenden Referenzwert festlegen.&lt;/li&gt;\n      &lt;li&gt;O2-Speicher festlegen oder auf 0 setzen, falls dieser in der Berechnung nicht berücksichtigt werden soll.&lt;/li&gt;\n      &lt;li&gt;Zeitverzögerung festlegen, um den Startpunkt der Modellanpassung zu bestimmen.&lt;/li&gt;\n      &lt;li&gt;Wählen Sie zwischen 3-Schritt- oder 1-Schritt-Modellanpassung. Bei 3-Schritt-Anpassung den Zeitraum für simulierte Ruhe- bzw. Referenzwerte mit dem Slider einstellen.&lt;/li&gt;\n      &lt;li&gt;Modellanpassung durchführen:&lt;/li&gt;\n      &lt;ul&gt;\n        &lt;li&gt;'Fit: nlsLM' für komplette Anpassung oder&lt;/li&gt;\n        &lt;li&gt;Schrittweise: '1. Fit: Tau', '2. Fit: EPOC Slow', '3. Fit: EPOC Fast'&lt;/li&gt;\n      &lt;/ul&gt;\n      &lt;li&gt;Mit 'Ruhe_sim anzeigen' können simulierte Ruhewerte in der Abbildung ein- oder ausgeblendet werden.&lt;/li&gt;\n      &lt;li&gt;Alternative: Manuelle Anpassung der Modellparameter über die Schieberegler.&lt;/li&gt;\n    &lt;/ol&gt;\n    &lt;/div&gt;\"\n    )\n  })\n}\n\nshinyApp(ui = ui, server = server)\n\n\n\n\n\n\nModellanpassung - Details:\n\n\n\n\n\nA. Dreischritt-Modellanpassung:\n\nSchnelle Komponente (1. Fit: Tau):\n\nVerwendete Funktion: nlsLM\nParameter: x (entspricht A), Tau (entspricht TauA)\nModell: VO2_t ~ x · exp(-t_s/Tau) + C\nGrenzen:\n\nx: 0 bis Inf\nTau: 10 bis 600 s\n\nOptimierung: Minimierung der Residuenquadratsumme (RSS)\n\nLangsame Komponente (2. Fit: EPOC Slow):\n\nVerwendete Funktion: nlsLM\nParameter: B, TauB\nModell: VO2_t ~ B · exp(-t_s/TauB) + VO2_Basis\nGrenzen:\n\nB: 0.1 bis (VO2_max · 0.5) l/min\nTauB: 90 bis 3600 s\n\nProzess:\n\nDatenauswahl: Verwendung der Daten ab 2 · Tau\nErweiterung der Daten mit simulierten Ruhe- oder Referenzwerten:\n\nZeitraum: Festgelegter Bereich der simulierten Werte (Standard: 3600-4200s)\nAnzahl der simulierten Werte: Gleiche Anzahl wie reale Datenpunkte ab dem Zeitpunkt 2 · Tau bis zum Start der simulierten Werte\nWert: Konstant auf VO2_Ruhe oder VO2_Referenz (je nach Auswahl)\n\n\nOptimierung: Minimierung der RSS\n\nVollständige Anpassung (3. Fit: EPOC Fast):\n\nVerwendete Funktion: nlsLM\nParameter: A, TauA\nModell: VO2_t ~ A · exp(-t_s/TauA) + B · exp(-t_s/TauB) + C (B, TauB und C aus vorherigen Modellanpassungen)\nGrenzen:\n\nA: 1.0 bis 4.0 l/min\nTauA: 15 bis 90 s\n\nProzess:\n\nDatenauswahl: Verwendung der Daten bis zum Beginn der simulierten Ruhe- oder Referenzwerte\n\nOptimierung: Minimierung der RSS\n\n\nB. Einschritt-Modellanpassung:\n\nVerwendete Funktion: nlsLM\nParameter: A, TauA, B, TauB\nModell: VO2_t ~ A · exp(-(t_s - t_delay) / TauA) + B · exp(-(t_s - t_delay) / TauB) + C\nGrenzen:\n\nA: 1.5 bis 6.0 l/min\nTauA: 20 bis 90 s\nB: 0.3 bis 3.0 l/min\nTauB: 90 bis 900 s\n\nProzess: 100 Iterationen mit zufälligen Startwerten\nOptimierung: Minimierung der RSS\nKeine Verwendung von simulierten Ruhe- oder Referenzwerten",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Energieumsatzberechnung",
      "Anaerobe- alaktazide Energiekomponente (W~PCr~)"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Energieumsatzberechnung/Anaerobe_alaktazide_Energiebereitstellung.html#berechnung-von-wpcr",
    "href": "Theoretischer_Hintergrund/Energieumsatzberechnung/Anaerobe_alaktazide_Energiebereitstellung.html#berechnung-von-wpcr",
    "title": "Anaerobe- alaktazide Energiekomponente (WPCr)",
    "section": "Berechnung von WPCR",
    "text": "Berechnung von WPCR\nFür die Quantifizierung der EPOC-Sauerstoffmenge EPOCPCr, die der Rephosphorylierung von Phosphokreatin (PCr) zugeordnet wird, erfolgt zunächst die Integration des Funktionsterms der schnellen EPOC-Komponente \\(\\dot{V}O_{2EPOC, \\text{fast}}\\,(t)\\) vom Zeitpunkt des Belastungsendes bzw. dem Start der Nachbelastung (NBStart) bis zum Endzeitpunkt der Nachbelastung (NBEnde), um EPOCfast zu bestimmen (Dunst, 2019).\n\\[\nEPOC_{fast}\\,[l] = \\int\\limits_{NB_{Start}}^{NB_{Ende}}A_{fast} \\cdot e^{-(t / \\tau_{fast})} \\, dt\n\\tag{6}\\]\nUm die tatsächliche O2-Menge zu berechnen, die der Wiederherstellung von PCr zuzuordnen ist, muss der Anteil des von den Muskeln verstoffwechselten O2, der durch die Erschöpfung der körpereigenen O2-Speicher gedeckt wurde, von EPOCfast subtrahiert werden (Beneke et al., 2002; Francescato et al., 2003). Die Rolle der körpereigenen O2-Speicher sowie deren Berechnung wird im folgenden Kapitel beschrieben.\n\\[\nEPOC_{PCr}\\,[l] = EPOC_{fast}\\,[l] - O_{2}\\text{-Speicher}\\,[l]\n\\tag{7}\\]\nDie bestimmte EPOCPCr repräsentiert daher die korrigierte Sauerstoffmenge, die zur Resynthese des bei Belastungsstart gespaltenen PCr benötigt wurde. Die während der Belastung anaerob alaktazid bereitgestellte Energiemenge kann sowohl ohne (WPCr) als auch mit Einbeziehung der körpereigenen O2-Speicher (WPCr,corrected) berechnet werden. In beiden Fällen wird der entsprechende EPOC-Wert (EPOCfast bzw. EPOCPCr) mit dem kalorischen Äquivalent für Kohlenhydrate (kÄKH) von 21.131 kJ pro Liter O2 (Stegemann, 1991, S. 59) multipliziert (Beneke et al., 2002, 2004; Knuttgen, 1970; Roberts & Morton, 1978).\n\\[\nW_{PCr}\\,[kJ] = EPOC_{fast}\\,[l] \\cdot kÄ_{KH}\\,[kJ\\cdot l^{-1}] \\\\\nW_{PCr,corrected}\\,[kJ] = EPOC_{PCr}\\,[l] \\cdot kÄ_{KH}\\,[kJ\\cdot l^{-1}] \\\\\n\\tag{8}\\]",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Energieumsatzberechnung",
      "Anaerobe- alaktazide Energiekomponente (W~PCr~)"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Energieumsatzberechnung/Anaerobe_alaktazide_Energiebereitstellung.html#pulmonaler-o2-speicher-o2sp",
    "href": "Theoretischer_Hintergrund/Energieumsatzberechnung/Anaerobe_alaktazide_Energiebereitstellung.html#pulmonaler-o2-speicher-o2sp",
    "title": "Anaerobe- alaktazide Energiekomponente (WPCr)",
    "section": "Pulmonaler O2-Speicher (O2Sp)",
    "text": "Pulmonaler O2-Speicher (O2Sp)\nDie Änderung des pulmonalen Sauerstoffspeicher (ΔO2Sp) zu Beginn der Belastung kann nach Francescato et al. (2003) aus der Differenz zwischen der Zeitkonstante des am Mund gemessenen Sauerstoffvolumenstroms zum Start der Belastung (τStart) und der Zeitkonstante des auf alveolärer Ebene gemessenen Sauerstoffvolumenstroms (τalveolär) sowie dem netto Steady-State-Sauerstoffvolumenstrom während der Belastung \\(\\dot{V}O_{2,net,SS}\\) geschätzt werden (Francescato et al., 2003). Dafür wurde mit Gleichung 9 und wie im vorherigen Kapitel beschrieben der Sauerstoffvolumenstrom in Abhängigkeit von der Zeit während der Belastung modelliert und \\(\\dot{V}O_{2,net,SS}\\) für jedes Belastungsintervall bestimmt.\n\\[\n\\dot{V}O_{2,\\text{Belastung}}\\,(t) = \\dot{V}O_{2,\\text{Amplitude}} \\cdot \\left(1 - e^{-\\frac{t - TD}{\\tau_{\\text{Start}}}}\\right) + \\dot{V}O_{2,\\text{Start}}\n\\tag{9}\\]\nIn der Studie von Francescato et al. (2003) führten die Probanden auf einem speziellen Widerstandsergometer für die Wadenmuskulatur (M. gastrocnemius) wiederholte Fußstreckungen bei gestrecktem Knie und verschiedenen Intensitäten durch, wobei für jede Belastung die körpereigenen Sauerstoffspeicher berechnet wurden. Da der pulmonale Sauerstoffspeicher in der beschriebenen Studie basierend auf dem Anteil der aktiven Muskelmasse bestimmt wurde, wird in der vorliegenden Berechnung der Sauerstoffvolumenstrom ebenfalls mit dem Anteil der aktiven Muskelmasse verrechnet, deren Berechnung im folgenden Abschnitt beschrieben wird.\n\\[\n\\dot{V}O_{2,net, aktiv, SS}\\,[l \\cdot min^{-1}] = \\dot{V}O_{2,net, SS}\\,[l \\cdot min^{-1}] \\cdot \\frac{Muskelmasse_{aktiv}\\,[kg]}{Körpermasse\\,[kg]}\n\\tag{10}\\]\nDie alveoläre Zeitkonstante τalveolär wurde von Cautero et al. (2002) beim Radfahren mit 34.3s festegelegt und wurde für die folgenden Berechnungen als feste Konstante verwendet. Anschließend konnte ΔO2Sp mit folgender Gleichung bestimmt werden:\n\\[\n\\Delta O_{2}S_{p}\\,[l] = \\dot{V}O_{2,net, aktiv, SS}\\,[l \\cdot min^{-1}] \\cdot (\\tau_{Start}\\,[min] - \\tau_{alveolär}\\,[min])\n\\] In der vorliegenden Untersuchung musste eine Anpassung der beschriebenen Berechnungen nach Francescato et al. (2003) vorgenommen werden, da die Belastungen nicht aus dem Ruhezustand, sondern nach einer Vorbelastung von 50 Watt starteten. Diese Vorbelastung führte zu einem erhöhten Sauerstoffvolumenstrom, wodurch \\(\\dot{V}O_{2,Start}\\) nicht dem Ruhe-Sauerstoffvolumenstrom \\(\\dot{V}O_{2,Ruhe}\\) entsprach. Folglich musste statt des auf die aktive Muskelmasse normierten \\(\\dot{V}O_{2,net,SS}\\) die auf die aktive Muskelmasse normierte Amplitude des Sauerstoffvolumenstroms \\(\\dot{V}O_{2,Amplitude}\\) verwendet werden. Dies resultierte in einem geringeren ΔO2Sp, was auf die aufgrund der Vorbelastung schnellere Einstellung des Steady States und die geringere Amplitude zwischen dem Steady State und \\(\\dot{V}O_{2,Start}\\) zurückzuführen war (Di Prampero et al., 1983).\n\nBerechnungsbeispiel von ΔO2Sp für Test 01_02: \\(\\Delta O_{2}S_{p}\\,[l] = 3.709\\,[l \\cdot min^{-1}]  \\cdot \\left(\\frac{20.75\\,[kg]}{76.00\\,[kg]}\\right) \\cdot \\left(\\frac{47.75}{60}\\,[min] - \\frac{34.3}{60}\\,[min] \\right)= 0.228\\,[l]\\)\n\n\nBestimmung der aktiven Muskelmasse:\nZunächst wurde die gesamte Muskelmasse der Probanden abhängig vom Geschlecht eingeschätzt. Dies erfolgte anhand der von Janssen et al. (2000) mittels Magnetresonanzbildgebung bestimmten Verteilung der Skelettmuskelmasse von 468 Männern und Frauen im Alter von 18 bis 88 Jahren. Da es sich in der vorliegenden Untersuchung um sehr aktive Sportler mit vergleichsweise geringem Körperfettanteil handelte, wurde jeweils von einer aktiven Muskelmasse ausgegangen, die der oberen Grenze der Stichprobe im Alter von 18-29 Jahren entsprach. Für Frauen entsprach die Relative Skelettmuskelmasse laut Abbildung 7 etwa 34% der Gesamtkörpermasse und für Männer etwa 42%.\n\n\n\n\n\n\nAbbildung 7: Tabellarische Darstellung der Probandenmerkmale aus Janssen et al. (2000). Werte sind Gruppendurchschnittswerte ± SD. n: Anzahl der Probanden; Weight: Gewicht; Height: Größe; BMI: Body-Mass-Index; Total SM: Gesamt-Skelettmuskelmasse; Relative SM: Relative Skelettmuskelmasse in Prozent; Lower Body SM: Skelettmuskelmasse des Unterkörpers; Upper Body SM: Skelettmuskelmasse des Oberkörpers.\n\n\n\nIn anderen Untersuchungen wurde der Anteil der aktiven Muskelmasse an der Gesamtmuskelmasse (Muskelmasseaktiv) beim Radfahren im Sitzen in der Regel auf 60%-75% (Heck et al., 2022) bis zu 80% bei hochintensiven Belastungen geschätzt (Beneke et al., 2002). Da nach Janssen et al. (2000) der Anteil der Muskulatur des Unterkörpers im Bezug zur gesamten Muskelmasse für die bereits beschriebene Stichprobe bei Frauen ca. 57,3% und bei Männern ca. 54,8% beträgt, wurde für das Radfahren im Sitzen ein Wert von 65% als Anteil der aktiven Muskelmasse an der Gesamtmuskelmasse gewählt. Dieser Wert liegt im unteren Bereich der in der Literatur berichteten Spanne von 60-80% für das Radfahren im Sitzen.  Beim Radfahren im Stehen ändert sich die Unterstützung des Körpergewichts deutlich, da die Unterstützung des Sattels entfällt und das Gewicht nun verstärkt von den Händen am Lenker getragen wird. Dies führt zu einer stärkeren Aktivierung der Muskulatur, insbesondere der Oberkörper- und Armmuskeln (Arkesteijn et al., 2016; Bosak, 2001; Caldwell et al., 1998; Duc et al., 2008; Li & Caldwell, 1998; Ryschon & Stray-Gundersen, 1991; Tanaka et al., 1987). Aufgrund dessen wird angenommen, dass ein größerer Anteil von ca. 75% der aktiven Muskelmasse an der Gesamtmuskelmasse für das Radfahren im Stehen beteiligt ist. Muskelmasseaktiv wird wie folgt berechnet:\n\\[\nMuskelmasse_{aktiv}\\,[kg] =\n\\begin{cases}\nKörpermasse\\,[kg] \\cdot 0.34 \\cdot 0.65 \\quad\\rightarrow & \\text{♀ | Sitzen} \\\\\nKörpermasse\\,[kg] \\cdot 0.34 \\cdot 0.75 \\quad\\rightarrow & \\text{♀ | Stehen} \\\\\nKörpermasse\\,[kg] \\cdot 0.42 \\cdot 0.65 \\quad\\rightarrow & \\text{♂ | Sitzen} \\\\\nKörpermasse\\,[kg] \\cdot 0.42 \\cdot 0.75 \\quad\\rightarrow & \\text{♂ | Stehen} \\\\\n\\end{cases}\n\\tag{11}\\]",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Energieumsatzberechnung",
      "Anaerobe- alaktazide Energiekomponente (W~PCr~)"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Energieumsatzberechnung/Anaerobe_alaktazide_Energiebereitstellung.html#venöser-o2-speicher-δo2sv",
    "href": "Theoretischer_Hintergrund/Energieumsatzberechnung/Anaerobe_alaktazide_Energiebereitstellung.html#venöser-o2-speicher-δo2sv",
    "title": "Anaerobe- alaktazide Energiekomponente (WPCr)",
    "section": "Venöser O2-Speicher (ΔO2Sv)",
    "text": "Venöser O2-Speicher (ΔO2Sv)\n\n\n\n\n\n\n\n\nAbbildung 8: Schematische Darstellung der Komponenten des Sauerstofftransports und der Sauerstoffdiffusion von der Kapillare zu den Muskelzellen-Mitochondrien. CaO2: arterielle O2-Konzentration; CvO2: venöser O2-Gehalt; DO2: Diffusivität von O2; Mb: Myoglobin; PmitoO2: mitochondrialer O2-Partialdruck; PmvO2: mikrovaskuläre O2-Partialdruck; \\(\\dot{Q}\\): Herzminutenvolumen; \\(\\dot{V}O_2\\): Sauerstoffvolumenstrom (Barstow, 2019)\n\n\n\n\n\n\nDie Berechnung der Sauerstoffspeicher im venösen Blut basiert auf dem Produkt des venösen Blutvolumens (VBV) und der Veränderung der arteriovenösen Sauerstoffdifferenz im Steady-State Δ(Ca - Cv)SS und derjenigen in Ruhe Δ(Ca - Cv)Ruhe (Francescato et al., 2003):\n\\[\n\\Delta O_2S_{v} = \\left[ \\Delta (C_a - C_v)^{Belastung} - \\Delta (C_a - C_v)^{Ruhe} \\right] \\cdot VBV\n\\tag{12}\\]\nMit Hilfe der Fick’sche Gleichung Gleichung 13 kann Gleichung 12 zu Gleichung 15 umgestellt werden. Die Fick’sche Gleichung besagt, dass der Sauerstoffvolumenstrom \\(\\dot{V}O_2\\, (t)\\) das Produkt aus dem Herzminutenvolumen (Q) und der arteriovenösen Sauerstoffdifferenz (Ca - Cv) ist (siehe Abbildung 8) . Dabei steht Ca für die Sauerstoffkonzentration im arteriellen Blut und Cv für die Sauerstoffkonzentration im venösen Blut (Barstow, 2019; Fick, 1855).\n\\[\n\\dot{V}O_2 \\, (t) = \\dot{Q} \\cdot (C_a - C_v) \\Rightarrow (C_a - C_v) = \\frac{\\dot{V}O_2}{\\dot{Q}}\n\\tag{13}\\]\nFür den Belastungs und Ruhezustand lässt sich Gleichung 13 wie folgt umformen, wobei \\(\\dot{Q}_{Ruhe}\\) und \\(\\dot{Q}_{Belastung}\\) das Herzminutenvolumen in Ruhe und unter Belastung beschreibt:\n\\[\n(C_a - C_v) = \\frac{\\dot{V}O_2\\, (t)}{\\dot{Q}}\\Rightarrow\n\\begin{cases}\n\\Delta (C_a - C_v)^{Belastung} = \\frac{\\dot{V}O_{2, Belastung}}{\\dot{Q}_{Belastung}} \\\\\n\\Delta (C_a - C_v)^{Ruhe} = \\frac{\\dot{V}O_{2, Ruhe}}{\\dot{Q}_{Ruhe}}\n\\end{cases}\n\\tag{14}\\]\n\n\nSetzt man die beiden Ausdrücke aus Gleichung 14 in Gleichung 12 ein, erhält man folgende Endgleichung:\n\\[\n\\Delta O_2S_{v}\\,[l] = \\left[ \\frac{\\dot{V}O_{2gross, SS}\\,[l \\cdot min^{-1}]}{\\dot{Q}_{Belastung}\\,[l \\cdot min^{-1}]} - \\frac{\\dot{V}O_{2, Ruhe}\\,[l \\cdot min^{-1}]}{\\dot{Q}_{Ruhe}\\,[l \\cdot min^{-1}]} \\right] \\cdot VBV\\,[l]\n\\tag{15}\\]\n\nBerechnungsbeispiel von ΔO2Sp für Test 01_02: \\(\\Delta O_2S_{v}\\,[l] = \\left[ \\frac{4.118\\,[l \\cdot min^{-1}]}{27.819\\,[l \\cdot min^{-1}]} - \\frac{0.409\\,[l \\cdot min^{-1}]}{5.529\\,[l \\cdot min^{-1}]} \\right] \\cdot 3.405\\,[l] = 0.252 [l]\\)\n\nVBV sowie \\(\\dot{Q}_{Ruhe}\\) und \\(\\dot{Q}_{Belastung}\\) wurden wie folgt berechnet:\n\nBerechnung des VBV, \\(\\dot{Q}_{Ruhe}\\) und \\(\\dot{Q}_{Belastung}\\)\n\n\nDas venöse Blutvolumen wurde für die Berechnung als 64% des gesamten Blutvolumens angenommen (Åstrand et al., 2003, S. 147), welches wiederum als 7% der Körpermasse (in Kilogramm) angesetzt wurde (Tandon & Tripathi, 2011, S. 113). Dies ergibt die folgende Formel:\n\\[\nVBV\\,[l] =  0.64 \\cdot 0.07\\cdot Körpermasse\\,[kg]\n\\tag{16}\\]\nDas individuelle Herzminutenvolumen jedes Probanden in Ruhe \\(\\dot{Q}_{Ruhe}\\) und unter Belastung \\(\\dot{Q}_{Belastung}\\) wurde basierend auf den Daten der Studie von Åstrand et al. (1964), die bei verschiedenen Intensitäten auf dem Fahrradergometer das Herzminutenvolumen gemessen haben, berechnet. Die in Abbildung 9 zu sehenden Regressionsgleichungen wurden durch lineare Regression der Herzminutenvolumina in Abhängigkeit vom Sauerstoffvolumenstrom bestimmt. Um \\(\\dot{Q}_{Belastung}\\) zu berechnen, wurde der modellierte Steady-State-Sauerstoffvolumenstrom der jeweiligen Belastungsintensität \\(\\dot{V}O_{2gross, SS}\\) bzw. der jeweilige \\(\\dot{V}O_{2, Ruhe}\\) jedes Probanden für die Berechnung verwendet. Abhängig von der prozentualen Auslastung \\(VO_{2, Prozent}\\) des \\(\\dot{V}O_{2gross, SS}\\) im Vergleich zum im 1. Stufentest erreichten maximalen Sauerstoffvolumenstroms des Probanden und des Geschlechts wurde die passende Regressionsgleichung, Gleichung 17 für \\(\\dot{Q}_{Belastung}\\) oder Gleichung 18 für \\(\\dot{Q}_{Ruhe}\\) ausgewählt (Francescato et al., 2003).\n\n\n\n\n\n\n\n\n\nAbbildung 9: Beziehung zwischen Herzminutenvolumen und Sauerstoffvolumenstrom auf dem Radergometer (Åstrand, 1964)\n\n\n\n\n\n\\[\n\\dot{Q}_{Belastung}\\,[l \\cdot min^{-1}] =\n\\begin{cases}\n9.88 + 3.23 \\cdot \\dot{V}O_{2gross, SS}\\,[l \\cdot min^{-1}]\\quad\\rightarrow & \\text{♀ | }VO_{2, Prozent} \\leq 70 \\%\\\\    \n3.66 + 6.81 \\cdot \\dot{V}O_{2gross, SS}\\,[l \\cdot min^{-1}]\\quad\\rightarrow & \\text{♀ | }VO_{2, Prozent} \\geq 70 \\%\\\\\n6.55 + 4.35 \\cdot \\dot{V}O_{2gross, SS}\\,[l \\cdot min^{-1}]\\quad\\rightarrow & \\text{♂ | }VO_{2, Prozent} \\leq 70 \\% \\\\\n3.07 + 6.01 \\cdot \\dot{V}O_{2gross, SS}\\,[l \\cdot min^{-1}]\\quad\\rightarrow & \\text{♂ | }VO_{2, Prozent} \\geq 70 \\%\n\\end{cases}\n\\tag{17}\\]\n\\[\n\\dot{Q}_{Ruhe}\\,[l \\cdot min^{-1}] =\n\\begin{cases}\n3.66 + 6.81 \\cdot \\dot{V}O_{2, Ruhe}\\,[l \\cdot min^{-1}]\\quad\\rightarrow & \\text{♀} \\\\    \n3.07 + 6.01 \\cdot \\dot{V}O_{2, Ruhe}\\,[l \\cdot min^{-1}]\\quad\\rightarrow & \\text{♂}\n\\end{cases}\n\\tag{18}\\]",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Energieumsatzberechnung",
      "Anaerobe- alaktazide Energiekomponente (W~PCr~)"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Energieumsatzberechnung/Anaerobe_alaktazide_Energiebereitstellung.html#o2-speicher-im-myoglobin-δo2sm",
    "href": "Theoretischer_Hintergrund/Energieumsatzberechnung/Anaerobe_alaktazide_Energiebereitstellung.html#o2-speicher-im-myoglobin-δo2sm",
    "title": "Anaerobe- alaktazide Energiekomponente (WPCr)",
    "section": "O2-Speicher im Myoglobin (ΔO2Sm)",
    "text": "O2-Speicher im Myoglobin (ΔO2Sm)\nEin weiterer Bestandteil der körpereigenen Sauerstoffspeicher umfasst den an Muskelmyoglobin gebundenen O2. Die Angaben in der Literatur unterscheiden sich dabei deutlich: Während Åstrand et al. (2003) von bis zu 500 ml ausgehen, zeigen die Berechnungen von Francescato et al. (2003), dass ΔO2Sm höchstens 1% der gesamten körpereigenen O2-Speicher ausmacht. Da die Berechnungen der anderen O2-Speicher-Komponenten in dieser Arbeit auf den Berechnungen von Francescato et al. (2003) basieren und der Anteil der ΔO2Sm vernachlässigbar gering ist, wird auf eine separate Berechnung verzichtet.",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Energieumsatzberechnung",
      "Anaerobe- alaktazide Energiekomponente (W~PCr~)"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Sitzen_Stehen.html#biomechanischer-und-leistungsphysiologischer-vergleich-der-fahrtpositionen",
    "href": "Theoretischer_Hintergrund/Sitzen_Stehen.html#biomechanischer-und-leistungsphysiologischer-vergleich-der-fahrtpositionen",
    "title": "Radfahren im Sitzen und Stehen",
    "section": "Biomechanischer und leistungsphysiologischer Vergleich der Fahrtpositionen",
    "text": "Biomechanischer und leistungsphysiologischer Vergleich der Fahrtpositionen\nEin Großteil der bisherigen Untersuchungen zum Wirkungsgrad beim Radfahren wurden in sitzender Position durchgeführt. Das Radfahren im Stehen wurde hingegen seltener betrachtet, obwohl besonders bei Bergaufpassagen die Radfahrer häufig zwischen sitzender und stehender Position wechseln. Bouillod & Grappe (2018b) fanden heraus, dass Eliteradfahrer während eines Bergzeitfahrens mit einer mittleren Steigung von 7,0% etwa 22,4% ihrer Zeit im Stehen fuhren. Bei einer Steigung von 5,0% und einer erbrachten mechanischen Leistung von etwa 93% der maximalen gemessenen Sauerstoffvolumenstroms betrug der Anteil des Fahrens im Stehen laut Harnish et al. (2007) ca. 34%.\nDurch den Wechsel von einer sitzenden zu einer stehenden Position beim Radfahren kommt es zu einer translatorischen Verschiebung des Körperschwerpunktes nach vorne. Gleichzeitig erhöht sich die maximale tangentiale Kraft, die auf die Pedale wirkt, wobei diese Krafterhöhung in der Regel mit einem Absinken der Trittrate einhergeht, um eine vergleichbare mechanische Leistung im Stehen wie im Sitzen zu erbringen. Zusätzlich steigen die mechanischen Kosten der Fortbewegung (Caldwell et al., 1998), wobei der Anstieg der mechanischen Kosten laut Bouillod & Grappe (2018a) auf verschiedene Faktoren wie den Rollwiderstand oder die Verformung bestimmter mechanischer Teile zurückzuführen ist. Die stehende Position führt zu einer Erhöhung der Freiheitsgrade im biomechanischen System Fahrer-Fahrrad, was sich besonders in der Möglichkeit der lateralen Schwingbewegungen des Gesamtsystems manifestiert. Diese veränderte Körperposition resultiert in einem modifizierten Aktivierungsmuster der beteiligten Muskulatur: Elektromyographische Untersuchungen zeigen eine reduzierte Aktivierung der unteren Beinmuskulatur bei gleichzeitig erhöhter Aktivierung der oberen Beinmuskulatur während des Fahrens im Stehen (Arkesteijn et al., 2016; Berkemeier et al., 2020; Kistemaker et al., 2023; Li & Caldwell, 1998). Gleichzeitig wird die Oberkörper- und Rumpfmuskulatur stärker aktiviert, um die zusätzliche Masse aufgrund des Verlusts der Sattelstütze zu tragen, das Becken und den Rumpf zu stabilisieren, das Körpergleichgewicht zu kontrollieren und den Körper und das Fahrrad zur Seite zu schwingen (Duc et al., 2008; Turpin et al., 2017)\nBeim Radfahren im Stehen können über kurze Zeitdauern signifikant höhere Leistungen erbracht werden (Hansen & Waldeland, 2008; Millet et al., 2002). In einer Untersuchung von Millet et al. (2002) mit acht gut trainierten Radsportlern, die jeweils drei 30-sekündige maximale Sprints auf einem Ergometer sowie im Gelände absolvierten, zeigte sich bei diesen kurzen Maximalbelastungen eine um etwa 26% höhere durchschnittliche Leistung im Stehen (803 ± 103 W) verglichen mit der sitzenden Position (635 ± 123 W). Hansen & Waldeland (2008) untersuchten das Fahren in sitzender und stehender Position bei frei wählbarer Trittrate auf einem Laufband-Ergometer bei einer Steigung von 10%. In einem Ausbelastungsprotokoll wurden vier Intensitätsstufen zwischen 86% und 165% der zuvor in einem Stufentest ermittelten mechanischen Maximalleistung (Wmax) absolviert. Die Ausbelastungszeiten unterschieden sich bei 86% Wmax nicht signifikant zwischen den Positionen, während bei der höchsten Intensität (165% Wmax) alle Probanden in stehender Position signifikant bessere Leistungen erzielten. Basierend auf den Ergebnissen wurde eine Übergangsintensität von 94% Wmax identifiziert, oberhalb derer die stehende Position zur Leistungsmaximierung bei einer 10% Steigung der sitzenden Position vorzuziehen war.  Diese erhöhte Leistungsfähigkeit im Stehen bei kurzen, intensiven Belastungen ist vermutlich auf folgende biomechanische Faktoren zurückzuführen (Hansen & Waldeland, 2008). Die Arme tragen durch koordinierte Zug- und Druckbewegungen aktiv zur Leistungsentwicklung bei: Während der Kraftphase des korrespondierenden Beins ziehen sie nach oben und hinten, während sie in der Aufwärtsbewegung nach unten und vorne drücken. Diese Armaktivitäten sind mit der Neigung des Fahrrads koordiniert und tragen somit zur positiven Leistungsentwicklung bei. Im Gegensatz dazu verrichten die Arme beim Fahren im Sitzen kaum Arbeit (Bolourchi & Hull, 1985; Stone & Hull, 1993). Zusätzlich ermöglicht die anterior verlagerte Hüftposition eine effektivere Nutzung des Körpergewichts über den Kurbelarm (Hansen & Waldeland, 2008).  Laut Hansen & Waldeland (2008) könnten diese biomechanischen Eigenschaften, die bei kurzen, intensiven Belastungen vorteilhaft erscheinen, während submaximaler Belastungen möglicherweise von Nachteil sein. Was unter anderem damit zusammenzuhängen könnte, dass der Körperschwerpunkt im Sitzen vom Sattel gestützt wird und nicht durch zusätzliche Muskelaktivität stabilisiert werden muss. Nach Hansen & Waldeland (2008) wird zudem vermutet, dass in sitzender Position in Verbindung mit der Fahrradneigung womöglich nur vernachlässigbar wenig Energie von den Oberkörpermuskeln aufgewendet wird. Allerdings betonen Hansen & Waldeland (2008) auch, dass der gelegentliche Wechsel zwischen sitzender und stehender Position während des submaximalen Radfahrens die Leistung wahrscheinlich verbessert, indem die Ermüdung der hauptsächlich aktiven Muskeln verzögert wird. Der Grund dafür ist, dass durch die veränderte Bewegung beim stehenden Radfahren Muskeln aktiviert werden, die während des sitzenden Radfahrens mehr oder weniger inaktiv sind, wodurch die Energieanforderungen auf eine größere Muskelmasse verteilt werden (Li & Caldwell, 1998).\n\nUnterschiede der phyioslogischen Leistungsparameter\nIn einer Untersuchung von Ryschon & Stray-Gundersen (1991) mit zehn Probanden auf einem 4% geneigten Laufband bei moderater Intensität (etwa 55% des \\(\\dot{V}O_{2,max}\\)) wurden im Stehen bei identischer Trittrate (60 rpm) signifikant erhöhte Werte des Sauerstoffvolumenstroms (\\(\\dot{V}O_{2}\\)) sowie der Herzfrequenz (HR) nachgewiesen. Diese Ergebnisse wurden durch die Studie von Tanaka et al. (1996) validiert, die ebenfalls signifikant erhöhte \\(\\dot{V}O_{2}\\) und HR-Werte beim Fahren im Stehen bei niedriger Intensität und konstanten Trittraten von jeweils 48 rpm und 60 rpm dokumentierten. Interessanterweise glichen sich diese positionsbedingten Unterschiede bei höheren Intensitäten (&gt;80% \\(\\dot{V}O_{2,max}\\)) an.\nDie bereits dargestellte Untersuchung von Hansen & Waldeland (2008) dokumentierte in der Analyse des akkumulierten \\(\\dot{V}O_{2}\\) in den vier Belastungszeiträumen vergleichbare Werte bei 86%, 96% und 165% Wmax, wobei sich lediglich bei 118% Wmax ein signifikant erhöhter akkumulierter \\(\\dot{V}O_{2,max}\\) in stehender Position zeigte. Die Herzrate, die pulmonale Ventilation sowie die Blutlaktatakkumulation unterschieden sich in keiner der Belastungsstufen signifikant zwischen den Positionen.\nBerkemeier et al. (2020) untersuchten vier männliche Radsportler beim Fahren auf einem Laufband mit 8% Steigung und einer konstanten Geschwindigkeit von etwa 13 km/h. Das experimentelle Protokoll umfasste eine alternierende Sequenz von jeweils fünf Minuten im Sitzen und Stehen über eine Gesamtdauer von 20 Minuten, wobei die Trittraten bei 66 U/min in sitzender und 60 U/min in stehender Position lagen. Die relative Belastungsintensität wurde mit etwa 69% des \\(\\dot{V}O_{2,max}\\) in sitzender und 73% in stehender Position bestimmt. Die physiologischen Messungen dokumentierten signifikant erhöhte Werte in stehender Position sowohl für den Sauerstoffvolumenstrom (\\(\\dot{V}O_{2}\\): 3.17 L/min gegenüber 3.06 ± 0.37 L/min) als auch für die Herzrate (175 bpm gegenüber 166 bpm).\nDie Analyse der präsentierten Untersuchungen zeigt, dass das Fahren in stehender Position bei submaximalen Intensitäten und identischer Trittrate zu einem erhöhten physiologischen Energieumsatz führt. Diese Differenzen sind bei Belastungsintensitäten oberhalb von etwa 80% der \\(\\dot{V}O_{2,max}\\) geringer oder nicht mehr nachweisbar. Zusätzlich zeigt sich eine Angleichung der physiologischen Belastungsparameter, wenn die Trittrate bei einer spezifischen Belastungsintensität frei gewählt werden kann, wobei die selbstgewählte Trittrate im Stehen bei gleicher mechanischer Leistung deutlich niedriger ausfällt als im Sitzen (Arkesteijn et al., 2016; Harnish et al., 2007; Millet et al., 2002).  Diese Angleichung der metabolischen Beanspruchungsparameter zwischen Sitzen und Stehen bei gleicher mechanischer Leistung und höheren Intensitäten könnte auf den ansteigenden absoluten physiologischen Energieumsatz zurückzuführen sein. Der zusätzlich zu erbringende metabolische Mehraufwand beim Stehen würde dadurch in Relation zum Gesamtenergieumsatz geringer ausfallen. Ein weiterer Erklärungsansatz liegt in der potenziellen Angleichung der inneren Arbeit zwischen den Positionen bei steigender Trittrate. Die innere Arbeit, welche die zur Aufrechterhaltung der Pedalierbewegung notwendige mechanische Arbeit beschreibt, wurde bisher nur für die sitzende Position systematisch untersucht. Dabei zeigt sich, dass diese in sitzender Position bei niedrigen Trittraten minimal ausfällt und bei steigenden trittraten kubisch ansteigt(Hansen et al., 2004). Obwohl systematische Untersuchungen zur inneren Arbeit in stehender Position bislang fehlen, legen die vorliegenden Studien nahe, dass diese insbesondere bei niedrigen Trittraten im Sitzen höher ausfallen sollte als in sitzender Position.\n\n\nUnterschiede der Wirkungsgrade\nDie Untersuchungen, welche die Effizienz beim Radfahren in stehender und sitzender Position verglichen, bestimmten den physiologischen Energieumsatz ausschließlich über den gemessenen Sauerstoffvolumenstrom (\\(\\dot{V}O_{2}\\)) als Grundlage für ihre Berechnungen (Tabelle 1). Meistens wurde nur ηbrutto bestimmt, der anfällig für Änderungen in der erbrachten Leistung ist.  Millet et al. (2002) verglichen den ηbrutto von acht Radsportlern, die bei 75% ihrer maximalen Leistung jeweils fünf sechsminütige Durchgänge im Sitzen oder Stehen absolvierten. Es zeigten sich keine signifikanten Unterschiede zwischen sitzender (22,4%) und stehender Position (22,5%). Bouillod & Pinot (2014) untersuchten in ihrer Studie 13 Probanden, die auf einem Fahrradergometer auf dem Laufband in randomisierter Reihenfolge Tests in sitzender und stehender Position durchführten. Die Messungen erfolgten bei verschiedenen Steigungsstufen (5%, 7,5% und 10%) und Intensitäten. Die Ergebnisse zeigten einen signifikant höheren ηbrutto in stehender Position von 21,5% gegenüber der sitzenden Position mit 20,6%. Die Verbesserung des Bruttowirkungsgrades um 4,5% im Stehen wurde durch eine erhöhte mechanische Leistung bei gleichbleibendem Sauerstoffverbrauch erreicht. Carlsson et al. (2024) berechneten den Bruttowirkungsgrad (ηbrutto) bei zehn Elite-Radsportlern während drei 5-minütiger Durchgänge auf dem Laufband bei 6,8° Steigung und individueller, konstanter Geschwindigkeit nahe der aeroben Schwelle. Es zeigten sich keine signifikanten Unterschiede zwischen den Bedingungen Sitzen (21,3 ± 1,2%), Stehen (21,3 ± 1,1%) und alternierendem Sitzen/Stehen (21,0 ± 1,1%). Eine wichtige Limitation bei der Interpretation der dargestellten Ergebnisse des ηbrutto ist, dass der Ruheenergieumsatz nicht aus der Berechnung ausgeschlossen wird und bei niedrigen Belastungen eine größere Rolle einnimmt als bei höheren Belastungen.\nHarnish et al. (2007) analysierten den Nettowirkungsgrad (ηnetto) bei acht trainierten Radsportlern während Bergauffahrten. Die Messungen wurden bei drei verschiedenen Intensitätsstufen (50%, 65% und 75% der maximalen Leistung) sowohl im Sitzen als auch im Stehen durchgeführt. Bei niedrigen, mittleren und hohen Intensitäten wurden im Sitzen Werte von 24,2 ± 1,7%, 25,2 ± 1,4% und 26,0 ± 1,7% sowie im Stehen 25,1 ± 3,7%, 25,7 ± 2,2% und 26,7 ± 2,3% ermittelt. Die Ergebnisse zeigen einen intensitätsabhängigen Anstieg des ηnetto, wobei keine signifikanten Unterschiede zwischen den Körperpositionen nachgewiesen werden konnten.\n\n\n\n\nTabelle 1: Tabellarische Übersicht unterschiedlich berechneter Wirkungsgrade beim Fahrradfahren unter verschiedenen Bedingungen\n\n\n\nAutorenBelastungsintensitätTrittrate [U·min⁻¹]TeilnehmendeBerechneter ηWirkungsgrad [%]Dickinson & Dickinson (1929)Belastungsdauer: 10 min28-111N = 1 | ♀ηnettoηnetto = 19.0 ± 2.8%→ Optimale Trittrate bei 33.3 U/minHenry & DeMoor (1950)113 | 150 Belastungsdauer: 6 min61N = 9 | ♂ηnettoηnetto = 21.2% | ηnetto = 19.3% → Niedriger ηnetto bei höherer LastGaesser & Brooks (1975)32.7 | 65.4 | 98.1 | 130.8 Belastungsdauer: 6-8 min40 | 60 | 80 | 100N = 12 | 19-24 Jahre | ♂ηbruttoηnettoηArbeitηDeltaη40,brutto = 12-20 | η60,brutto = 12-20 | η80,brutto = 10-19 | η100,brutto = 8-17η40,netto = 19-24 | η60,netto = 19-24 | η80,netto = 15-22 | η100,netto = 10-19η40,Arbeit = 25-26 | η60,Arbeit = 26-27 | η80,Arbeit = 26 | η100,Arbeit = 27-28ηDelta = 24.4-34.0→ η steigt mit steigender BelastungsintensitätSeabury et al. (1977)40.8 | 81.7 | 122.6 | 163.4 | 196.1 | 204.2 | 245.1 | 286.0 | 326.8 Belastungsdauer: 6 min42 | 46 | 50 | 54 | 58 | 59 | 61 | 62 | 64N = 3 | ♂ηbruttoηbrutto = 15.4 | ηbrutto = 19.2 | ηbrutto = 20.9 | ηbrutto = 21.9 | ηbrutto = 21.4 | ηbrutto = 22.6 | ηbrutto = 23.0 | ηbrutto = 23.4 | ηbrutto = 23.6→ Steigender ηbrutto bei höherer LastSuzuki (1979)20-80% V̇O₂ₘₐₓBelastungsdauer: 15 min60 | 100N = 6  3ST: 78% ST-Fasern & 3FT: 76% FT-Fasern | 32.0 ± 5.6 Jahre | ♂LN: 2-4V̇O₂ₘₐₓ = 60.7 ± 5.7 [l·min⁻¹·kg⁻¹]ηDeltaST-Gruppe:ηDelta, 60 = 23.3 ± 0.9ηDelta, 100 = 19.6 ± 1.6FT-Gruppe:ηDelta, 60 = 25.3 ± 2.3ηDelta, 100 = 28.8 ± 1.0→ ηDelta sinkt/steigt in ST-Gruppe/FT-Gruppe mit steigender TrittrateLuhtanen et al. (1987)50% V̇O₂ₘₐₓ | AerT | AnT | AnT + 30 Watt | AnT + 60 WattBelastungsdauer: 5 min60N = 12 | 21-38 Jahre | ♂LN: 3V̇O₂ₘₐₓ = 59.6 ± 2.5 [l·min⁻¹·kg⁻¹]ηbruttoηnettoηmuskulärηbrutto = 17.4 ± 1.0 - 19.7 ± 2.8ηnetto = 17.5 ± 0.7 - 21.8 ± 2.4ηmuskulär = 21.0 ± 1.5 - 29.7 ± 4.2→ η sinkt mit steigender BelastungsintensitätFrancescato et al. (1995)20-125W Belastungsdauer: 6 min40 | 60 | 80 | 100N = 4 | 22.2 ± 1.5 Jahre | ♂LN: 1V̇O₂max = 37.8 ± 4.9 [ml·min⁻¹·kg⁻¹]ηDeltaηDelta = 22.9 - 32.0→ ηdelta steigt mit steigender TrittrateChavarren & Calbet (1999)54% | 63%| 73% | 80% | 87% | 93% der V̇O₂ₘₐₓBelastungsdauer: 6 min60 | 80 | 100 | 120N = 7 | 22-25 Jahre | ♂LN: 4-5V̇O₂ₘₐₓ = 67.77 ± 5.07 [l·min⁻¹·kg⁻¹]ηbruttoηDeltaηbrutto = 13.0 ± 0.4 - 19.9 ± 0.7ηDelta = 21.5 ± 0.8 - 23.9 ± 1.0→ ηbrutto steigt mit steigender Belastungsintensität→ ηbrutto sinkt mit steigender Drehzahl→ ηDelta steigt mit steigender DrehzahlBeneke et al. (2002)WAnTST: letzte Stufe bei 362 ± 41 WattWAnT = 80 - 170N = 7 | 21.6 ± 3.8 Jahre | ♂LN: 1-3; Sportartfremd: Rugby V̇O₂ₘₐₓ = 51.34 ± 9.44 [l·min⁻¹·kg⁻¹]ηnettoηnetto, WAnT = 16.2 ± 1.6ηnetto, ST = 24.1 ± 1.7Millet et al. (2002)75% des PPOBelastungsdauer: 6 min60 | 90N = 8 | 20.7 ± 3.9 Jahre | ♂ηbruttoηbrutto,sitzen = 22.4 ± 0.8ηbrutto,stehen = 22.5 ± 1.9→ Keine sig. Unterschiede zw. ηbrutto,stehen und ηbrutto,sitzenHarnish et al. (2007)50% | 65% | 75% | 93% des PPOSitzen: 74.6-82.4Stehen: 57.0-65.8N = 8 | 25.8 ± 7.2 Jahre | 7♂ 1♀LN: 4-5V̇O₂ₘₐₓ = 68.8 ± 5.0 [l·min⁻¹·kg⁻¹]ηnettoηnetto,sitzen = 24.2 ± 1.7 - 26.0 ± 1.7 ηnetto,stehen = 25.1 ± 3.7 - 26.7 ± 2.3 → Keine sig. Unterschiede zw. Sitzen und Stehen→  ηnetto steigt mit steigender BelastungsintensitätBell & Ferguson (2009)75% der VT45 | 60 | 75 | 90N = 16 (8 jung / 8 alt) | 19-74 Jahre | ♀ηnettoηmuskulärηnetto, jung = 27.5 ± 4.0 | 29.1 ± 5.1ηnetto, alt = 22.4 ± 6.9 | 20.7 ± 5.5ηmuskulär, jung = 32.0 ± 3.1 | 34.0 ± 5.5ηmuskulär, alt = 30.2 ± 3.1 | 27.9 ± 4.1→ Muskeltemp.normal | Muskeltemp.erhöhtBouillod & Pinot (2014)3.8 | 4.2 | 4.6 [W·kg⁻¹]-N = 13LN: Eliteηbruttoηbrutto, sitzen = 20.6 ± 1.1 ηbrutto, stehen = 21.5 ± 5.2 → Im Stehen sig. höherer ηbruttoDunst et al. (2023)3s, 8s, 12s, 60s Maximalsprints120N = 12 | LN: Elite-Bahnradsportler3♀: 18.7 ± 4.7 Jahre9♂: 22.2 ± 4.4 Jahreηbruttoηbrutto = 10.01 ± 2.18 (3s) - 18.42 ± 1.51 (60s)→ Anstieg von ηbrutto  mit zunehmender SprintdauerZoladz et al. (2023)30-120WBelastungsdauer: 6 min60N = 17 | 23 ± 3 Jahre | ♂LN: 1-3V̇O₂max = 52.3 ± 5.5 [ml·min⁻¹·kg⁻¹]ηbruttoηDeltaηbrutto = 11.6 ± 1.4 - 21.4 ± 1.1ηDelta = 29.8 ± 1.9→ Steigender ηbrutto bei höherer LastCarlsson et al. (2024)AerTBelastungsdauer: 5 min-N = 10 | 25 ± 8 Jahre | ♂LN: Elite-Nationalηbruttoηbrutto, sitzen = 21.3 ± 1.2 ηbrutto, stehen = 21.3 ± 1.1 ηbrutto, sitzen und stehen = 21.0 ± 1.1 → Keine sig. Unterschiede zw. den BedingungenWAnT: Wingate Anaerobic Test; AerT: Aerobe Schwelle; AnT: Anaerobe Schwelle; ST: Stufentest; PPO (Peak Power Output): maximale mechanische Leistung in einem Eingangstest; MAP (Maximal Aerobic Power): höchste über 1 Minute gemittelte Leistung in einem Eingangstes; V̇O2max [ml·min-1·kg-1]: maximaler Sauerstoffvolumenstrom; Pmax: maximale mechanische Leistung; VT: Ventilatorische Schwelle; LN: Leistungsniveau nach De Pauw et al. (2013) abhängig von der V̇O2max [ml·min-1·kg-1] eingeteilt in LN1: &lt;45, LN2: 45-54.9, LN3: 55-64.9, LN4: 65-71, LN5: &gt;71\n\n\n\n\n\nηbrutto und ηnetto schätzen den physiologischen Energieumsatz ausschließlich anhand des gemessenen Sauerstoffvolumenstroms ein, wodurch die alaktaziden und laktaziden anaeroben Anteile des Energieumsatzes unberücksichtigt bleiben. Für eine vollständige Berücksichtigung dieser anaeroben Energiekomponenten eignet sich der in dieser Studie als ηTotal bezeichnete Wirkungsgrad.  Zudem berücksichtigen diese Wirkungsgradparameter nicht die innere Arbeit, die für die Aufrechterhaltung der Beinbewegungen beim Radfahren erforderlich ist. Diese innere Arbeit stellt neben der mechanischen Arbeit gegen das Bremsmoment des Ergometers eine weitere wichtige Komponente der mechanischen Gesamtleistung dar, wird jedoch in den Berechnungen von ηbrutto und ηnetto nicht einbezogen. Mit steigender Trittrate erhöht sich die innere Arbeit, wodurch ηbrutto und ηnetto besonders bei hohen Drehzahlen anfällig für Veränderungen der Trittrate sind. Der Parameter ηmuskulär ermöglicht hingegen eine vollständige Berücksichtigung der inneren Arbeit bei der Wirkungsgradbestimmung und weist, bei ähnlich hohen Werten wie ηnetto, keine Abhängigkeit von der Trittrate auf (Böning et al., 2017).\nBisher gibt es nach Wissen des Autors keine Studien, die den muskulären Wirkungsgrad beim Radfahren in sitzender und stehender Position unter Berücksichtigung von verschiedenen Einflussfaktoren wie Trittfrequenz und Intensität untersucht haben. Daher ist das Ziel dieser Arbeit, ηmuskulär in sitzender und stehender Position auf dem Rad bei verschiedenen Belastungsintensitäten zu vergleichen.",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Radfahren im Sitzen und Stehen"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Sitzen_Stehen.html#quellenverzeichnis",
    "href": "Theoretischer_Hintergrund/Sitzen_Stehen.html#quellenverzeichnis",
    "title": "Radfahren im Sitzen und Stehen",
    "section": "Quellenverzeichnis",
    "text": "Quellenverzeichnis\n\n\nArkesteijn, M., Jobson, S., Hopker, J., & Passfield, L. (2016). The Effect of Cycling Intensity on Cycling Economy During Seated and Standing Cycling. International Journal of Sports Physiology and Performance, 11(January). https://doi.org/10.1123/ijspp.2015-0441\n\n\nBerkemeier, Q. N., Alumbaugh, B. W., Gillum, T., Coburn, J., Kim, J. K., Reeder, M., Fechtner, C. A., & Smith, G. A. (2020). Physiological and biomechanical differences between seated and standing uphill cycling. International Journal of Exercise Science, 13(2), 996–1011.\n\n\nBolourchi, F., & Hull, M. L. (1985). Measurement of Rider Induced Loads during Simulated Bicycling. International Journal of Sport Biomechanics, 1, 308–329. https://doi.org/10.1123/ijsb.1.4.308\n\n\nBöning, D., Maassen, N., & Steinach, M. (2017). Der Wirkungsgrad von Muskelarbeit. Deutsche Zeitschrift fur Sportmedizin, 68(September), 203–214. https://doi.org/10.5960/dzsm.2017.295\n\n\nBouillod, A., & Grappe, F. (2018a). Physiological and biomechanical responses between seated and standing positions during distance‑based uphill time trials in elite cyclists. Journal of Sports Sciences, 36(10), 1173–1178. https://doi.org/10.1080/02640414.2017.1363902\n\n\nBouillod, A., & Grappe, F. (2018b). Physiological and biomechanical responses between seated and standing positions during distance‑based uphill time trials in elite cyclists. Journal of Sports Sciences, 36(10), 1173–1178. https://doi.org/10.1080/02640414.2017.1363902\n\n\nBouillod, A., & Pinot, J. (2014). Gross efficiency is improved in standing position with an increase of the power output. Journal of Science and Cycling, 3(July), 2014.\n\n\nCaldwell, G. E., Li, L., McCole, S. D., & Hagberg, J. M. (1998). Pedal and crank kinetics in uphill cycling. Journal of Applied Biomechanics, 14(3), 245–259. https://doi.org/10.1123/jab.14.3.245\n\n\nCarlsson, M., Lindblom, O., & Carlsson, T. (2024). Steep uphill cycling using repeated transitions between seated and standing positions results in a lower blood-lactate concentration than continuous use of either seated or standing position. Frontiers in Sports and Active Living, 6(September), 1–7. https://doi.org/10.3389/fspor.2024.1395415\n\n\nDuc, S., Bertucci, W., Pernin, J. N., & Grappe, F. (2008). Muscular activity during uphill cycling: effect of slope, posture, hand grip position and constrained bicycle lateral sways. Journal of electromyography and kinesiology : official journal of the International Society of Electrophysiological Kinesiology, 18(1), 116–127. https://doi.org/10.1016/j.jelekin.2006.09.007\n\n\nHansen, E. A., Jørgensen, L. V., & Sjøgaard, G. (2004). A physiological counterpoint to mechanistic estimates of \"internal power\" during cycling at different pedal rates. European Journal of Applied Physiology, 91(4), 435–442. https://doi.org/10.1007/s00421-003-0997-x\n\n\nHansen, E. A., & Waldeland, H. (2008). Seated versus standing position for maximization of performance during intense uphill cycling during intense uphill cycling. Journal of Sports Sciences, 26(October 2014), 37–41. https://doi.org/10.1080/02640410801910277\n\n\nHarnish, C., King, D., & Swensen, T. (2007). Effect of cycling position on oxygen uptake and preferred cadence in trained cyclists during hill climbing at various power outputs. European Journal of Applied Physiology, 99(4), 387–391. https://doi.org/10.1007/s00421-006-0358-7\n\n\nKistemaker, D. A., Terwiel, T. M., Reuvers, E. D. H. M., & Bobbert, M. F. (2023). Limiting radial pedal forces greatly reduces maximal power output and efficiency in sprint cycling: an optimal control study. Journal of applied physiology (Bethesda, Md. : 1985), 134(4), 980–991. https://doi.org/10.1152/japplphysiol.00733.2021\n\n\nLi, L., & Caldwell, G. E. (1998). Muscle coordination in cycling: effect of surface incline and posture. Journal of applied physiology, 85 3, 927–934.\n\n\nMillet, G., Tronche, C., Fuster, N., & Candau, R. (2002). Level ground and uphill cycling efficiency in seated and standing positions. Medicine and science in sports and exercise, 34(October), 1645–1652. https://doi.org/10.1249/01.MSS.0000031482.14781.D7\n\n\nRyschon, T. W., & Stray-Gundersen, J. (1991). The effect of body position on the energy cost of cycling. Medicine and science in sports and exercise, 23(8), 949–953.\n\n\nStone, C., & Hull, M. L. (1993). Rider/Bicycle Interaction Loads during Standing Treadmill Cycling. Journal of Applied Biomechanics, 9, 202–218. https://doi.org/10.1123/jab.9.3.202\n\n\nTanaka, H., Bassett, D. R. J., Best, S. K., & Baker, K. R. J. (1996). Seated versus standing cycling in competitive road cyclists: uphill climbing and maximal oxygen uptake. Canadian journal of applied physiology = Revue canadienne de physiologie appliquee, 21(2), 149–154. https://doi.org/10.1139/h96-013\n\n\nTurpin, N. A., Costes, A., Moretto, P., & Watier, B. (2017). Upper limb and trunk muscle activity patterns during seated and standing cycling. Journal of Sports Sciences, 35(6), 557–564. https://doi.org/10.1080/02640414.2016.1179777",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Radfahren im Sitzen und Stehen"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Mechanische_Arbeit.html",
    "href": "Theoretischer_Hintergrund/Mechanische_Arbeit.html",
    "title": "Mechanische Arbeit",
    "section": "",
    "text": "Die mechanische externe Arbeit (Wmech) charakterisiert, beim Radfahren auf dem Ergometer, die gegen den äußeren Widerstand des Ergometers verrichtete Arbeit, die durch die Rotation der Tretkurbel erzeugt wird. Sie repräsentiert die Hauptkomponente der mechanischen Gesamtarbeit (WTot), welche sich zusätzlich aus der inneren Arbeit (WInt) zusammensetzt, die im nachfolgenden Kapitel detailliert erläutert wird. Im Kontext der Wirkungsgradberechnung, bei der in den meisten Fällen WInt nicht berücksichtigt wird, stellt die mechanische Leistung Pmech eine der zwei fundamentalen Komponenten dar. Sie quantifiziert ausschließlich die nach außen an den Pedalen abgegebene Leistung, während die metabolische Leistung wie im letzten Kapitel beschrieben den energetischen Gesamtaufwand des Organismus für die Bewegungsausführung charakterisiert.\nDie Pedalbewegung erfolgt auf einer Kreisbahn, deren Position durch den Kurbelwinkel definiert wird. Bei der Kraftübertragung vom Fuß auf das Pedal sind aus biomechanischer Perspektive drei Kraftkomponenten messbar, wobei für die Vortriebsanalyse hauptsächlich zwei relevant sind (Abbildung 1): Die Tangentialkraft (Ftangential) wirkt stets rechtwinklig zur Kurbel und stellt die einzige vortriebswirksame Komponente dar. Ihre Wirkungsrichtung variiert kontinuierlich mit der Kurbelstellung und ist maßgeblich für die Erzeugung des antreibenden Drehmoments verantwortlich. Die Radialkraft (Fradial) wirkt longitudinal zur Kurbel und trägt nicht zum Vortrieb bei. Sie verursacht ausschließlich mechanische Belastungen der Kurbel durch Zug- und Druckkräfte sowie Reibungsverluste im Tretlager. Die laterale Kraftkomponente (Flateral) wirkt orthogonal zur Bewegungsebene und wird bei der Analyse der Vortriebsleistung aufgrund ihres fehlenden Einflusses auf die Vorwärtsbewegung vernachlässigt (Rodrigo et al., 2013). Die effektive Vortriebskraft (Fresultierend) ergibt sich als vektorielle Summe dieser Komponenten. Eine optimale biomechanische Effizienz der Pedalbewegung wäre erreicht, wenn die gesamte resultierende Pedalkraft in FTangential umgesetzt würde. Dies ist jedoch aufgrund anatomischer und bewegungsphysiologischer Limitationen nicht realisierbar (Hillebrecht et al., 1998).",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Mechanische Arbeit"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Mechanische_Arbeit.html#biomechanische-effizienzkenngrößen-der-tretbewegung",
    "href": "Theoretischer_Hintergrund/Mechanische_Arbeit.html#biomechanische-effizienzkenngrößen-der-tretbewegung",
    "title": "Mechanische Arbeit",
    "section": "Biomechanische Effizienzkenngrößen der Tretbewegung",
    "text": "Biomechanische Effizienzkenngrößen der Tretbewegung\nAufbauend auf die zuvor berechneten grundlegenden mechanischen Größen der Tangentialkraft, des Drehmoments und der momentanen mechanischen Leistung während einer Kurbelumdrehung lassen sich weitere Parameter ableiten. Diese zusätzlichen Kenngrößen ermöglichen eine Analyse der Bewegungsqualität und Effizienz der Kraftübertragung beim Radfahren. Im Folgenden werden drei zentrale Parameter vorgestellt, die aus den bereits ermittelten Messdaten berechnet werden können.\n\nLinks-Rechts-Balance\nDie Links-Rechts-Balance beschreibt die prozentuale Verteilung der mechanischen Leistung zwischen dem linken und rechten Bein während des Tretzyklus. Basierend auf den separat erfassten momentanen Leistungen beider Extremitäten ermöglicht diese Kenngröße die Analyse potentieller biomechanischer Asymmetrien in der Kraftübertragung. Die Berechnung erfolgt durch das Verhältnis der mittleren mechanischen Leistung des linken Beins zur Gesamtleistung im Vergleich zum entsprechenden Verhältnis des rechten Beins.\nDie mittlere mechanische Leistung des linken (Pmech,links) bzw. rechten Beins (Pmech,rechts) wird dabei analog zu Gleichung 5 durch Integration der jeweiligen momentanen Leistungen über alle k Winkelpositionen separat für jedes Bein bestimmt. Die prozentuale Verteilung der Links-Rechts-Balance berechnet sich für das linke (PL,percent) und rechte Bein (PR,percent) wie folgt:\n\\[P_{L,percent} = \\frac{\\bar{P}_{mech,links}}{\\bar{P}_{mech}} \\cdot 100 \\;\\; [\\%] \\tag{7}\\]\n\\[P_{R,percent} = \\frac{\\bar{P}_{mech,rechts}}{\\bar{P}_{mech}} \\cdot 100 \\;\\; [\\%] \\tag{8}\\]\nEine symmetrische Kraftübertragung (50%/50%) wird dabei aus biomechanischer Perspektive häufig als theoretischer Referenzwert betrachtet, wenngleich in der Praxis in der Regel Abweichungen von dem Referenzwert zu beobachten sind.\n\n\nTorque Efficiency\nDie Torque Efficiency beschreibt die Effektivität der Kraftübertragung während des Tretzyklus durch das Verhältnis der vortriebswirksamen zur aufgebrachten Gesamtleistung. Diese Kenngröße ermöglicht die Analyse der biomechanischen Effizienz der Tretbewegung durch Quantifizierung des Anteils positiver und negativer Leistungskomponenten während der Bewegungsausführung. Die positiven (Pmech,positiv) und negativen (Pmech,negativ) Leistungsanteile werden dabei analog zu Gleichung 5 durch Integration der momentanen Leistungen über alle k Winkelpositionen bestimmt, wobei zwischen vortriebswirksamen und bremsenden Komponenten differenziert wird:\n\\[\\bar{P}_{mech,positiv} = \\frac{1}{k} \\sum_{i=1}^{k} \\bar{P}_{mech}(\\theta_i) \\;\\; [W] \\rightarrow \\; \\text{für} \\;\\; \\bar{P}_{mech}(\\theta_i) &gt; 0 \\tag{9}\\]\n\\[\\bar{P}_{mech,negativ} = \\frac{1}{k} \\sum_{i=1}^{k} \\bar{P}_{mech}(\\theta_i) \\;\\; [W] \\rightarrow \\; \\text{für} \\;\\; \\bar{P}_{mech}(\\theta_i) &lt; 0 \\tag{10}\\]\nDie Torque Efficiency berechnet sich dann als prozentuales Verhältnis der Summe aus positiver und negativer Leistung zur Gesamtleistung:\n\\[\\text{Torque Efficiency} = \\frac{(\\bar{P}_{mech,positiv} + \\bar{P}_{mech,negativ})}{\\bar{P}_{mech}} \\cdot 100 \\;\\; [\\%] \\tag{11}\\]\nDie größten Pmech,positiv treten beim Radfahren im Sitzen typischerweise bei einer Kurbelstellung von etwa 90° relativ zum Boden auf (siehe Abbildung 5 und Abbildung 7), da hier durch die Abwärtsbewegung des Pedals die größten Tangentialkräfte auf die Pedale generiert und somit optimal für den Vortrieb genutzt werden können. Die maximalen Pmech,negativ sind charakteristisch bei etwa 270°-Kurbelstellung zu beobachten, also während der Aufwärtsbewegung des Pedals. In dieser Phase des Tretzyklus befindet sich das kontralaterale Bein in der biomechanisch vorteilhaften 90°-Stellung und generiert den Hauptvortrieb, während das Bein in der 270°-Stellung gegen die Gewichtskraft des Beinsegments arbeiten muss. Diese Überwindung der Gewichtskraft führt zu einem negativen Leistungsanteil, welcher nur durch aktives Ziehen am Pedal (“runder Tritt”) kompensiert werden kann. Ein theoretischer Maximalwert der Torque Efficiency von 100% würde eine ideale Kraftübertragung ohne jegliche negative Leistungsanteile während des gesamten Tretzyklus bedeuten. Beim Radfahren im Wiegetritt verschieben sich diese charakteristischen Winkelpositionen der Pmech,positiv und Pmech,negativ aufgrund der veränderten Körperposition und Gewichtsverlagerung um etwa 40° nach hinten (Bini & Carpes, 2014, S. 16; Coyle et al., 1991; Favero Electronics Srl, 2024; Kistemaker et al., 2023; Korff et al., 2007).\n\n\n\n\n\n\nAbbildung 7: Visualisierung der Torque Efficiency über einen vollständigen Tretzyklus. Links: Beispielhafter Verlauf der positiven P+ und negativen P- Leistungsanteile mit Maximum Pmech,max bei 90° Kurbelstellung. Rechts: Kreisdiagramm zur Darstellung der Leistungsverteilung über die Kurbelumdrehung (modifiziert nach Favero Electronics Srl., 2024).\n\n\n\n\n\nPedal Smoothness\nDie Pedal Smoothness quantifiziert die Gleichmäßigkeit der Kraftübertragung während einer kompletten Kurbelumdrehung durch das Verhältnis von mittlerer zu maximaler Leistung. Diese Kenngröße ermöglicht die Analyse der biomechanischen Effizienz der Tretbewegung durch Bestimmung der Homogenität der Leistungsabgabe über den gesamten Bewegungszyklus. Die mittlere mechanische Leistung wird dabei wie bereits beschrieben mit Gleichung 5 durch Integration der momentanen Leistungen beider Beine über alle k Winkelpositionen bestimmt. Die maximale Leistung (Pmech,max) repräsentiert den Mittelwert der höchsten momentanen mechanischen Leistungen jeder einzelnen Kurbelumdrehung über den gesamten Belastungszeitraum. Für jede Umdrehung wird zunächst der Maximalwert der Leistung über alle k Winkelpositionen bestimmt:\n\\[\\bar{P}_{mech,max} = max(\\bar{P}_{mech}(\\theta_i)) \\;\\; [W] \\rightarrow \\; \\text{für alle} \\;\\; i \\in \\{1,2,3,...,k\\} \\tag{12}\\]\nDie Pedal Smoothness berechnet sich dann als prozentuales Verhältnis der Pmech zur Pmech,max:\n\\[\\text{Pedal Smoothness} = \\frac{\\bar{P}_{mech}}{\\bar{P}_{mech,max}} \\cdot 100 \\;\\; [\\%] \\tag{13}\\]\nDie maximalen Leistungswerte (Pmech,max) treten beim Radfahren im Sitzen, wie bereits beschrieben, charakteristischerweise bei einer Kurbelstellung von circa 90° relativ zur Horizontalen auf, während die Minimalwerte bei etwa 270° auftreten (Abbildung 5 und Abbildung 8). Im Wiegetritt verschiebt sich diese Charakteristik um circa 40° nach hinten. Ein theoretischer Maximalwert der Pedal Smoothness von 100% würde eine ideal homogene Leistungsabgabe über den kompletten Tretzyklus implizieren, was jedoch unter realen Bedingungen nicht realisierbar ist (Favero Electronics Srl, 2024; Korff et al., 2007).\n\n\n\n\n\n\nAbbildung 8: Darstellung der Pedal Smoothness über eine Kurbelumdrehung. Links: Beispielhafter Leistungsverlauf mit maximaler Leistung Pmech,max, durchschnittlicher Leistung Pavg. Rechts: Kreisdiagramm zur Veranschaulichung der Gleichmäßigkeit der Leistungsabgabe (modifiziert nach Favero Electronics Srl., 2024).",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Mechanische Arbeit"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Mechanische_Arbeit.html#quellenverzeichnis",
    "href": "Theoretischer_Hintergrund/Mechanische_Arbeit.html#quellenverzeichnis",
    "title": "Mechanische Arbeit",
    "section": "Quellenverzeichnis",
    "text": "Quellenverzeichnis\n\n\nBini, R., & Carpes, F. (2014). Biomechanics of Cycling (S. 125). Springer.\n\n\nCoyle, E. F., Feltner, M. E., Kautz, S. A., Hamilton, M. T., Montain, S. J., Baylor, A. M., Abraham, L. D., & Petrek, G. W. (1991). Physiological and biomechanical factors associated with elite endurance cycling performance. Medicine and Science in Sports and Exercise, 23(1), 93–107. https://doi.org/10.1249/00005768-199101000-00015\n\n\nFavero Electronics Srl. (2024). Data measured by the Assioma power meter pedal. https://cycling.favero.com/en/blog/assioma/all/data\n\n\nHillebrecht, M., Schwirtz, A., Stapelfeldt, B., Stockhausen, W., & Bührle, M. (1998). Trittechnik im Radsport. Leistungssport, 28(6), 58–62.\n\n\nKistemaker, D. A., Terwiel, T. M., Reuvers, E. D. H. M., & Bobbert, M. F. (2023). Limiting radial pedal forces greatly reduces maximal power output and efficiency in sprint cycling: an optimal control study. Journal of applied physiology (Bethesda, Md. : 1985), 134(4), 980–991. https://doi.org/10.1152/japplphysiol.00733.2021\n\n\nKorff, T., Romer, L. M., Mayhew, I., & Martin, J. C. (2007). Effect of pedaling technique on mechanical effectiveness and efficiency in cyclists. Medicine and Science in Sports and Exercise, 39(6), 991–995. https://doi.org/10.1249/mss.0b013e318043a235\n\n\nRodrigo, B., Hume, P., Croft, J., & Kilding, A. (2013). Pedal force effectiveness in Cycling: a review of constraints and training effects. Journal of Science and Cycling, 2(1), 11–24. http://www.jsc-journal.com/ojs/index.php?journal=JSC&page=article&op=view&path[]=32",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Mechanische Arbeit"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Mechanische_Arbeit.html#footnotes",
    "href": "Theoretischer_Hintergrund/Mechanische_Arbeit.html#footnotes",
    "title": "Mechanische Arbeit",
    "section": "Fußnoten",
    "text": "Fußnoten\n\n\nHinweis zur Notation: In den textlichen Beschreibungen werden die Größen Pmech, FTangential, MTangential, ω usw. der Einfachheit halber ohne Überstrich dargestellt. Dabei handelt es sich jedoch, wie in den Gleichungen (Gleichung 1 - Gleichung 5) formal korrekt dargestellt, stets um die arithmetischen Mittelwerte über den jeweiligen Belastungszeitraum bzw. die jeweilige Winkelstellung in dem Belastungszeitraum. Diese Notation wird auch in den folgenden Abschnitten für die hier beschriebenen Parameter beibehalten.↩︎",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Mechanische Arbeit"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Innere_Arbeit.html",
    "href": "Theoretischer_Hintergrund/Innere_Arbeit.html",
    "title": "Innere Arbeit",
    "section": "",
    "text": "Der Pedalzyklus ist dabei durch komplexe energetische Transferprozesse charakterisiert, bei denen ein kontinuierlicher Austausch zwischen kinetischer Energie der Translations- und Rotationsbewegung sowie potentieller Energie der Segmente stattfindet. Es bestehen unterschiedliche Ansichten, ob dieser Energietransfer nur innerhalb eines einzelnen Segments stattfindet oder auch zwischen verschiedenen Segmenten möglich ist. Die feste Verbindung der Beine durch Pedale und Tretlager spricht dabei für die Möglichkeit eines Energieaustauschs zwischen den verschiedenen Segmenten (Hansen et al., 2004; Wells et al., 1986; Widrick et al., 1992).\nVerschiedene Faktoren determinieren den Betrag der inneren Arbeit und führen insbesondere bei hohen Trittraten zu einem gesteigerten physiologischen Energieumsatz. Nach Minetti (2011) sind für diesen Effekt drei zentrale Mechanismen verantwortlich. Zum einen die durch die Hill-Gleichung beschriebene verminderte Kraftproduktion der Muskeln bei hoher Kontraktionsgeschwindigkeit. Des Weiteren durch die Koaktivierung von Agonisten und Antagonisten, welche in einer verstärkten Abbremsung der Streckbewegung der unteren Extremität resultiert. Als dritter Mechanismus wirkt der Reibungs- und Viskositätswiderstand von Gelenkknorpel, Bändern und weiteren bewegungsunterstützenden Strukturen.",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Innere Arbeit"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Innere_Arbeit.html#berechnungsmethoden-auf-basis-metabolischer-messungen",
    "href": "Theoretischer_Hintergrund/Innere_Arbeit.html#berechnungsmethoden-auf-basis-metabolischer-messungen",
    "title": "Innere Arbeit",
    "section": "Berechnungsmethoden auf Basis metabolischer Messungen",
    "text": "Berechnungsmethoden auf Basis metabolischer Messungen\nEine praktische Lösung zur Messung der metabolischen Kosten der inneren Arbeit bzw. inneren Leistung, hier ausgedrückt als \\(\\dot{V}O_{2,\\text{unloaded}}\\) oder O2-CostnD, ist die Erfassung des \\(\\dot{V}O_{2,\\text{net}}\\) während Pedalierbewegungen ohne Last. Dabei wird eine Bedingung geschaffen, bei der keine externe Arbeit verrichtet werden kann, wodurch theoretisch die gesamte vom Muskelsystem geleistete Arbeit ausschließlich mit der Bewegungsenergie der Körpersegmente korreliert und in Wärmeenergie umgewandelt wird. Die Messungen erfolgen dabei in der Regel systematisch über verschiedene Drehzahlbereiche oder spezifisch bei jener Trittrate, die für die anschließende Wirkungsgradberechnung unter Belastungsbedingungen verwendet werden soll (Gaesser & Brooks, 1975; Hagberg et al., 1981; Hintzy-Cloutier et al., 2003; Whipp & Wassermann, 1969).\nEine alternative Methode zur Bestimmung von \\(\\Delta\\dot{V}O_{2,\\text{unloaded}}\\) basiert auf der Extrapolation des y-Achsenabschnitts der linearen \\(\\Delta\\dot{V}O_{2,\\text{net}} - \\Delta P_{\\text{mech}}\\) Regression aus mehreren Belastungsstufen (Abbildung 2), analog zum bereits beschriebenen Verfahren der Deltawirkungsgradberechnung (Francescato et al., 1995; Gaesser & Brooks, 1975; Sjøgaard et al., 2002). Die Validität dieses linearen Modells wurde jedoch kritisch diskutiert (Ettema & Lorås, 2009), da oberhalb der ersten Laktatschwelle1 der \\(\\dot{V}O_2\\)-Umsatz aufgrund der langsamen Komponente der O2-Kinetik nicht mehr linear zur erbrachten Pmech ansteigt (Barstow, 1994; Bearden & Moffatt, 2000; Sietsema et al., 2020). Als Alternative wurde daher eine kurvilineare Regression zur Beschreibung der \\(\\Delta\\dot{V}O_{2,\\text{net}} - \\Delta P_{\\text{mech}}\\) Beziehung während ansteigender Last vorgeschlagen (Abbildung 3) (Hintzy-Cloutier et al., 2003). Nach Hintzy-Cloutier et al. (2003) zeigten die tatsächlich gemessenen \\(\\dot{V}O_{2,\\text{unloaded}}\\) signifikant höhere Werte als die theoretisch ermittelten \\(\\dot{V}O_{2,\\text{unloaded}}\\)-Werte mittels linearer und kurvilinearer Regression. Als potenzielle Ursachen für diese erhöhten \\(\\dot{V}O_{2,\\text{unloaded}}\\)-Werte wurden der zusätzliche Energieaufwand zur Körperstabilisierung, der über den Energieumsatz der reinen Beinbewegung ohne Leistungsproduktion hinausgeht, sowie die experimentelle Schwierigkeit der exakten Reproduktion der unbelasteten Bedingung identifiziert.\n\n\n\n\n\n\n\n\nAbbildung 2: Lineare Beziehung zwischen Pmech und Sauerstoffvolumenstrom. VO2,unload zeigt den y-Achsenabschnitt der linearen ΔVO2-ΔPmech-Regression (Hintzy-Cloutier, 2003).\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 3: Kurvilineare Beziehung zwischen Pmech und Sauerstoffvolumenstrom. VO2,unload zeigt den y-Achsenabschnitt der kurvilinearen ΔVO2-ΔPmech-Regression (Hintzy-Cloutier, 2003).\n\n\n\n\n\n\nBestimmung der metabolischen Kosten der WInt in dieser Untersuchung\nDie vorliegende Untersuchung nutzte zur Bestimmung der metabolischen Kosten der inneren Leistung ein vergleichbares Verfahren wie oben beschrieben, wobei der energetische Aufwand bei verschiedenen Trittraten gemessen wurde. Das methodische Vorgehen unterschied sich jedoch in der Durchführung, da hier ein stufenartiger Drehzahltest zum Einsatz kam. Die Probanden begannen mit einer Trittrate von 70 U·min-1, welche alle 30 Sekunden um 5 U·min-1 gesteigert wurde, bis die vorgegebene Trittrate nicht mehr aufrechterhalten werden konnte. Für jeden Probanden erfolgte die Berechnung des gewichtsbezogenen \\(\\dot{V}O_{2,\\text{net}}\\) für alle erreichten Drehzahlstufen von 70 U·min-1 bis zur individuell höchsten Drehzahl in 1 U·min-1 Schritten. Der Zusammenhang zwischen dem \\(\\dot{V}O_{2,\\text{net}}\\) [ml·kg-1·min-1] und der Drehzahl [U·min-1] wurde durch die Auftragung der Werte auf der y- bzw. x-Achse des Koordinatensystems dargestellt. Basierend auf den Daten aller Probanden erfolgte eine mathematische Modellierung des Zusammenhangs zwischen Drehzahl und \\(\\dot{V}O_{2,\\text{net}}\\) mittels kubischer Modellanpassung. Die Wahl des kubischen Modells erfolgte auf der Basis des theoretisch zu erwartenden Anstiegs der PInt mit der dritten Potenz der Drehzahl. Die theoretischen Grundlagen hierfür werden in den folgenden Abschnitten näher erläutert. Die kubische Modellfunktion ermöglichte anschließend die Bestimmung des theoretischen zusätzlichen Sauerstoffumsatzes (O2-CostnD,Vorgabe) für jede vorgegebene Drehzahl in der Sitzbedingung. Die O2-CostnD,Vorgabe-Werte konnten jedoch nicht für die stehende Bedingung berechnet werden, da der Drehzahltest ausschließlich im Sitzen durchgeführt wurde.",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Innere Arbeit"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Innere_Arbeit.html#berechnungsmethoden-von-wint-auf-basis-biomechanischer-modelle",
    "href": "Theoretischer_Hintergrund/Innere_Arbeit.html#berechnungsmethoden-von-wint-auf-basis-biomechanischer-modelle",
    "title": "Innere Arbeit",
    "section": "Berechnungsmethoden von WInt auf Basis biomechanischer Modelle",
    "text": "Berechnungsmethoden von WInt auf Basis biomechanischer Modelle\nDie erste Untersuchung der Arbeit, die erforderlich ist, um die Gliedmaßen während der Fortbewegung in Bezug auf den Körperschwerpunkt zu beschleunigen, wurde von Fenn (1930) mithilfe einfacher Filmaufnahmen durchgeführt. Zu diesem Zweck wurden die Aufnahmen vor einem weißen Holzgitter gemacht, welches ein Koordinatensystem mit Quadraten von 1 Meter Seitenlänge bildete (Abbildung 4). Die Positionen der Körpersegmente sowie die Segmentschwerpunkte konnten dann mithilfe der Filmaufnahmen vor dem Koordinatengitter für die verschiedenen Zeitpunkte des Sprints ermittelt werden. Auf dieser Grundlage berechnete Fenn (1930) die kinetische translatorische sowie rotatorische Energie der einzelnen Körpersegmente in Relation zum Körperschwerpunkt. Daraus leitete er die Gesamtenergiekurve der Körpersegmente ab, die die Veränderung der berechneten Energie über die Zeit während des Sprints beschreiben konnte.\n\n\n\n\n\n\nAbbildung 2: Analyse der Kniestreckbewegung mit Darstellung von Winkel- und Energieänderungen aus (Fenn & Morrison, 1930)\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 4: Darstellung der Veränderungen des Kniewinkels und des Oberschenkenwinkels relativ zur Horizontalen in Kombination mit Energieänderungen, berechnet aus einem kinematischen Modell während einer Kniestreckübung mit externen Leistungen von 20 W (dünne Linien) und 40 W (dicke Linien). Dargestellt über fünf verschiedene Kontraktionsraten in 2-Sekunden-Perioden. Die positiven Gesamtenergieänderungen des Oberschenkels (ΔEtot Thigh) und Unterschenkels (ΔEtot Lower Leg) werden separat dargestellt. Ebenso wie die Energieänderungen der potentiellen Energie (ΔE pot) und kinetischen Energie (ΔE kin). Abschließend wird die Gesamtsumme aller Energieänderungen (ΔE tot) visualisiert (Fenn, 1930).\n\n\n\n\n\n\nDer Begriff der „internal work” (innere Arbeit) wurde erstmals von Cavagna et al. (1976) eingeführt und beschreibt die Arbeit, die erforderlich ist, um die Gliedmaßen in Bezug auf den Körperschwerpunkt während der Fortbewegung zu beschleunigen. Der von Cavagna verwendete Berechnungsansatz für die innere Arbeit basierte dabei auf den Methoden von Fenn (1930).\nAufbauend darauf konzipierten Cavagna und Kollegen (Cavagna et al., 1976; Cavagna & Kaneko, 1977; Willems et al., 1995) einen erweiterten Berechnungsansatz der Gesamtarbeit beim Gehen. Grundlegend für ihre Methodik war dabei die Annahme, dass ein Energietransfer ausschließlich zwischen den Segmenten derselben Gliedmaße stattfinden kann. Zur Bestimmung der muskulären Gesamtarbeit kombinierten sie die innere Arbeit mit der externen Arbeit, wobei letztere über Kraftmessplatten als Energieänderungen des Gesamtkörperschwerpunkts relativ zum Boden ermittelt wurde (Gleichung 1). Beim Radfahren vereinfacht sich diese Betrachtung, da die externe Arbeit direkt messbar ist und daher bei der Berechnung der Gesamtarbeit vernachlässigt werden kann (Hansen et al., 2004).\nMinetti (1998) entwickelte, basierend auf den theoretischen Grundlagen von Cavagna & Kaneko (1977) eine Software, um die innere Arbeit verschiedener Bewegungen zu berechnen. Durch den Einsatz von Motion-Capture-Technologie und unter der Annahme eines kubischen Zusammenhangs zwischen Trittrate und innerer Arbeit bzw. Leistung, formulierte Minetti et al. (2001) folgende Modellgleichung für die Berechung der WInt einer Pedalumdrehung für das Radfahren:\n\\[\nW_{\\text{int, Minetti}} = 0.153 \\cdot m \\cdot nD^3\n\\tag{2}\\]\nDie innere Arbeit (Wint,Minetti) einer Pedalumdrehung wird dabei durch das Produkt aus dem empirisch ermittelten Trägheitsparameter von \\(q = 0.153\\), der Körpermasse (m) in Kilogramm und der Trittrate (nD) in Hertz zur dritten Potenz berechnet. Diese Gleichung erwies sich als universell einsetzbar für verschiedene Fahrradtypen und einen breiten Bereich von Trittraten.\n\nBerechnungsbeispiel von Wint,Minetti und Pint,Minetti : Körpermasse = 70 [kg]; q = 0.153 [l]; Trittrateavg = 80 [U·min-1] = \\(\\frac{80}{60}\\) [Hz]; Testdauer = 300 [s]  \\(W_{\\text{Int \\kern0.05em pro \\kern0.05em Umdrehung}}\\) = 0.153 · 70 · (1.33)3 = 25.39 [J]   | Umdrehungengesamt = 1.33 · 300 = 400 [U] \\(W_{\\text{Int \\kern0.05em gesamt}}\\) = 25.39 · \\(\\frac{400}{1000}\\) = 10.156 [kJ] \\(P_{Int}\\) = 10.156 · \\(\\frac{1000}{300}\\) = 33.85 [W]\n\n\nSegmentiertes Modell zur Berechnung der WInt beim Gehen nach Winter (1979)\nWinter (1979) entwickelte einen systematischen Ansatz zur Berechnung der inneren Arbeit, der sich von den bisher vorgestellten Berechnungsmodellen bezüglich verschiedener methodischer Grundannahmen der WInt-Berechnung unterschied. Dabei wurde der menschliche Bewegungsapparat als segmentiertes Modell dargestellt, indem der Körper in biomechanisch relevante Segmente für die Analyse des Gangzyklus unterteilt wurde. Winter (1979) fasste den oberen Körperbereich als eine biomechanische Einheit zusammen, die aus Kopf, Armen und Rumpf bestand und als HAT-Segment (Head, Arms, Trunk) bezeichnet wurde. Die unteren Extremitäten wurden jeweils in drei funktionelle Einheiten: Oberschenkel, Unterschenkel und Fuß untergliedert. Zur präzisen Erfassung der Bewegungsabläufe dieser Körpersegmente wurden Marker an definierten anatomischen Referenzpunkten platziert, die eine exakte Aufzeichnung der Bewegungskoordinaten ermöglichten.\nDie Laufbewegung wurde für die Analyse ausschließlich in der Sagittalebene betrachtet, wobei der Energiebetrag des Armschwungs vollständig vernachlässigt wurde. Aufgrund der angenommenen Symmetrie des Gangs erfolgte eine Übertragung der Bewegungsdaten des linken Beins auf das rechte Bein. Energieaustausche in Nebenbewegungsrichtungen sowie Einflüsse durch Boden- und Luftwiderstand wurden als vernachlässigbar klein eingestuft, wodurch die Energieerhaltung im betrachteten System gewahrt blieb. Dieser methodische Ansatz ermöglichte die Berechnung der inneren Arbeit durch die Analyse der potentiellen und kinetischen Energiekomponenten der verschiedenen Körpersegmente während der Laufbewegung. Die Gesamtenergie der verschiedenen Körpersegmente zu jedem Zeitpunkt \\(t\\) wurde mit folgender Formel berechnet:\n\\[E_{gesamt}(t) = \\sum_{i=1}^{N} [E_{pot}(i,t) + E_{kin,trans}(i,t) + E_{kin,rot}(i,t)] \\tag{3}\\]\nIn Gleichung 3 kennzeichnet der Laufindex \\(i\\) die fortlaufende Nummerierung jedes einzelnen Körpersegments. Der Summenoperator \\(\\sum_{i=1}^{N}\\) beschreibt die systematische Addition der Energiekomponenten für alle definierten Körpersegmente von 1 bis N, wobei \\(N\\) die Gesamtzahl der analysierten Körpersegmente darstellt. Die einzelnen zeitabhängigen Energiekomponenten setzen sich wie folgt zusammen:\n\n\\(E_{pot}(t)\\) bezeichnet die potentielle Energie eines Körpersegments im Gravitationsfeld und wird berechnet durch \\(E_{pot}(t) = m \\cdot g \\cdot h(t)\\) mit der Segmentmasse \\(m\\), der Gravitationskonstante \\(g\\) und der zeitabhängigen vertikalen Körpersegmentposition \\(h(t)\\).\n\\(E_{kin,trans}(t)\\) beschreibt die translatorische kinetische Energie durch lineare Bewegung eines Segments nach \\(E_{kin,trans}(t) = \\frac{1}{2} \\cdot m \\cdot v(t)^2\\), wobei \\(m\\) die Segmentmasse und \\(v(t)\\) die momentane Translationsgeschwindigkeit darstellt.\n\\(E_{kin,rot}(t)\\) repräsentiert die rotatorische kinetische Energie durch Rotation eines Segments nach \\(E_{kin,rot}(t) = \\frac{1}{2} \\cdot I \\cdot \\omega(t)^2\\) mit dem Trägheitsmoment \\(I\\) und der momentanen Winkelgeschwindigkeit \\(\\omega(t)\\).\n\nDie innere Arbeit berechnete Winter (1979) dann aus der Summe aller Energieänderungen über die analysierten Zeitintervalle:\n\\[W_{int} = \\sum_{i=1}^{k} \\Delta E_i(t) \\tag{4}\\]\nWobei \\(\\Delta E_i(t)\\) die Änderung der Gesamtenergie im \\(i\\)-ten Zeitintervall als Differenz \\(E_{gesamt}(t_{i+1}) - E_{gesamt}(t_i)\\) und \\(k\\) die Gesamtanzahl der analysierten Zeitintervalle darstellt. Die durchschnittliche innere Leistung berechnet sich aus der Summe aller Energieänderungen, dividiert durch die kumulierte Zeitdauer \\(T\\) der Energieänderungen:\n\\[P_{int} = \\frac{\\sum_{i=1}^{k} \\Delta E_i(t)}{T} = \\frac{W_{int}}{T} \\tag{5}\\]\nUnter der physiologisch begründeten Annahme, dass ausschließlich positive Energieänderungen der Körpersegmente als relevante Arbeit zu betrachten sind, können für die Berechnung der inneren Leistung selektiv die positiven Energieänderungen berücksichtigt werden. Die innere Leistung berechnet sich dann aus der Summe aller positiven Energieänderungen, dividiert durch die kumulierte Zeitdauer \\(T\\) der positiven Energietransformationen:\n\\[P_{int} = \\frac{\\sum_{i=1}^{k} \\max(0,\\Delta E_i(t))}{T} \\tag{6}\\]\nDie Funktion \\(\\max(0,\\Delta E_i(t))\\) selektiert ausschließlich positive Energieänderungen, indem negative Energieänderungen mit einem Nullwert ersetzt werden.\n\n\nBerechnung der WInt für weitere Bewegungsformen\n\nWInt bei Knieextensionen\n\n\nSjøgaard et al. (2002) entwickelten basierend auf dem Modell von Winter (1979) einen Ansatz zur Quantifizierung der inneren Arbeit bei Knieextensionen und verglichen die biomechanischen WInt-Berechnungen mit Berechnungen von WInt auf metabolischer Basis. Mit Hilfe zweidimensionaler Videoaufzeichnungen in der Sagittalebene wurde ein detailliertes kinematisches Zweisegment-Modell der Beinbewegung erstellt. Aufbauend auf der theoretischen Annahme eines unmittelbaren Energietransfers zwischen potentieller und kinetischer Energie der Segmente wurde zunächst die Gesamtenergie der Körpersegmente gemäß Gleichung 3 bestimmt. Anschließend erfolgte die Berechnung der inneren Arbeit (WInt) und Leistung (PInt) nach den Gleichungen Gleichung 4, Gleichung 5 und Gleichung 6.\nDer Zusammenhang zwischen den berechneten PInt-Werten und der Kontraktionsrate wurde durch eine Polynomfunktion dritten Grades approximiert (Gleichung 7). Dabei repräsentiert x die Kontraktionsrate und a sowie b stellen die entsprechenden Regressionskoeffizienten dar (Abbildung 5):\n\\[P_\\text{int} = ax + bx^3 \\tag{7}\\]\nDie Wahl der Modellfunktion basierte auf den folgenden physikalischen Überlegungen: Die kinetische Energie (Ekin) eines Segments steigt quadratisch mit dessen Geschwindigkeit an. Folglich nehmen die zeitabhängigen Änderungen der Ekin in Relation zur Kontraktionsrate mit der dritten Potenz zu. Da die potentielle Energie (Epot) pro Kontraktion geschwindigkeitsunabhängig ist, sollten die zeitabhängigen Änderungen der Epot linear proportional zur Kontraktionsrate verlaufen.\n\n\n\n\n\n\n\n\n\nAbbildung 5: Darstellung der inneren Leistung (IP) im Verhältnis zur Kontraktionsrate. Die durchgezogene Linie repräsentiert eine Polynommodellgleichung dritten Grades, angepasst an die Datenpunkte: IP = 0,0299x + 0,00002617x³ (R² = 0,996), wobei x die Kontraktionsrate repräsentiert (modifiziert nach Sjøgaard et al. (2002)).\n\n\n\n\n\nIn Abbildung 6 sind die resultierenden Energieänderungsverläufe der beiden Segmente für fünf verschiedene Kontraktionsraten und zwei externe Leistungsniveaus dargestellt.\nDie Autoren fanden vergleichbare Ergebnisse zwischen den WInt-Berechnungen beider Ansätze, wenn in den biomechanischen Modellen ausschließlich die positiven Anteile der Energieänderungen berücksichtigt wurden. Diese Übereinstimmung ermöglichte die physiologische Validierung des kinematischen Modells von Winter (1979) für Knieextensionen.\n\n\n\n\n\n\nAbbildung 4: Analyse der Kniestreckbewegung mit Darstellung von Winkel- und Energieänderungen aus (Sjøgaard et al., 2002)\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 6: Darstellung der Veränderungen des Kniewinkels und des Oberschenkenwinkels relativ zur Horizontalen in Kombination mit Energieänderungen, geschätzt aus einem kinematischen Modell während einer Kniestreckübung mit externen Leistungen von 20 W (dünne Linien) und 40 W (dicke Linien). Dargestellt über fünf verschiedene Kontraktionsraten in 2-Sekunden-Perioden. Die positiven Gesamtenergieänderungen des Oberschenkels (ΔEtot Thigh) und Unterschenkels (ΔEtot Lower Leg) werden separat dargestellt. Ebenso wie die Energieänderungen der potentiellen Energie (ΔE pot) und kinetischen Energie (ΔE kin). Abschließend wird die Gesamtsumme aller Energieänderungen (ΔE tot) visualisiert (Sjøgaard et al., 2002).\n\n\n\n\n\n\n\n\nWInt beim Radfahren - Vergleich verschiedener Modelle\nAufbauend auf der Validierung des WInt-Berechnungsmodells von Winter (1979) für Knieextensionen untersuchten Hansen et al. (2004) die Übertragbarkeit der WInt- Berechnungen auf das Radfahren. Die Autoren verglichen dabei metabolische Messungen der inneren Arbeit mit fünf verschiedenen kinematischen Berechnungsmodellen (Wells et al., 1986; Widrick et al., 1992; Willems et al., 1995; Winter, 1979).\nDie ursprünglich für zweidimensionale Analysen konzipierten Modelle wurden in dieser Studie sowohl zweidimensional als auch dreidimensional berechnet. Die Berechnungsgrundlage aller Modelle basierte auf der Summierung der kinetischen und potentiellen Energien der verschiedenen Körpersegmente. Die Modelle unterschieden sich trotz dieser gemeinsamen Basis in mehreren wesentlichen Aspekten. Diese umfassten die Anzahl der einbezogenen Körpersegmente, insbesondere den Ein- oder Ausschluss der Armsegmente, sowie die Annahmen zum Energietransfer zwischen den Beinen oder beschränkt auf gleichseitige Gliedmaßen. Zusätzlich variierten die Modelle im Ein- oder Ausschluss der Energieänderungen aus den potentiellen und kinetischen Energieänderungen des Gesamtkörperschwerpunkts sowie in der Berücksichtigung ausschließlich positiver oder aller Gesamtenergieänderungen.\nFolgende von Hansen et al. (2004) auf das Radfahren übertragene Modelle zur Berechnung der inneren Leistung wurden verwendet:\n\nWinter-Modell (IPwinter): Drei Beinsegmente sowie das HAT-Segment und mit einem Energietransfer zwischen allen Segmenten unter ausschließlicher Einbeziehung positiver Energieänderungen (Winter, 1979).\nWells-Modell (IPwells): Vergleichbar mit IPwinter aber unter zusätzlicher Berücksichtigung negativer Energieänderungen (Wells et al., 1986).\nWidrick-Modell (IPwidrick): Ansatz von Wells aber mit Ausschluss des Energietransfers zwischen den Beinen und Beschränkung auf die Beinsegmente (Widrick et al., 1992).\nWillems-Modell: Zwei Berechnungsvarianten (Willems et al., 1995):\n\nIPwillems: Berechnung der kinetischen Energieänderungen der Segmente in Relation zum Körperschwerpunkt und mit Energietransfer ausschließlich zwischen Segmenten derselben Extremität. Einschließlich der potentiellen und kinetischen Energieänderungen des Körperschwerpunkts.\nIPwillems-COM: Identische Berechnung unter Ausschluss der potentiellen und kinetischen Energieänderungen des Körperschwerpunkts.\n\n\nDie Gegenüberstellung der verschiedenen Modelle und der metabolisch ermittelten inneren Leistung (IPmet) ist in Abbildung 7 dargestellt. Mit zunehmender Trittrate zeigten alle Modelle einen nichtlinearen Anstieg der inneren Leistung. Die höchsten PInt-Werte wurden dabei mit dem IPwidrick-Modell bestimmt, gefolgt von dem IPwells-Modell. Knapp darunter lagen die Werte von IPwillems. Die geringsten inneren Leistungen wurden bei IPwillems-COM, IPmet und IPwinter berechnet, wobei IPwillems-COM und IPwinter die größte Übereinstimmung mit IPmet zeigten. Wie in Abbildung 8 dargestellt, wurden die Modellberechnungen von IPwells, IPwidrick und IPwillems-COM für niedrige und moderate externe Leistungen mit den IP-Berechnungen nach der Minetti-Formel sowie experimentell ermittelten PInt-Daten von Wells et al. (1986) und Widrick et al. (1992) verglichen. Dabei zeigte sich eine erwartungsgemäß hohe Übereinstimmung zwischen den IPwells- und IPwidrick-Werten mit den Messdaten aus den Studien von Wells et al. (1986) und Widrick et al. (1992). Die nach der Minetti-Formel berechneten PInt-Werte waren vergleichbar mit den Ergebnissen des IPwillems-COM Modells.\nHansen et al. (2004) kamen basierend auf ihren Untersuchungsergebnissen zu der Erkenntnis, dass das IP-Willems-COM-Modell die beste Übereinstimmung mit den berechneten metabolischen Kosten der inneren Leistung beim Radfahren zeigte. Auch das IPWinter-Modell wurde als angemessene Methode zur Bestimmung der IP während des Radfahrens eingeordnet. Die Autoren stellten fest, dass sich der beobachtete Anstieg der PInt mit zunehmender Trittrate bei allen untersuchten Modellen hauptsächlich durch die Beinbewegungen erklären ließ. Sie argumentierten, dass trotz nachgewiesener vertikaler Bewegungen des Körperschwerpunkts in den kinematischen Analysen der Ausschluss der potentiellen und kinetischen Energieänderungen des Körperschwerpunkts beim Radfahren im Sitzen gerechtfertigt sei, da das Körpergewicht durch den Sattel gestützt wird. Für das Fahren im Stehen wie in der hier vorliegenden Untersuchung muss die von Hansen et al. (2004) getroffene Einschätzung jedoch neu bewertet werden, da hier deutlich größere potentielle Energieänderungen zu erwarten sind, wenn das Körpergewicht nicht durch den Sattel gestützt wird. Das IPWinter-Modell könnte durch die Berücksichtigung der potentiellen Energieänderungen des Segmentschwerpunktes des HAT-Segments für die Berechnung der PInt im Stehen besser geeignet sein. Diese Überlegung führte dazu, dass in der vorliegenden Untersuchung das IPWinter-Modell für die nachfolgenden Analysen explorativ angewandt wurde.\n\n\n\n\n\n\n\n\nAbbildung 7: Verlauf der inneren Leistung (IP) in Abhängigkeit von der Trittrate, berechnet nach den Modellen IPwinter, IPwells, IPwidrick, IPwillems und IPwillems-COM sowie IPmet. Alle Datenpunkte repräsentieren Mittelwerte der IP bei niedriger und moderater Last, entsprechend 40% und 70% der mechanischen Leistung bei maximalem Sauerstoffvolumenstrom (Hansen et al., 2004).\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 8: Vergleich der inneren Leistung (IP) in Abhängigkeit von der Trittrate zwischen den Modellen IPwells, IPwidrick und IPwillems-COM bei niedriger und moderater Last mit Literaturdaten von Wells et al. (1986), Widrick et al. (1992) sowie theoretischen Berechnungen nach Minetti et al. (2001). Alle Datenpunkte stellen Mittelwerte ohne Standardfehler dar (Hansen et al., 2004).",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Innere Arbeit"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Innere_Arbeit.html#berechnungsmethoden-der-wint-in-dieser-arbeit",
    "href": "Theoretischer_Hintergrund/Innere_Arbeit.html#berechnungsmethoden-der-wint-in-dieser-arbeit",
    "title": "Innere Arbeit",
    "section": "Berechnungsmethoden der WInt in dieser Arbeit",
    "text": "Berechnungsmethoden der WInt in dieser Arbeit\nIm Folgenden wird chronologisch die Entwicklung und Anpassung der Berechnungsmethoden zur Bestimmung der WInt in dieser Arbeit dargestellt, um die verschiedenen methodischen Ansätze und deren Modifikationen zu verschiedenen Zeitpunkten nachvollziehbar zu machen. Die Berechnung der inneren Arbeit anhand biomechanischer Modelle und 3D-Kinematikdaten erfolgte mehrstufig unter Berücksichtigung verschiedener methodischer Herausforderungen. Da nur für vier von neun Probanden reliable Kinematikdaten vorlagen, wurde zunächst für alle Teilnehmer ein 2D-Modell auf Basis anthropometrischer Daten erstellt. Dieses beinhaltete die Segmente des Oberschenkels sowie ein kombiniertes Segment von Unterschenkel bis Pedale, wobei auf ein separates Fußsegment verzichtet wurde.\nZunächst wurden die kinetischen Energieänderungen (translatorisch und rotatorisch) der Segmentschwerpunkte eines Beines addiert und deren zeitlicher Verlauf zur Bestimmung der inneren Arbeit herangezogen. Für die Berechnung der PInt,Modell wurde dieser Wert für verschiedene Drehzahlen verdoppelt, wobei Energietransfer zwischen den Beinen sowie potentielle Energien und deren Änderungen der Segmentschwerpunkte vernachlässigt wurden. Diese Methode kam bei Probanden ohne Kinematikdaten zum Einsatz.\nFür Probanden mit dreidimensionalen Daten erfolgte die Berechnung (PInt,Kinematik) nach demselben Prinzip, jedoch basierend auf den tatsächlichen Gelenkpositionen während des Fahrens im Sitzen sowie im Stehen. Die durchschnittliche Differenz zwischen PInt,Modell und PInt,Kinematik wurde als Korrekturwert auf die berechneten PInt,Modell-Werte der Probanden ohne Kinematikdaten addiert und als PInt,Kinematik,Modell bezeichnet.\nDie ursprüngliche Berechnungsmethode für PInt,Modell und PInt,Kinematik zeigte aufgrund der kubischen Abhängigkeit der PInt von der Trittrate zwar leicht höhere Werte im Stehen bei gleicher Drehzahl, jedoch signifikant niedrigere PInt-Werte im Stehen aufgrund der dort signifikant geringeren Trittraten in den gleichen Belastungsintensitäten. Da sich jedoch weder die verschiedenen Wirkungsgrade (ηTotal, ηNetto und ηBrutto, alle ohne Einbezug der inneren Leistung) noch andere physiologische Parameter wie der \\(\\dot{V}O_2\\) oder Herzrate bei vergleichbarer mechanischer Leistung zwischen Stehen und Sitzen signifikant unterschieden, könnte man auch von einer vergleichbaren inneren Leistung für beide Bedingungen ausgehen, was jedoch auf Basis der gewählten Berechnungsmethoden nicht der Fall war.\nAufgrund dessen wurde im Nachhinein ein weiterer explorativer Berechnungsansatz basierend auf dem Berechnungsmodell von Winter (1979) durchgeführt, der zusätzlich die potentiellen Energieänderungen der Segmentschwerpunkte sowie weitere Körpersegmente (Rumpf, Arme, Kopf) berücksichtigte. Dieser führte zwar zu ähnlichen Ergebnissen in der Sitzen-Bedingung, zeigte jedoch deutlich höhere PInt-Werte für die Stehen-Bedingung. Daher wurden die Ergebnisse der ursprünglichen Berechnungsmethode beibehalten.\nDie verschiedenen methodischen Berechnungsansätze werden in den folgenden Kapiteln detailliert dargestellt.\n\nSimulationsmodell der Pedalbewegung\nAufgrund von Messungenauigkeiten des Kamera-Markersystems war es nicht möglich, für jeden Probanden die erforderlichen kinematischen Daten zur Erstellung eines Kinematik-Modells zu erhalten. Daher wurde ein einheitliches Simulationsmodell der zyklischen Radfahrbewegung der unteren Extremitäten basierend auf den verfügbaren anthropometrischen Daten für alle Probanden erstellt. Zur Reduktion der Modellkomplexität und besseren Vergleichbarkeit wurde auf eine Simulation des Sprunggelenks verzichtet und nur zwei Segmente (Ober- und Unterschenkel) pro Bein modelliert. Bei Probanden ohne die für die Modellbildung essentiellen anthropometrischen Daten wie Länge und Umfang von Ober- und Unterschenkel wurden diese Parameter entsprechend den Standardwerten aus den anthropometrischen Tabellen Tabelle 1 und Tabelle 2 bestimmt (Gordon et al., 2012). Die Segment-Längen der Ober- und Unterschenkel wurden dabei auf Basis der Körperlänge, die Segment-Umfänge auf Basis der Körpermasse zugeordnet.\n\n\n\n\n\n\nVerwendete anthropometrische Tabellen für die Bestimmung der Segmentlängen und Segmentumfänge\n\n\n\n\n\n\nFrauenMänner\n\n\n\n\n\n\nTabelle 1: Anthropometrische Tabellen für die Bestimmung der Segmentlängen und Umfänge der Frauen (Gordon et al., 2012)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTabelle 2: Anthropometrische Tabellen für die Bestimmung der Segmentlängen und Umfänge der Männer (Gordon et al., 2012)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSimulationsmodell der Kurbel- und Beinbewegung auf dem Radergometer\n\n\nAnthropometrische Parameter und geometrische Bedingungen des Simulationsmodells:\nFür die Erstellung des biomechanischen Simulationsmodells wurde zunächst ein zweidimensionales Koordinatensystem definiert, dessen Nullpunkt P0 im Zentrum der Kurbelachse (0,0) liegt (siehe Abbildung 9). Ausgehend von diesem Referenzpunkt wurden alle weiteren Positionen im Raum bestimmt. Als Grundlage für das Modell wurden folgende konstante anthropometrische Parameter und geometrische Grundbedingungen festgelegt:\n\nKörpermasse (m)\nLänge des Oberschenkelsegments (lOS / G32)\nLänge des Unterschenkelsegments (lUS / G2)\n\nSegmentumfänge (uOS, uUS) für das Ober- und Unterschenkelsegment\nLänge der Kurbel (lKurbel / G1)\nAbstand vom Hüftgelenk zur Kurbelachse (S / G4) wurde mittels Lemond-Methode als konstanter Wert aus der Beinlänge (lBein) berechnet: \\(S/G_{4} = l_{Bein} \\cdot 0.883\\)\nDie Position des Hüftgelenks (P3) definierte sich durch seine Koordinaten im Raum, wobei P3x mit -0.150 als konstant festgelegt wurde und sich P3y aus der Beziehung \\(P_{3y} = \\sqrt{G_{4}^2 - P_{3x}^2}\\) ergibt\nDer konstante Winkel δ zwischen G4 und der Vertikalen berechnet sich aus: \\(\\delta = \\arccos(\\frac{P_{3y}}{G_4})\\)\n\nZeitliche Parameter der Pedalbewegung:\nDie Bewegung des Modells wurde durch die konstante Drehzahl (nD) sowie eine feste Anzahl von 360 Berechnungsschritten pro Kurbelumdrehung bestimmt. Daraus ergab sich:\n\nDie Periodendauer einer vollständigen Kurbelumdrehung: \\(T = \\frac{60}{\\text{nD}}\\)\nEine konstante Winkelauflösung von 1° pro Berechnungsschritt (n = 360)\nDas Zeitintervall zwischen den Berechnungsschritten: \\(\\Delta t = \\frac{T}{360}\\)\nDie konstante Winkelgeschwindigkeit: \\(\\omega = \\frac{2\\pi}{T}\\)\n\nVariable Parameter des Simulationmodells und Modellierung der zyklischen Bewegung:\nDie Bewegungsanalyse erfolgte durch eine zeitabhängige Berechnung der Gelenkpositionen und Segmentschwerpunkte, wobei G1 der Kurbellänge (lKurbel), G2 der Unterschenkellänge, G3 der Oberschenkellänge (lOS) und G4 dem horizontalen Hüftabstand entsprach. Zunächst wurde der Kurbelwinkel φ1(t) bestimmt, der sich linear mit der Zeit änderte:\n\n\\(\\phi_1(t) = \\omega \\cdot t + \\phi_1(t_0)\\)\n\nAus diesem Kurbelwinkel ergab sich die Position des Fußpunktes P1(t), der sich auf einer Kreisbahn um die Kurbelachse bewegte:\n\n\\(P_{1x}(t) = G_1 \\cdot \\sin(\\phi_1(t))\\)\n\\(P_{1y}(t) = G_1 \\cdot \\cos(\\phi_1(t))\\)\n\nDie Bestimmung der Knieposition P2(t) erfolgte in mehreren Schritten:\n\nZunächst wurde der variable Abstand c(t) zwischen Fußpunkt P1 und Hüftpunkt P3 über den Kosinussatz berechnet:\n\n\\(c(t) = \\sqrt{G_1^2 + G_4^2 - 2 \\cdot G_1 \\cdot G_4 \\cdot \\cos(\\phi_1(t) + \\delta)}\\)\n\nAnschließend wurden die für die Bestimmung der Knieposition relevanten Winkel bestimmt:\n\nDer Winkel α(t) zwischen dem Abstandsvektor c(t) und G4: \\(\\alpha(t) = \\arcsin(\\frac{G_1 \\cdot \\sin(\\phi_1(t) + \\delta)}{c(t)})\\)\nDer Winkel β(t) zwischen c(t) und G3: \\(\\beta(t) = \\arccos(\\frac{G_3^2 + c(t)^2 - G_2^2}{2 \\cdot G_3 \\cdot c(t)})\\)\n\nAus diesen Winkeln lies sich die Position des Knies P2(t) berechnen:\n\n\\(P_{2x}(t) = P_{3x} + G_3 \\cdot \\cos(\\frac{\\pi}{2} - \\beta(t) + \\alpha(t) + \\delta)\\)\n\\(P_{2y}(t) = P_{3y} - G_3 \\cdot \\sin(\\frac{\\pi}{2} - \\beta(t) + \\alpha(t) + \\delta)\\)\n\n\nMit den nun bekannten Gelenkpositionen wurden die folgenden Segmentwinkel bestimmt:\n\nDer Unterschenkelwinkel φ2(t) beschreibt den Winkel zwischen dem Unterschenkelsegment und der horizontalen x-Achse: \\(\\phi_2(t) = \\arccos(\\frac{P_{2x}(t) - P_{1x}(t)}{G_2})\\)\nDer Oberschenkelwinkel φ3(t) ist als Winkel zwischen dem Oberschenkelsegment und der vertikalen y-Achse definiert: \\(\\phi_3(t) = \\arccos(\\frac{P_{3y} - P_{2y}(t)}{G_3})\\)\n\nDie Segmentschwerpunkte wurden nach anthropometrischen Daten zu Segmentmassen, Massenmittelpunkten und Trägheitsradien aus Abbildung 14 berechnet. Der Faktor λ = 0.433 gibt dabei an, dass der Massenschwerpunkt bei 43,3% der Segmentlänge vom proximalen Ende liegt:\n\nFür den Oberschenkel (OS):\n\n\\(SpOS_x(t) = P_{3x} - 0.433(P_{3x} - P_{2x}(t))\\)\n\\(SpOS_y(t) = P_{3y} - 0.433(P_{3y} - P_{2y}(t))\\)\n\nFür den Unterschenkel (US):\n\n\\(SpUS_x(t) = P_{2x}(t) - 0.433(P_{2x}(t) - P_{1x}(t))\\)\n\\(SpUS_y(t) = P_{2y}(t) - 0.433(P_{2y}(t) - P_{1y}(t))\\)\n\n\nDie momentane Geschwindigkeit jedes Segmentschwerpunkts ergab sich aus der Änderung seiner Position über die Zeit:\n\n\\(v(t) = \\sqrt{(\\Delta x(t))^2 + (\\Delta y(t))^2}/\\Delta t\\)\n\nIn Abbildung 11 ist beispielhaft eines der erstellten Simulationsmodelle der zyklischen Radfahrbewegung im Sitzen dargestellt. Das zweidimensionale Modell zeigt die simulierten Gelenkpunkte der Hüfte, des Knies und des Fußes an der Kurbel sowie die Segmentschwerpunkte von Ober- und Unterschenkel. Die gestrichelte Kreislinie visualisiert die Kurbelbahn der Pedale mit einem Radius entsprechend der Kurbellänge. Die Kurbelposition kann in Abbildung 11 entweder automatisiert oder manuell zwischen 0° und 360° variiert werden.\n\n\n\n\n\n\n\n\n\nAbbildung 9: Schematische Darstellung eines biomechanischen Modells zur Simulation der Pedalbewegung im Radsport, basierend auf einer Viergelenk-Gliederkette in der Sagittalebene. Das Modell zeigt die kinematischen Zusammenhänge zwischen Kurbel- und Beinbewegung an einem Fahrradergometer (Clauß, 2024; unveröffentlichte Arbeit).\n\n\n\n\n\n\n\n\n\nAbbildung 10: Schematische Darstellung der Winkelbeziehungen und Segmentlängen in der Viergelenkkette des biomechanischen Simulationsmodells.(Clauß, 2024; unveröffentlichte Arbeit).\n\n\n\n\n\n\n\n\n\nAbbildung 11: Interaktives Simulationsmodell der Radfahrbewegung mit Gelenkpunkten, Segmentschwerpunkten und den jeweiligen Verbindungslinien zwischen den Segmenten.\n\n\n\n\n\nEnergetische Grundgleichungen und Berechnungen:\nDie Berechnung der rotatorischen und translatorischen kinetischen Energien erfolgte in mehreren aufeinanderfolgenden Schritten basierend auf den zuvor ermittelten kinematischen Parametern:\n\nDie Segmentmassen der Beinelemente wurden anhand der in Abbildung 14 dargestellten Werte bestimmt:\n\nDie Masse des Oberschenkels beträgt 10% der Körpermasse: \\(m_{OS} = \\text{m} \\cdot 0.1\\)\nDie Masse des Unterschenkels beträgt 4.65% der Körpermasse: \\(m_{US} = \\text{m} \\cdot 0.0465\\)\n\nDie Trägheitsmomente der Unterschenkel- und Oberschenkelsegmente wurden wie folgt berechnet:\n\n\\(\\theta_{OS} = \\frac{1}{4}m_{OS}\\cdot(\\frac{u_{OS}}{2\\pi})^2 + \\frac{1}{12}m_{OS}\\cdot l_{OS}^2\\)\n\\(\\theta_{US} = \\frac{1}{4}m_{US}\\cdot(\\frac{u_{US}}{2\\pi})^2 + \\frac{1}{12}m_{US}\\cdot l_{US}^2\\)\n\nDie kinetischen Energien wurden separat für translatorische und rotatorische Bewegungen ermittelt:\n\n\\(E_{kin,trans}(t) = \\frac{1}{2}(m_{OS} \\cdot v_{OS}(t)^2 + m_{US} \\cdot v_{US}(t)^2)\\)\n\\(E_{kin,rot}(t) = \\frac{1}{2}(\\theta_{OS} \\cdot \\omega_{OS}(t)^2 + \\theta_{US} \\cdot \\omega_{US}(t)^2 + \\theta_{Kurbel} \\cdot \\omega_{Kurbel}(t)^2)\\)\n\nDie Gesamtenergie ergab sich aus der Summe beider Komponenten: \\(E_{kin,ges}(t) = E_{kin,trans}(t) + E_{kin,rot}(t)\\)\n\nBerechnung und Integration der inneren Leistung:\nDie Leistungsberechnung erfolgte systematisch in mehreren Schritten, basierend auf der grundlegenden Annahme, dass der Energietransfer ausschließlich zwischen den Segmenten derselben Gliedmaßen stattfindet und kein Energieaustausch zwischen den Beinen erfolgt:\n\nDie innere mechanische Leistung wurde für beide Beine separat berechnet. Für das linke Bein erfolgte die direkte Berechnung der Leistung aus den Energieänderungen, während für das rechte Bein eine um 180° phasenverschobene Berechnung durchgeführt wurde:\n\n\\(P_{Int,Linkes}(t) = \\frac{\\Delta E_{kin,ges}(t)}{\\Delta t}\\)\n\\(P_{Int,Rechts}(t) = P_{Int,Links}(t + 180°)\\)\n\nDie Momentanleistung zu einem Zeitpunkt wurde aus der zeitlichen Änderung der kinetischen Gesamtenergie bestimmt (siehe Abbildung 12): \\(P_{Int}(t) = \\frac{\\Delta E_{kin,ges}(t)}{\\Delta t}\\)\n\n\n\n\n\n\n\n\n\nAbbildung 12: Beispielhafter Verlauf der modellierten inneren Leistung (PInt,Modell) über einen kompletten Pedalzyklus (360°), dargestellt mit positiven und negativen Leistungsanteilen für das rechte (grün) und linke Bein (rot).\n\n\n\n\n\nFür die weitere Berechnung wurden nur die positiven Leistungsanteile berücksichtigt, wobei \\(\\max(0, P_{Int}(t))\\) ausschließlich positive Energieänderungen selektiert, indem negative Energieänderungen mit einem Nullwert ersetzt werden (siehe Abbildung 13):\n\n\\(P_{Int,Links,pos}(t) = \\max(0, P_{Int,Links}(t))\\)\n\\(P_{Int,Rechts,pos}(t) = \\max(0, P_{Int,Rechts}(t))\\)\n\n\n\n\n\n\n\n\n\n\nAbbildung 13: Beispielhafte Darstellung der positiven Anteile der modellierten inneren Leistung beider Beine mit berechneter Pint_modell als mittlerer Wert der positiven Pint Werte über einen vollständigen Kurbelzyklus.\n\n\n\n\n\nDie durchschnittliche innere Leistung wurde aus der Summe der positiven Leistungsanteile beider Beine berechnet: \\(\\bar{P}_{Int} = \\overline{P_{Int,Links,pos}(t)} + \\overline{P_{Int,Rechts,pos}(t)}\\)\n\nIm weiteren Verlauf dieser Arbeit wird die modellbasiert berechnete innere Leistung als PInt,Modell3 bezeichnet.\n\nDie innere Arbeit (WInt in Kilojoule) über den definierten Belastungszeitraum wurde aus der mittleren inneren Leistung (PInt in Watt) und der Belastungsdauer (t in Sekunden) berechnet: \\(W_{Int} = \\frac{\\bar{P}_{Int} \\cdot t}{1000}\\)\n\n\n\n\n\n\n\nAbbildung 10: Anthropometrische Daten zu Segmentmassen, Massenmittelpunkten und Trägheitsradien\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 14: Anthropometrische Daten zu Segmentmassen, Massenmittelpunkten und Trägheitsradien, jeweils dargestellt relativ zur Segmentlänge (Winter, 2009, S. 86)\n\n\n\n\n\n\n\nR-Code zur Berechnung der Inneren Arbeit auf Basis der Modelldaten\nFür die Implementierung der beschriebenen Berechnungen wurde ein R-Skript erstellt, das die kinematische Modellierung der Beinbewegung realisiert. Der Code beinhaltet die Berechnung der Gelenkpunktpositionen (P1, P2, P3), der Segmentwinkel (φ1, φ2, φ3), der Segmentschwerpunkte von Ober- und Unterschenkel sowie deren Geschwindigkeiten. Darauf aufbauend werden die translatorischen und rotatorischen kinetischen Energien bestimmt und deren zeitliche Änderungen zur Berechnung der inneren Leistung genutzt.\n\n\nCode\n###### Konstanten und Parameter ######\n# Grundlegende Parameter aus Dataframe\nMasse &lt;- as.numeric(Erg_data_df[i, 'Masse'])\nlOS &lt;- as.numeric(Erg_data_df[i, 'lOS'])\nlUS &lt;- as.numeric(Erg_data_df[i, 'lUS'])\nlBein &lt;- as.numeric(Erg_data_df[i, 'lBein'])\nlKurbel &lt;- as.numeric(Erg_data_df[i, 'lKurbel'])\nuOS &lt;- as.numeric(Erg_data_df[i, 'uOS'])\nuUS &lt;- as.numeric(Erg_data_df[i, 'uUS'])\nnD &lt;- as.numeric(Erg_data_df[i, 'nD'])\nUmdrehungen_ges &lt;- as.numeric(Erg_data_df[i, 'Umdrehungen_ges'])\nnD_HZ &lt;- as.numeric(Erg_data_df[i, 'nD_Hz'])\nTestdauer &lt;- 300\n\n# Konstanten und Berechnungsparameter\nFaktor &lt;- 1.00\nS &lt;- lBein * 0.883 * Faktor\nP3x &lt;- -0.150\nP3y &lt;- sqrt((S^2)-(P3x^2))\nP3 &lt;- c(P3x,P3y)\nrRelOS &lt;- 0.1416\nrRelUS &lt;- 0.0433\nlambdaOS &lt;- 0.433\nlambdaUS &lt;- 0.433\nthetaKurbel &lt;- 0.002\nn &lt;- 360\ndelta_t &lt;- 60 / (n * nD)\nT &lt;- 60 / nD\nomega &lt;- 2 * pi * nD / 60\n\n###### Massen- und Trägheitsberechnungen ######\n# Segmentmassen\nmOS &lt;- Masse * rRelOS \nmUS &lt;- Masse * rRelUS \n\n# Trägheitsmomente\nthetaOS &lt;- (1/4) * mOS * (uOS / (2 * pi))^2 + (1/12) * mOS * lOS^2\nthetaUS &lt;- (1/4) * mUS * (uUS / (2 * pi))^2 + (1/12) * mUS * lUS^2\n\n###### Winkel- und Zeitberechnungen ######\ndelta_phi1 &lt;- 2 * pi / n\nphi1 &lt;- seq(0, 2 * pi, by=delta_phi1)[-n]\ngrad &lt;- phi1 * 180 / pi\ntime &lt;- seq(0, T, by=delta_t)[-n]\n\n###### Koordinaten- und Geometrieberechnungen ######\n# P1 Koordinaten\nP1 &lt;- list(lKurbel * sin(phi1), lKurbel * cos(phi1))\n\n# Geometrische Berechnungen\nG4 &lt;- sqrt(sum(P3^2))\ndelta &lt;- acos(P3[2] / S)\nc &lt;- sqrt(lKurbel^2 + S^2 - 2 * S * lKurbel * cos(phi1 + delta))\n\n###### Faktoranpassung und Kontrolle ######\n# Schleife zur Faktoranpassung\nwhile (any(lUS + lOS &lt; c)) {\n    Faktor &lt;- Faktor - 0.01\n    S &lt;- lBein * 0.883 * Faktor\n    P3y &lt;- sqrt((S^2) - (P3x^2))\n    P3 &lt;- c(P3x, P3y)\n    delta &lt;- acos(P3[2] / S)\n    c &lt;- sqrt(lKurbel^2 + S^2 - 2 * S * lKurbel * cos(phi1 + delta))\n}\n\n# Kontrollprüfung\ncontrol &lt;- sum(ifelse(lUS + lOS &lt;= c, 1, 0))\nif (control &gt; 0) {\n    print(\"Mindestens eine Segmentlänge ist größer als c.\")\n} else {\n    print(\"Alle Segmentlängen sind kleiner oder gleich c.\")\n}\n\n# Faktor speichern\nErg_data_df$Faktor_Used[i] &lt;- Faktor\n\n###### Winkelberechnungen ######\n# Grundlegende Winkel\nalpha &lt;- asin(lKurbel * sin(phi1 + delta) / c)\nbeta &lt;- acos((lOS^2 + c^2 - lUS^2) / (2 * lOS * c))\n\n# P2 Koordinaten\nP2 &lt;- list(P3[1] + lOS * cos(pi/2 - (alpha + beta + delta)),\n           P3[2] - lOS * sin(pi/2 - (alpha + beta + delta)))\n\n# Segmentwinkel\nphi2 &lt;- acos((P2[[1]] - P1[[1]]) / lUS)\nphi3 &lt;- acos((P3[2] - P2[[2]]) / lOS)\n\n###### Schwerpunktberechnungen ######\n# Schwerpunktkoordinaten\nSpOS &lt;- list(P3[1] - lambdaOS * (P3[1] - P2[[1]]), \n             P3[2] - lambdaOS * (P3[2] - P2[[2]]))\nSpUS &lt;- list(P2[[1]] - lambdaUS * (P2[[1]] - P1[[1]]), \n             P2[[2]] - lambdaUS * (P2[[2]] - P1[[2]]))\n\n###### Geschwindigkeits- und Energieberechnungen ######\n# Geschwindigkeitsfunktion\nberechneGeschwindigkeit &lt;- function(Sp, delta_t) {\n    diff_x &lt;- c(diff(Sp[[1]]), Sp[[1]][1] - Sp[[1]][length(Sp[[1]])])\n    diff_y &lt;- c(diff(Sp[[2]]), Sp[[2]][1] - Sp[[2]][length(Sp[[2]])])\n    return(sqrt(diff_x^2 + diff_y^2) / delta_t)\n}\n\n# Geschwindigkeiten\nvOS &lt;- berechneGeschwindigkeit(SpOS, delta_t)\nvUS &lt;- berechneGeschwindigkeit(SpUS, delta_t)\n\n# Kinetische Energie (translatorisch)\nEkin_trans &lt;- 0.5 * (mOS * vOS^2 + mUS * vUS^2)\n\n###### Winkelgeschwindigkeiten und rotatorische Energie ######\n# Delta Winkelgeschwindigkeiten\ndelta_phi2 &lt;- c(diff(phi2), phi2[1] - phi2[length(phi2)])\ndelta_phi3 &lt;- c(diff(phi3), phi3[1] - phi3[length(phi3)])\n\n# Winkelgeschwindigkeiten\nomega_SpOS &lt;- delta_phi2 / delta_t\nomega_SpUS &lt;- delta_phi3 / delta_t\nomega_Kurbel &lt;- delta_phi1 / delta_t\n\n# Rotatorische kinetische Energie\nEkin_rot &lt;- 0.5 * (thetaOS * omega_SpOS^2 + thetaUS * omega_SpUS^2 + thetaKurbel * omega_Kurbel^2)\n\n###### Energieänderungen und Leistungsberechnung ######\n# Energieänderungen\ndelta_Ekin_trans &lt;- c(diff(Ekin_trans), Ekin_trans[1] - Ekin_trans[length(Ekin_trans)])\ndelta_Ekin_rot &lt;- c(diff(Ekin_rot), Ekin_rot[1] - Ekin_rot[length(Ekin_rot)])\ndelta_Ekin_ges &lt;- delta_Ekin_rot + delta_Ekin_trans\n\n# Leistungsberechnungen\nPInt_Zyklus_Rechts &lt;- delta_Ekin_ges / delta_t\nPInt_Zyklus_Rechts_Positiv &lt;- ifelse(PInt_Zyklus_Rechts &lt; 0, 0, PInt_Zyklus_Rechts)\n\n# Linkes Bein (180° versetzt)\nverschieben &lt;- 180\nPInt_Zyklus_Links &lt;- c(PInt_Zyklus_Rechts[(verschieben + 1):length(PInt_Zyklus_Rechts)], \n                       PInt_Zyklus_Rechts[1:verschieben])\nPInt_Zyklus_Links_Positiv &lt;- ifelse(PInt_Zyklus_Links &lt; 0, 0, PInt_Zyklus_Links)\n\n# Durchschnittliche Leistung\nPInt_Zyklus_mean &lt;- mean(PInt_Zyklus_Rechts_Positiv) + mean(PInt_Zyklus_Links_Positiv)\n\n\n\n\n\n\nKinematik-Modell der Pedalbewegung\nDie Erfassung der Trittbewegung erfolgte am zweiten Testtag mittels eines Vicon-3D-Bewegungserfassungssystems mit acht Vero-Kameras, die um das Fahrradergometer positioniert wurden. Gemäß dem “Full body modelling with Plug-in Gait”-Protokoll (Vicon, 2022) wurden Nahinfrarot-reflektierende Marker auf enganliegender Kleidung und Radschuhen der Probanden positioniert (Abbildung 15). Diese dienten zur Erfassung der Gelenksegmentpositionen.\n\n\n\n\n\n\nDarstellung der reflektierenden Marker an anatomischen Referenzpunkten eines Probanden\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 15: Darstellung der Markerpositionierung nach dem “Full body modelling with Plug-in Gait”-Protokoll befestigt an enganliegender Kleidung in Frontal-, Seiten- und Rückansicht. Die reflektierenden Marker sind an anatomischen Referenzpunkten der Gelenkachsen platziert, um eine dreidimensionale kinematische Bewegungsanalyse zu ermöglichen.\n\n\n\n\n\n\nDie 3D-Bewegungsdaten wurden mit 100 Hz aufgezeichnet, was bei 1000 Frames pro Durchgang eine präzise Erfassung der Positionskoordinaten ermöglichte. Für die Transformation der 3D-Bewegungsdaten in ein 2D-Modell wurden ausschließlich die linksseitigen Marker (L-Präfix) als Referenzpunkt verwendet. Die ursprünglichen Positionsdaten wurden von Millimeter in Meter konvertiert und relativ zur Kurbelachse als neuem Koordinatenursprung transformiert. Folgende Markerpositionen wurden bestimmt:\n\nAnatomische Referenzpunkte:\n\nKopf (LFHD - Left Front Head, LBHD - Left Back Head): Anteriore und posteriore Kopfposition\nNackenpunkt (C7): Marker am 7. Halswirbel\nLSJC (Left Shoulder Joint Center): Zentrum des Schultergelenks\nLWJC (Left Wrist Joint Center): Zentrum des Handgelenks\nBecken (LASI - Left Anterior Superior Iliac, LPSI - Left Posterior Superior Iliac): Vorderer und hinterer Beckenkamm\nLHJC (Left Hip Joint Center): Zentrum des Hüftgelenks\nLKJC (Left Knee Joint Center): Zentrum des Kniegelenks\nLAJC (Left Ankle Joint Center): Zentrum des Sprunggelenks\nLToe (Left Toe): Zehenmarker\n\nBerechnete Bezugspunkte:\n\nKopfmittelpunkt (aus LFHD und LBHD): Mittelpunkt zwischen anteriorem und posteriorem Kopfmarker\nHüftmittelpunkt (aus LASI und LPSI): Mittelpunkt zwischen vorderem und hinterem Beckenkammmarker\n\n\n\n2D-Simulationsmodelle auf Basis der Kinematik-Daten\nAbbildung 16 und Abbildung 17 präsentieren die entwickelten 2D-Kinematik-Simulationsmodelle für das Radfahren im Sitzen und Stehen. Sie zeigen alle erfassten anatomischen Markerpunkte und berechneten Gelenkzentren, wobei die Kurbelposition sowohl automatisch als auch manuell angepasst werden kann.\n\n\n\n\n\n\n\n\nAbbildung 16: 2D-Simulationsmodell im Sitzen anhand der Kinematik Daten.\n\n\n\n\n\n\n\n\n\n\nAbbildung 17: 2D-Simulationsmodell im Stehen anhand der Kinematik Daten.\n\n\n\n\n\n\n\n2D-Simulationsmodelle auf Basis der Kinematik Daten zur Berechnung von PInt,Kinematik\nAbbildung 18 und Abbildung 19 zeigen die für die Berechnung von PInt,Kinematik relevanten Gelenkpunkte und Segmentschwerpunkte des Ober- und Unterschenkelsegments in beiden Fahrpositionen.\n\n\n\n\n\n\n\n\nAbbildung 18: 2D-Simulationsmodell im Sitzen anhand der Kinematik Daten für die Berechnung von PInt.\n\n\n\n\n\n\n\n\n\n\nAbbildung 19: 2D-Simulationsmodell im Stehen anhand der Kinematik Daten für die Berechnung von PInt.\n\n\n\n\n\nVon den erfassten Kinematik-Daten der neun Probanden konnten nur vier Datensätze für die weitere Analyse verwendet werden, da nur diese die erforderliche Qualität über mindestens vier Belastungsstufen aufwiesen. Für die Berechnung der inneren Leistung wurden dabei ausschließlich die Marker verwendet, die den Modellpunkten P1 (LToe), P2 (LKJC) und P3 (LHJC) entsprachen, während die übrigen erfassten Punkte in diesem Modell nur der Visualisierung der gesamten Tretbewegung dienten.  Die Quantifizierung der inneren Arbeit anhand der kinematischen Messdaten erfolgte analog zur Berechnung der PInt,Modell des Simulationsmodells. Dabei wurden die real erfassten Koordinaten von LToe, LKJC und LHJC für die Modellpunkte P1, P2 und P3 anstelle der modellierten Gelenkpositionen verwendet. Die resultierende innere Leistung, die sich aus den berechneten kinematischen Daten ableitet, wird in der vorliegenden Untersuchung als PInt,Kinematik bezeichnet.\n\n\nExemplarische Verläufe der inneren Leistung, berechnet aus kinematischen Messdaten\n\nSitzenStehen\n\n\n\n\n\n\n\n\n\n\nAbbildung 20: Zeitlicher Verlauf der aus der 3D-Kinematik berechneten positiven Anteile der inneren Leistung (Pint) beider Beine mit gemitteltem Pint-Wert (grau gestrichelt) für 19_5.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 21: Zeitlicher Verlauf der aus der 3D-Kinematik berechneten positiven Anteile der inneren Leistung (Pint) beider Beine mit gemitteltem Pint-Wert (grau gestrichelt) für 19_6.\n\n\n\n\n\n\n\nBasierend auf diesen Berechnungen wurde ein methodischer Ansatz entwickelt, um die innere Leistung auch für Probanden zu approximieren, für die keine validen Kinematikdaten vorlagen. Hierzu wurde zunächst die systematische Abweichung zwischen PInt,Kinematik und PInt,Modell für beide Bedingungen quantifiziert (Gleichung 8):\n\\[\nP_{Int,Diff} =\n\\begin{cases}\nP_{Int,Kinematik,stehen} - P_{Int,Modell,stehen} & \\text{für Bedingung = \"stehen\"} \\\\\nP_{Int,Kinematik,sitzen} - P_{Int,Modell,sitzen} & \\text{für Bedingung = \"sitzen\"}\n\\end{cases}\n\\tag{8}\\]\nDie mittleren Differenzen zwischen PInt,Kinematik und PInt,Modell wurden separat für die Bedingungen “stehen” und “sitzen” ermittelt. Diese systematischen Differenzen dienten als Grundlage für die Modellierung von PInt,Kinematik,Modell gemäß Gleichung 9:\n\\[\nP_{Int,Kinematik,Modell} =\n\\begin{cases}\nP_{Int,Modell} + P_{Int,Diff,stehen} & \\text{für Bedingung \"stehen\"} \\\\\nP_{Int,Modell} + P_{Int,Diff,sitzen} & \\text{für Bedingung \"sitzen\"}\n\\end{cases}\n\\tag{9}\\]\nDieser Ansatz ermöglichte die Generierung vergleichbarer PInt,Kinematik,Modell-Werte für sämtliche Probanden und Bedingungen, auch in Abwesenheit direkter kinematischer Messdaten.\n\nR-Code zur Berechnung der Inneren Arbeit auf Basis realer Kinematikdaten\nDer folgende Code implementiert die Berechnung der inneren Arbeit anhand der experimentell erfassten Kinematikdaten. Basierend auf den räumlichen Koordinaten der Gelenkpunkte (Hüfte, Knie, Sprunggelenk) werden die Segmentwinkel, Schwerpunktgeschwindigkeiten und kinetischen Energien bestimmt. Die zeitlichen Änderungen der kinetischen Energien ergeben die innere Leistung. Durch die Analyse der Zyklen wird die innere Arbeit für beide Beine separat ermittelt.\n\n\nCode\n###### Konstanten und Parameter ######\n# Basisdaten aus Erg_data_df\nMasse &lt;- Erg_data_df[Erg_data_df$Name == name, \"Masse\"]\nuOS &lt;- Erg_data_df[Erg_data_df$Name == name, \"uOS\"]\nuUS &lt;- Erg_data_df[Erg_data_df$Name == name, \"uUS\"]\nlBein &lt;- Erg_data_df[Erg_data_df$Name == name, \"lBein\"]\n\n# Geometrische Konstanten\nFaktor &lt;- 1.0\nS &lt;- lBein * 0.883 * Faktor # Abstand vom Hüftgelenk zur Kurbelachse - Lemond Methode\n\n# Segmentmassen und -eigenschaften\nrRelOS &lt;- 0.1416 # relative Segmentmasse OS\nrRelUS &lt;- 0.0433 # relative Segmentmasse US\nlambdaOS &lt;- 0.4095 # Abstand proximaler Punkt OS - Schwerpunkt\nlambdaUS &lt;- 0.4459 # Abstand proximaler Punkt US - Schwerpunkt\nmOS &lt;- Masse * rRelOS # Segmentmasse OS\nmUS &lt;- Masse * rRelUS # Segmentmasse US\nthetaKurbel &lt;- 0.002 # Trägheitsmoment der Fahrradkurbel [kg m^2]\n\n###### Hauptberechnungen im DataFrame ######\ndf &lt;- df %&gt;%\n  mutate(\n    # Winkel- und Zeitberechnungen\n    phi1 = ifelse(atan2(P1y, P1x) &lt; 0, atan2(P1y, P1x) + 2 * pi, atan2(P1y, P1x)),\n    Grad = phi1 * (180 / pi),\n    delta_t = 1 / 100,\n    delta_phi1 = corrected_delta_phi1(phi1),\n    omega = delta_phi1 / delta_t,\n    nD = omega / (2 * pi) * 60,\n    nD_avg = mean(omega, na.rm = TRUE) / (2 * pi) * 60,\n    T = 60 / nD,\n    \n    # Längenberechnungen\n    lOS = sqrt((P3x-P2x)^2+(P3y-P2y)^2),\n    lUS = sqrt((P2x-LAJC_X)^2+(P2y-LAJC_Y)^2),\n    lOS_avg = mean(lOS),\n    lUS_avg = mean(lUS),\n    \n    # Trägheitsmomente\n    thetaOS = (1/4) * mOS * (uOS / (2 * pi))^2 + (1/12) * mOS * lOS_avg^2,\n    thetaUS = (1/4) * mUS * (uUS / (2 * pi))^2 + (1/12) * mUS * lUS_avg^2,\n    \n    # Schwerpunktberechnungen\n    SpOS_X = P3x - lambdaOS * (P3x-P2x),\n    SpOS_Y = P3y - lambdaOS * (P3y-P2y),\n    SpUS_X = P2x - lambdaOS * (P2x-LAJC_X),\n    SpUS_Y = P2y - lambdaOS * (P2y-LAJC_Y),\n    \n    # Geschwindigkeitsberechnungen\n    d_SpOS = sqrt((lead(SpOS_X) - SpOS_X)^2 + (lead(SpOS_Y) - SpOS_Y)^2),\n    d_SpUS = sqrt((lead(SpUS_X) - SpUS_X)^2 + (lead(SpUS_Y) - SpUS_Y)^2),\n    v_SpOS = ifelse(is.na(d_SpOS), NA, d_SpOS / delta_t),\n    v_SpUS = ifelse(is.na(d_SpUS), NA, d_SpUS / delta_t),\n    \n    # Winkelberechnungen\n    phi2 = acos((P2x-P1x) / lUS),\n    phi3 = acos((P3x-P2x) / lOS),\n    omega_SpOS = (lead(phi2) - phi2) / delta_t,\n    omega_SpUS = (lead(phi3) - phi3) / delta_t,\n    omega_Kurbel = (lead(phi2) - phi2) / delta_t,\n    \n    # Energieberechnungen\n    Ekin_rot = 0.5 * (thetaOS * omega_SpOS^2 + thetaUS * omega_SpUS^2 + thetaKurbel * omega_Kurbel^2),\n    Ekin_trans = 0.5 * (mOS * v_SpOS^2 + mUS * v_SpUS^2),\n    delta_Ekin_rot = lead(Ekin_rot) - Ekin_rot,\n    delta_Ekin_trans = lead(Ekin_trans) - Ekin_trans,\n    delta_Ekin_ges = delta_Ekin_rot + delta_Ekin_trans,\n    PInt_Rechts = delta_Ekin_ges / delta_t\n  ) %&gt;%\n  slice(1:(n() - 2)) %&gt;%\n  select(Frame, Grad, phi1, delta_phi1, omega, T, nD, nD_avg, Masse, everything())\n\n###### Ausreißerbehandlung ######\n# Ausreißergrenzen bestimmen\nQ1 &lt;- quantile(df$PInt_Rechts, 0.25, na.rm = TRUE)\nQ3 &lt;- quantile(df$PInt_Rechts, 0.75, na.rm = TRUE)\nIQR &lt;- Q3 - Q1\nlower_bound &lt;- Q1 - 1.5 * IQR\nupper_bound &lt;- Q3 + 1.5 * IQR\n\n# Ausreißer ersetzen\ndf$PInt_Rechts &lt;- ifelse(df$PInt_Rechts &lt; lower_bound | df$PInt_Rechts &gt; upper_bound, NA, df$PInt_Rechts)\n\n###### Imputation fehlender Werte ######\ndf$PInt_Rechts_imputed &lt;- df$PInt_Rechts\nfor (i in 1:length(df$PInt_Rechts_imputed)) {\n  if (is.na(df$PInt_Rechts_imputed[i])) {\n    valid_indices_above &lt;- which(!is.na(df$PInt_Rechts_imputed[i:min(i+2, nrow(df))]))\n    valid_indices_below &lt;- which(!is.na(df$PInt_Rechts_imputed[max(i-2, 1):i]))\n    \n    if (length(valid_indices_above) &gt; 0 && length(valid_indices_below) &gt; 0) {\n      upper_mean &lt;- mean(df$PInt_Rechts_imputed[i + valid_indices_above], na.rm = TRUE)\n      lower_mean &lt;- mean(df$PInt_Rechts_imputed[i - valid_indices_below], na.rm = TRUE)\n      df$PInt_Rechts_imputed[i] &lt;- mean(c(upper_mean, lower_mean), na.rm = TRUE)\n    } else if (length(valid_indices_above) &gt; 0) {\n      df$PInt_Rechts_imputed[i] &lt;- mean(df$PInt_Rechts_imputed[i + valid_indices_above], na.rm = TRUE)\n    } else if (length(valid_indices_below) &gt; 0) {\n      df$PInt_Rechts_imputed[i] &lt;- mean(df$PInt_Rechts_imputed[i - valid_indices_below], na.rm = TRUE)\n    }\n  }\n}\ndf$PInt_Rechts &lt;- df$PInt_Rechts_imputed\ndf$PInt_Rechts_imputed &lt;- NULL\n\n###### Zyklusanalyse ######\n# Zyklusparameter\nStartwert_Grad &lt;- df$Grad[1]\nToleranz &lt;- 3\n\n# Zyklusendpunkte finden\nEnde_Zyklus_Indizes &lt;- which(abs(df$Grad - Startwert_Grad) &lt;= Toleranz)\ndiff_Ende_Zyklus_Indizes &lt;- c(diff(Ende_Zyklus_Indizes), Toleranz + 1)\ngefilterte_Indizes &lt;- Ende_Zyklus_Indizes[diff_Ende_Zyklus_Indizes &gt; 1]\nAnzahl_Zyklen &lt;- length(gefilterte_Indizes)-1\nEnde_Zyklen &lt;- gefilterte_Indizes[length(gefilterte_Indizes)]\n\n# DataFrame auf komplette Zyklen beschränken\ndf &lt;- df[1:Ende_Zyklen, ]\nLaenge_Zyklus &lt;- round(length(df$Grad) / Anzahl_Zyklen, 0)\n\n###### Berechnung linkes Bein ######\nverschieben &lt;- round(Laenge_Zyklus * 0.5)\nverschobene_Werte &lt;- numeric(nrow(df))\nfor (i in 1:nrow(df)) {\n  index_in_PInt_Rechts &lt;- ((i + verschieben - 1) %% nrow(df)) + 1\n  verschobene_Werte[i] &lt;- df$PInt_Rechts[index_in_PInt_Rechts]\n}\n\n###### Finale Berechnungen und Glättung ######\nfensterbreite &lt;- 15\ndf &lt;- df %&gt;%\n  mutate(\n    PInt_Links = verschobene_Werte,\n    PInt_Links_Positiv = ifelse(PInt_Links &lt; 0, 0, PInt_Links),\n    PInt_Rechts_Positiv = ifelse(PInt_Rechts &lt; 0, 0, PInt_Rechts),\n    PInt_Kinematik = mean(PInt_Rechts_Positiv, na.rm = TRUE) + mean(PInt_Links_Positiv, na.rm = TRUE),\n    PInt_Rechts_smooth = rollmean(PInt_Rechts, fensterbreite, fill = NA, align = \"right\"),\n    PInt_Rechts_Positiv_smooth = ifelse(PInt_Rechts_smooth &lt; 0, 0, PInt_Rechts_smooth),\n    PInt_Links_smooth = rollmean(PInt_Links, fensterbreite, fill = NA, align = \"right\"),\n    PInt_Links_Positiv_smooth = ifelse(PInt_Links_smooth &lt; 0, 0, PInt_Links_smooth)\n  )\n\n###### Ergebnisspeicherung ######\nPInt_Kinematik_list[[name]] &lt;- df\nmean_nD_avg &lt;- mean(df$nD_avg, na.rm = TRUE)\n\n\n\n\n\n\nExplorativ: WInt-Berechnung nach Winter (1979)\nDie ursprüngliche Berechnung der inneren Arbeit PInt,Kinematik,Modell führte zu differenzierten Ergebnissen zwischen den beiden Körperpositionen. Während die Berechnungswerte der sitzenden Position mit den in der Literatur berichteten Werten übereinstimmten, zeigten sich für die Belastungsdurchgänge im Stehen physiologisch nicht plausible Ergebnisse. Eine detaillierte Analyse der Berechnungsergebnisse offenbarte, dass zwar bei identischer Trittrate minimal höhere PInt,Kinematik,Modell-Werte im Stehen auftraten, jedoch die systematisch niedrigeren Trittraten bei gleicher Belastungsintensität zu substantiell geringeren PInt-Werten in der stehenden Position führten.  Diese Diskrepanz steht im Widerspruch zu den berechneten Wirkungsgraden (ηTotal, ηNetto, ηBrutto, alle ohne Berücksichtigung der inneren Leistung) sowie den erhobenen physiologischen Parametern des durchschnittlichen Sauerstoffvolumenstroms (\\(\\dot{V}O_2\\)) und der durchschnittlichen Herzrate. Da diese Parameter bei vergleichbarer mechanischer Leistung keine signifikanten Unterschiede zwischen stehender und sitzender Position aufwiesen, lässt sich die Hypothese ableiten, dass die innere Leistung in beiden Körperpositionen ähnliche Werte aufweisen sollte. Aufgrund der fehlenden Bestätigung dieser Annahme durch die gewählten Berechnungsmethoden wurde nachträglich ein alternativer Berechnungsansatz untersucht. Dieser basiert auf dem Modell von Winter (1979) und wurde gemäß der Methodik von Hansen et al. (2004) für die spezifischen Anforderungen des Radfahrens adaptiert. Die wesentlichen methodischen Erweiterungen gegenüber dem zuvor beschriebenen Berechnungsweg für PInt,Kinematik,Modell umfassten drei zentrale Aspekte: Erstens die Integration der potentiellen Energie der Segmente, zweitens die Berücksichtigung des HAT-Segments (Head-Arms-Trunk) als zusammenhängende biomechanische Einheit und drittens die Annahme eines vollständigen Energietransfers zwischen den Segmenten über die Grenzen der einzelnen Gliedmaßen hinweg.\nFür die Implementierung des alternativen Berechnungsansatzes wurde das bestehende Simulationsmodell, welches auf den Kinematik-Daten basiert, um das HAT-Segment erweitert. Die Berechnung des HAT-Segmentschwerpunkts erfolgte nach der Schwerpunktformel für ein Mehrsegmentsystem (Winter, 2009, S. 88), wobei für jeden Zeitpunkt t die x- und y-Koordinaten des HAT-Segmentschwerpunkts durch die gewichtete Summe der einzelnen Segmentschwerpunkte, normiert auf die Gesamtmasse, bestimmt wurden. Für ein System aus Kopf (KopfCOM), Rumpf (RumpfCOM) und den symmetrischen Segmenten der oberen Extremitäten (OberarmCOM und UnterarmCOM) ergibt sich:\n\\[\nx_{HAT,COM}(t) = \\frac{m_{Kopf} \\cdot x_{Kopf,COM}(t) + m_{Rumpf} \\cdot x_{Rumpf,COM}(t) + 2 \\cdot m_{Oberarm} \\cdot x_{Oberarm,COM}(t) + 2 \\cdot m_{Unterarm} \\cdot x_{Unterarm,COM}(t)}{M_{gesamt}}\n\\tag{10}\\]\n\\[\ny_{HAT,COM}(t) = \\frac{m_{Kopf} \\cdot y_{Kopf,COM}(t) + m_{Rumpf} \\cdot y_{Rumpf,COM}(t) + 2 \\cdot m_{Oberarm} \\cdot y_{Oberarm,COM}(t) + 2 \\cdot m_{Unterarm} \\cdot y_{Unterarm,COM}(t)}{M_{gesamt}}\n\\tag{11}\\]\nFolgende Parameter wurden entsprechend der in Abbildung 14 aufgeführten Werte berechnet:\n\nSegmentmassen: mKopf, mRumpf, mOberarm, mUnterarm\nx-Koordinaten der Segmentschwerpunkte zum Zeitpunkt t: xKopf,COM(t), xRumpf,COM(t), xOberarm,COM(t), xUnterarm,COM(t)\ny-Koordinaten der Segmentschwerpunkte zum Zeitpunkt t: yKopf,COM(t), yRumpf,COM(t), yOberarm,COM(t), yUnterarm,COM(t)\nGesamtmasse des HAT-Segments: Mgesamt\n\n\n2D-Simulationsmodelle auf Basis der Kinematik Daten mit dem HAT-Segment\nAbbildung 22 und Abbildung 23 zeigen zwei 2D-Kinematik-Simulationsmodelle für das Radfahren im Sitzen und Stehen, welche das HAT-Segment einschließen. Dargestellt sind alle relevanten anatomischen Markerpunkte sowie die daraus berechneten Gelenkzentren. Die Schwerpunkte der einzelnen Segmente sind jeweils mit einem kleinen roten Kreuz gekennzeichnet, wobei der Schwerpunkt des HAT-Segments durch ein großes rotes Kreuz hervorgehoben wird.\n\n\n\n\n\n\n\n\nAbbildung 22: 2D-Simulationsmodell im Sitzen anhand der Kinematik Daten mit dem HAT-Segment.\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 23: 2D-Simulationsmodell im Stehen anhand der Kinematik Daten mit dem HAT-Segment.\n\n\n\n\n\nBasierend auf den berechneten Schwerpunktkoordinaten erfolgte die Bestimmung der Gesamtenergie aller Segmente nach Gleichung 3 gemäß dem Modell von Winter (1979). Zur Ermittlung der inneren Arbeit WInt wurden die Energieänderungen über alle analysierten Zeitintervalle entsprechend Gleichung 4 aufsummiert. Die innere mechanische Leistung, die bei dem verwendeten Berechnungsansatz als PInt,Kinematik,HAT bezeichnet wird, ergab sich nach Gleichung 6 aus dem Quotienten der Summe aller positiven Energieänderungen und der kumulierten Zeitdauer dieser Änderungen. Die resultierenden Verläufe der kinetischen Energie (Ekin), potentiellen Energie (Epot) und Gesamtenergie (Egesamt) sowie die daraus abgeleiteten Energieänderungen und die innere Leistung (PInt) sind in den folgenden Abbildungen vergleichend für die sitzende und stehende Position dargestellt.\n\nR-Code zur Berechnung der Inneren Arbeit auf Basis realer Kinematikdaten nach dem Winter-Modell\n\n\nCode\n###### Konstanten und Parameter ######\nMasse &lt;- Erg_data_df[Erg_data_df$Name == name, \"Masse\"]\nuOS &lt;- Erg_data_df[Erg_data_df$Name == name, \"uOS\"]\nuUS &lt;- Erg_data_df[Erg_data_df$Name == name, \"uUS\"]\nlBein &lt;- Erg_data_df[Erg_data_df$Name == name, \"lBein\"]\nFaktor &lt;- 1.0\nS &lt;- lBein * 0.883 * Faktor\nrRelOS &lt;- 0.1416\nrRelUS &lt;- 0.0433\nlambdaOS &lt;- 0.433\nlambdaUS &lt;- 0.433\nmOS &lt;- Masse * rRelOS\nmUS &lt;- Masse * rRelUS\nthetaKurbel &lt;- 0.002\n  \n##### Rechenweg ####\n\n# Linkes Bein\nL_phi1 = ifelse(atan2(L_P1y, L_P1x) &lt; 0, atan2(L_P1y, L_P1x) + 2 * pi, atan2(L_P1y, L_P1x))\nL_Grad = L_phi1 * (180 / pi)\ndelta_t = 1 / 100\nL_delta_phi1 = corrected_delta_phi1(L_phi1)\nL_omega = L_delta_phi1 / delta_t\nL_nD = L_omega / (2 * pi) * 60\nL_nD_avg = mean(L_omega, na.rm = TRUE) / (2 * pi) * 60\n\n# Rechtes Bein\nR_phi1 = ifelse(atan2(R_P1y, R_P1x) &lt; 0, atan2(R_P1y, R_P1x) + 2 * pi, atan2(R_P1y, R_P1x))\nR_Grad = R_phi1 * (180 / pi)\nR_delta_phi1 = corrected_delta_phi1(R_phi1)\nR_omega = R_delta_phi1 / delta_t\n\n# Längen und Trägheitsmomente für beide Beine\nL_lOS = sqrt((L_P3x-L_P2x)^2+(L_P3y-L_P2y)^2)\nL_lUS = sqrt((L_P2x-LAJC_X)^2+(L_P2y-LAJC_Y)^2)\nR_lOS = sqrt((R_P3x-R_P2x)^2+(R_P3y-R_P2y)^2)\nR_lUS = sqrt((R_P2x-RAJC_X)^2+(R_P2y-RAJC_Y)^2)\n\nL_lOS_avg = mean(L_lOS)\nL_lUS_avg = mean(L_lUS)\nR_lOS_avg = mean(R_lOS)\nR_lUS_avg = mean(R_lUS)\n\nthetaOS = (1/4) * mOS * (uOS / (2 * pi))^2 + (1/12) * mOS * L_lOS_avg^2\nthetaUS = (1/4) * mUS * (uUS / (2 * pi))^2 + (1/12) * mUS * L_lUS_avg^2\n\n# HAT Berechnungen\nm_HAT = Masse * 0.678\nlHAT = sqrt((HAT_COMx - L_P3x)^2 + (HAT_COMy - L_P3y)^2)\nthetaHAT = m_HAT * (lHAT * 0.496)^2\n\n# Schwerpunkte für beide Beine\nL_SpOS_X = L_P3x - lambdaOS * (L_P3x-L_P2x)\nL_SpOS_Y = L_P3y - lambdaOS * (L_P3y-L_P2y)\nL_SpUS_X = L_P2x - lambdaOS * (L_P2x-LAJC_X)\nL_SpUS_Y = L_P2y - lambdaOS * (L_P2y-LAJC_Y)\n\nR_SpOS_X = R_P3x - lambdaOS * (R_P3x-R_P2x)\nR_SpOS_Y = R_P3y - lambdaOS * (R_P3y-R_P2y)\nR_SpUS_X = R_P2x - lambdaOS * (R_P2x-RAJC_X)\nR_SpUS_Y = R_P2y - lambdaOS * (R_P2y-RAJC_Y)\n\n# Geschwindigkeiten der Schwerpunkte\nL_d_SpOS = sqrt((lead(L_SpOS_X) - L_SpOS_X)^2 + (lead(L_SpOS_Y) - L_SpOS_Y)^2)\nL_d_SpUS = sqrt((lead(L_SpUS_X) - L_SpUS_X)^2 + (lead(L_SpUS_Y) - L_SpUS_Y)^2)\nR_d_SpOS = sqrt((lead(R_SpOS_X) - R_SpOS_X)^2 + (lead(R_SpOS_Y) - R_SpOS_Y)^2)\nR_d_SpUS = sqrt((lead(R_SpUS_X) - R_SpUS_X)^2 + (lead(R_SpUS_Y) - R_SpUS_Y)^2)\n\nL_v_SpOS = ifelse(is.na(L_d_SpOS), NA, L_d_SpOS / delta_t)\nL_v_SpUS = ifelse(is.na(L_d_SpUS), NA, L_d_SpUS / delta_t)\nR_v_SpOS = ifelse(is.na(R_d_SpOS), NA, R_d_SpOS / delta_t)\nR_v_SpUS = ifelse(is.na(R_d_SpUS), NA, R_d_SpUS / delta_t)\n\n# HAT Bewegungen\nd_HAT_COM = sqrt((lead(HAT_COMx) - HAT_COMx)^2 + (lead(HAT_COMy) - HAT_COMy)^2)\nv_HAT_COM = ifelse(is.na(d_HAT_COM), NA, d_HAT_COM / delta_t)\nphi_HAT = atan2(HAT_COMy - L_P3y, HAT_COMx - L_P3x)\nomega_HAT = (lead(phi_HAT) - phi_HAT) / delta_t\n\n# Winkel und Winkelgeschwindigkeiten für beide Beine\nL_phi2 = acos((L_P2x-L_P1x) / L_lUS)\nL_phi3 = acos((L_P3x-L_P2x) / L_lOS)\nR_phi2 = acos((R_P2x-R_P1x) / R_lUS)\nR_phi3 = acos((R_P3x-R_P2x) / R_lOS)\n\nL_omega_SpOS = (lead(L_phi2) - L_phi2) / delta_t\nL_omega_SpUS = (lead(L_phi3) - L_phi3) / delta_t\nL_omega_Kurbel = (lead(L_phi2) - L_phi2) / delta_t\n\nR_omega_SpOS = (lead(R_phi2) - R_phi2) / delta_t\nR_omega_SpUS = (lead(R_phi3) - R_phi3) / delta_t\nR_omega_Kurbel = (lead(R_phi2) - R_phi2) / delta_t\n\n# Energieberechnungen für beide Beine\nL_Ekin_rot_leg = 0.5 * (thetaOS * L_omega_SpOS^2 + thetaUS * L_omega_SpUS^2 + thetaKurbel * L_omega_Kurbel^2)\nL_Ekin_trans_leg = 0.5 * (mOS * L_v_SpOS^2 + mUS * L_v_SpUS^2)\nL_Ekin_leg = L_Ekin_rot_leg + L_Ekin_trans_leg\nL_Epot_leg = (mOS * 9.81 * L_SpOS_Y) + (mUS * 9.81 * L_SpUS_Y)\n\nR_Ekin_rot_leg = 0.5 * (thetaOS * R_omega_SpOS^2 + thetaUS * R_omega_SpUS^2 + thetaKurbel * R_omega_Kurbel^2)\nR_Ekin_trans_leg = 0.5 * (mOS * R_v_SpOS^2 + mUS * R_v_SpUS^2)\nR_Ekin_leg = R_Ekin_rot_leg + R_Ekin_trans_leg\nR_Epot_leg = (mOS * 9.81 * R_SpOS_Y) + (mUS * 9.81 * R_SpUS_Y)\n\n# Energieberechnungen für HAT\nEkin_trans_HAT = 0.5 * m_HAT * v_HAT_COM^2\nEkin_rot_HAT = 0.5 * thetaHAT * omega_HAT^2\nEkin_HAT = Ekin_trans_HAT + Ekin_rot_HAT\nEpot_HAT = m_HAT * 9.81 * HAT_COMy\n\n# Energieänderungen für beide Beine\nL_delta_Ekin_rot_leg = lead(L_Ekin_rot_leg) - L_Ekin_rot_leg\nL_delta_Ekin_trans_leg = lead(L_Ekin_trans_leg) - L_Ekin_trans_leg\nL_delta_Epot_leg = lead(L_Epot_leg) - L_Epot_leg\n\nR_delta_Ekin_rot_leg = lead(R_Ekin_rot_leg) - R_Ekin_rot_leg\nR_delta_Ekin_trans_leg = lead(R_Ekin_trans_leg) - R_Ekin_trans_leg\nR_delta_Epot_leg = lead(R_Epot_leg) - R_Epot_leg\n\n# Energieänderungen für HAT\ndelta_Ekin_trans_HAT = lead(Ekin_trans_HAT) - Ekin_trans_HAT\ndelta_Ekin_rot_HAT = lead(Ekin_rot_HAT) - Ekin_rot_HAT\ndelta_Epot_HAT = lead(Epot_HAT) - Epot_HAT\ndelta_E_ges_HAT = delta_Ekin_trans_HAT + delta_Ekin_rot_HAT + delta_Epot_HAT\n\n# Gesamte Energieänderung und Leistung für beide Beine\nL_delta_E_ges = L_delta_Ekin_rot_leg + L_delta_Ekin_trans_leg + L_delta_Epot_leg + delta_E_ges_HAT\nR_delta_E_ges = R_delta_Ekin_rot_leg + R_delta_Ekin_trans_leg + R_delta_Epot_leg + delta_E_ges_HAT\n\nE_gesamt = L_Ekin_rot_leg + L_Ekin_trans_leg + L_Epot_leg +\nR_Ekin_rot_leg + R_Ekin_trans_leg + R_Epot_leg +\nEkin_trans_HAT + Ekin_rot_HAT + Epot_HAT\n\n# Energieänderungen berechnen\ndelta_E_gesamt = c(NA, diff(E_gesamt))\n\n# Wint: nur positive Energieänderungen\nWint = pmax(0, delta_E_gesamt)\n\n# PInt aus den positiven Energieänderungen\nPInt_Kinematik = Wint / delta_t\n\nPInt_Kinematik_HAT_avg = mean(PInt_Kinematik, na.rm = TRUE)\n\n\n\nEPotEKin,transEKin,rotEKin,gesamtEGesamtΔEGesamtPInt\n\n\n\n\n\n\n\n\n\n\nAbbildung 24: Zeitlicher Verlauf der geglätteten EPot-Werte, berechnet aus der 3D-Kinematik während des Radfahrens im Sitzen separat für beide Beine sowie das HAT-Segment\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 25: Zeitlicher Verlauf der geglätteten EPot-Werte, berechnet aus der 3D-Kinematik während des Radfahrens im Stehen separat für beide Beine sowie das HAT-Segment\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 26: Zeitlicher Verlauf der geglätteten EKin,trans-Werte, berechnet aus der 3D-Kinematik während des Radfahrens im Sitzen separat für beide Beine sowie das HAT-Segment\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 27: Zeitlicher Verlauf der geglätteten EKin,trans-Werte, berechnet aus der 3D-Kinematik während des Radfahrens im Stehen separat für beide Beine sowie das HAT-Segment\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 28: Zeitlicher Verlauf der geglätteten EKin,rot-Werte, berechnet aus der 3D-Kinematik während des Radfahrens im Sitzen separat für beide Beine sowie das HAT-Segment\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 29: Zeitlicher Verlauf der geglätteten EKin,rot-Werte, berechnet aus der 3D-Kinematik während des Radfahrens im Stehen separat für beide Beine sowie das HAT-Segment\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 30: Zeitlicher Verlauf der geglätteten EKin,gesamt-Werte, berechnet aus der 3D-Kinematik während des Radfahrens im Sitzen separat für beide Beine sowie das HAT-Segment\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 31: Zeitlicher Verlauf der geglätteten EKin,gesamt-Werte, berechnet aus der 3D-Kinematik während des Radfahrens im Stehen separat für beide Beine sowie das HAT-Segment\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 32: Zeitlicher Verlauf der geglätteten EGesamt-Werte, berechnet aus der 3D-Kinematik während des Radfahrens im Sitzen separat für beide Beine sowie das HAT-Segment\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 33: Zeitlicher Verlauf der geglätteten EGesamt-Werte, berechnet aus der 3D-Kinematik während des Radfahrens im Stehen separat für beide Beine sowie das HAT-Segment\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 34: Zeitlicher Verlauf der geglätteten ΔEGesamt-Werte, berechnet aus der 3D-Kinematik während des Radfahrens im Sitzen separat für beide Beine sowie das HAT-Segment\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 35: Zeitlicher Verlauf der geglätteten ΔEGesamt-Werte, berechnet aus der 3D-Kinematik während des Radfahrens im Stehen separat für beide Beine sowie das HAT-Segment\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 36: Zeitlicher Verlauf der geglätteten PInt-Werte, berechnet aus der 3D-Kinematik während des Radfahrens im Sitzen separat für beide Beine sowie das HAT-Segment\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 37: Zeitlicher Verlauf der geglätteten PInt-Werte, berechnet aus der 3D-Kinematik während des Radfahrens im Stehen separat für beide Beine sowie das HAT-Segment\n\n\n\n\n\n\n\n\n\nZusammenhang der PInt,Kinematik,HAT-Werte und der Drehzahl\nIn Abbildung 38 und Abbildung 39 ist der Zusammenhang zwischen den PInt,Kinematik,HAT-Werten und der Trittrate dargestellt. Zur mathematischen Beschreibung dieses Zusammenhangs wurde für beide Körperpositionen eine Approximation durch spezifische Modellfunktionen durchgeführt. Für die stehende Position kommt wie in Gleichung 7 eine Kombination aus linearem und kubischem Term zur Anwendung. Diese Modellierung berücksichtigt sowohl den erwarteten linearen Anstieg der Änderungen der potentiellen Energie der Segmente als auch die kubische Zunahme der Änderungen der kinetischen Energie der Segmente mit steigender Trittrate (Sjøgaard et al., 2002). Die polynomiale Regression ergab vermutlich aufgrund der begrenzten Datenbasis in einem eingeschränkten Drehzahlbereich einen linearen Zusammenhang als beste Approximation. Für die sitzende Position wurde ein rein kubischer Zusammenhang angenommen. Diese Vereinfachung basiert auf der Annahme, dass die Änderungen der potentiellen Energie der Körpersegmente im Sitzen einen vernachlässigbaren Einfluss auf die PInt,Kinematik,HAT-Werte haben und die innere Leistung primär durch die Veränderungen der kinetischen Energie der Segmente bestimmt wird.\n\nPInt,Kinematik,HAT x nDPInt,Kinematik,HAT,kg x nD\n\n\n\n\n\n\n\n\nAbbildung 38: Zusammenhang der PInt,Kinematik,HAT-Werte und der Drehzahl\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 39: Zusammenhang der gewichtsbezogenen PInt,Kinematik,HAT-Werte und der Drehzahl\n\n\n\n\n\n\nDie berechneten PInt,Kinematik,HAT-Werte im Sitzen betrugen durchschnittlich 38.1 ± 15.8 Watt bei einer mittleren Trittrate von 89.2 ± 8.6 U/min. Diese Werte zeigen eine hohe Übereinstimmung mit den zuvor ermittelten PInt,Kinematik-Werten von 40.21 ± 14.38 Watt für denselben Datensatz. Ein Vergleich mit den IPWinter-Berechnungen aus Hansen et al. (2004) bestätigt die Validität des Modells für die sitzende Position. Für Trittraten von 61, 88 und 115 U·min-1 wurden dort PInt-Werte von 7.6, 29.4 und 80.2 Watt berichtet. Die aus der kubischen Funktion in Abbildung 38 abgeleiteten Werte für PInt,Kinematik,HAT ergaben für diese Trittraten vergleichbare Werte von 11.8, 35.4 und 79.0 Watt.\nIm Stehen zeigten sich jedoch deutliche Diskrepanzen. Die PInt,Kinematik,HAT-Werte lagen mit durchschnittlich 100.08 ± 20.06 Watt bei einer Trittrate von 72.3 ± 8.7 U·min-1 deutlich über den berechneten PInt,Kinematik-Werten von 23.6 ± 8.4 Watt für denselben Datensatz. Entgegen der auf Basis physiologischer Belastungsparameter erwarteten Äquivalenz zwischen Stehen und Sitzen der gleichen Belastungsintensität, waren die PInt,Kinematik,HAT-Werte im Stehen systematisch erhöht.\nDiese Ergebnisse legen nahe, dass das entwickelte Modell für die stehende Position noch Optimierungsbedarf aufweist. Eine mögliche Ursache könnte in der Überschätzung der potentiellen Energieänderungen des HAT-Segments liegen, die einen erheblichen Anteil der Gesamtenergieänderungen ausmachen. Eine Anpassung der Segmentmassen unter Berücksichtigung der Gewichtsverteilung auf die Arme könnte zu den erwarteten, zwischen Sitzen und Stehen vergleichbaren PInt-Werten führen. Weitere Untersuchungen sind erforderlich, um ein valides Modell zur Berechnung der inneren Arbeit in stehender Position zu entwickeln.",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Innere Arbeit"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Innere_Arbeit.html#quellenverzeichnis",
    "href": "Theoretischer_Hintergrund/Innere_Arbeit.html#quellenverzeichnis",
    "title": "Innere Arbeit",
    "section": "Quellenverzeichnis",
    "text": "Quellenverzeichnis\n\n\nBarstow, T. J. (1994). Characterization of VO2 kinetics during heavy exercise. Medicine and science in sports and exercise, 26(11), 1327–1334.\n\n\nBearden, S. E., & Moffatt, R. J. (2000). V̇O2 kinetics and the O2 deficit in heavy exercise. Journal of Applied Physiology, 88(4), 1407–1412. https://doi.org/10.1152/jappl.2000.88.4.1407\n\n\nCavagna, G. A., & Kaneko, M. (1977). Mechanical work and efficiency in level walking and running. The Journal of physiology, 268(2), 467–481. https://doi.org/10.1113/jphysiol.1977.sp011866\n\n\nCavagna, G. A., Thys, H., & Zamboni, A. (1976). The sources of external work in level walking and running. The Journal of Physiology, 262(3), 639–657. https://doi.org/10.1113/jphysiol.1976.sp011613\n\n\nEttema, G., & Lorås, H. W. (2009). Efficiency in cycling: a review. European journal of applied physiology, 106(1), 1–14. https://doi.org/10.1007/s00421-009-1008-7\n\n\nFenn, W. O. (1930). Work against Gravity and Work due to Velocity Changes in Running. American Journal of Physiology, 93, 433–462.\n\n\nFrancescato, M. P., Giradis, M., & Di Prampero, P. E. (1995). Oxygen cost of internal work during cycling. European Journal of Applied Physiology, 72, 51–57.\n\n\nGaesser, G. A., & Brooks, G. A. (1975). Efficiency During Rate Exercise : Effects of Speed and Work. Journal of applied physiology, 38(6), 1132–1139.\n\n\nGordon, C. C., Blackwell, C. L., Bradtmiller, B., Parham, J. L., Barrientos, P., Paquette, S. P., Corner, B. D., Carson, J. M., Venezia, J. C., Rockwell, B. M., Mucher, M., & Shirley, K. (2012). 2012 Anthropometric Survey of U.S. Army Personnel: Methods and Summary Statistics (S. 444). U.S. Army Natick Soldier Research, Development; Engineering Center.\n\n\nHagberg, J. M., Mullin, J. P., Giese, M. D., & Spitznagel, E. (1981). Effect of pedaling rate on submaximal exercise responses of competitive cyclists. Journal of Applied Physiology Respiratory Environmental and Exercise Physiology, 51(2), 447–451. https://doi.org/10.1152/jappl.1981.51.2.447\n\n\nHansen, E. A., Jørgensen, L. V., & Sjøgaard, G. (2004). A physiological counterpoint to mechanistic estimates of \"internal power\" during cycling at different pedal rates. European Journal of Applied Physiology, 91(4), 435–442. https://doi.org/10.1007/s00421-003-0997-x\n\n\nHintzy-Cloutier, F., Zameziati, K., & Belli, A. (2003). Influence of the base-line determination on work efficiency during submaximal cycling. Journal of Sports Medicine and Physical Fitness, 43(1), 51–56.\n\n\nMinetti, A. E. (1998). The biomechanics of skipping gaits: a third locomotion paradigm? Proceedings. Biological sciences, 265(1402), 1227–1235. https://doi.org/10.1098/rspb.1998.0424\n\n\nMinetti, A. E. (2011). Bioenergetics and biomechanics of cycling: The role of ’internal work’. European Journal of Applied Physiology, 111(3), 323–329. https://doi.org/10.1007/s00421-010-1434-6\n\n\nMinetti, A. E., Pinkerton, J., & Zamparo, P. (2001). From bipedalism to bicyclism: evolution in energetics and biomechanics of historic bicycles. Proceedings. Biological sciences, 268(1474), 1351–1360. https://doi.org/10.1098/rspb.2001.1662\n\n\nSietsema, K. E., Sue, D. Y., Stringer, W. W., & Ward, S. A. (2020). Wasserman & Whipp’s Principles of Exercise Testing and Interpretation: Including Pathophysiology and Clinical Applications (6. Edition, S. 600). Wolters Kluwer.\n\n\nSjøgaard, G., Hansen, E. A., & Osada, T. (2002). Blood flow and oxygen uptake increase with total power during five different knee-extension contraction rates. Journal of Applied Physiology, 93(5), 1676–1684. https://doi.org/10.1152/japplphysiol.00259.2002\n\n\nTokui, M., & Hirakoba, K. (2008). Estimation of oxygen cost of internal power during cycling exercise with changing pedal rate. Journal of Physiological Anthropology, 27(3), 133–138. https://doi.org/10.2114/jpa2.27.133\n\n\nVicon. (2022). Plug-in Gait Reference Guide. http://www.crcnetbase.com/doi/10.1201/b10400-14\n\n\nWells, R., Morrissey, M., & Hughson, R. (1986). Internal work and physiological responses during concentric and eccentric cycle ergometry. European Journal of Applied Physiology and Occupational Physiology, 55(3), 295–301. https://doi.org/10.1007/BF02343802\n\n\nWhipp, J., & Wassermann, K. (1969). Efficiency of muscular work. Journal of Applied Physiology, 26(5), 644–648.\n\n\nWidrick, J. J., Freedson, P. S., & Hamill, J. (1992). Effect of internal work on the calculation of optimal pedaling rates. Medicine and science in sports and exercise, 24(3), 376–382.\n\n\nWillems, P. A., Cavagna, G. A., & Heglund, N. C. (1995). External, internal and total work in human locomotion. The Journal of experimental biology, 198(Pt 2), 379–393. https://doi.org/10.1242/jeb.198.2.379\n\n\nWinter, D. A. (1979). A new definition of mechanical work done in human movement. Journal of Applied Physiology Respiratory Environmental and Exercise Physiology, 46(1), 79–83. https://doi.org/10.1152/jappl.1979.46.1.79\n\n\nWinter, D. A. (2009). Biomechanics and Motor Control of Human Movement winter (4. Edition, S. 384). Wiley.",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Innere Arbeit"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Innere_Arbeit.html#footnotes",
    "href": "Theoretischer_Hintergrund/Innere_Arbeit.html#footnotes",
    "title": "Innere Arbeit",
    "section": "Fußnoten",
    "text": "Fußnoten\n\n\nHinweis zur Notation: In den textlichen Beschreibungen werden die Größen PInt,Modell, PInt,Kinematik, PInt,Kinematik_Modell usw. der Einfachheit halber ohne Überstrich dargestellt. Dabei handelt es sich jedoch um die arithmetischen Mittelwerte über dem jeweiligen Belastungszeitraum. Eine explizite Zeitabhängigkeit wird durch die Notation (t) gekennzeichnet, wie beispielsweise bei PInt,Modell(t). Diese Notationsweise wird auch in den folgenden Abschnitten für die hier beschriebenen Parameter beibehalten.↩︎\nIm Folgenden werden einige Parameter mit zwei verschiedenen Bezeichnungen angegeben (Parameter/Alternative Bezeichnung in der Abbildung 9), wobei die zweite Bezeichnung der Darstellung in der Abbildung 9 und die erste der Bezeichnung in den Formeln und dem Code entspricht.↩︎\nHinweis zur Notation: In den textlichen Beschreibungen werden die Größen PInt,Modell, PInt,Kinematik, PInt,Kinematik_Modell usw. der Einfachheit halber ohne Überstrich dargestellt. Dabei handelt es sich jedoch um die arithmetischen Mittelwerte über dem jeweiligen Belastungszeitraum. Eine explizite Zeitabhängigkeit wird durch die Notation (t) gekennzeichnet, wie beispielsweise bei PInt,Modell(t). Diese Notationsweise wird auch in den folgenden Abschnitten für die hier beschriebenen Parameter beibehalten.↩︎",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Innere Arbeit"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Energieumsatzberechnung/Aerobe_Energiebereitstellung.html",
    "href": "Theoretischer_Hintergrund/Energieumsatzberechnung/Aerobe_Energiebereitstellung.html",
    "title": "Aerobe Energiekomponente (WAerob)",
    "section": "",
    "text": "Um den aeroben Energieanteil am physiologischen Gesamtenergieumsatz (WAerob) zu bestimmen, muss zu jedem Zeitpunkt t der Sauerstoffvolumenstrom über den Belastungszeitraum (\\(\\dot{V}O_{2,Belastung}(t)\\)) sowie der Ruheumsatz bekannt sein, welcher dem Sauerstoffvolumenstrom in Ruhe (\\(\\dot{V}O_{2, Ruhe}(t)\\)) entspricht.",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Energieumsatzberechnung",
      "Aerobe Energiekomponente (W~Aerob~)"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Energieumsatzberechnung/Aerobe_Energiebereitstellung.html#bestimmung-des-ruheumsatzes",
    "href": "Theoretischer_Hintergrund/Energieumsatzberechnung/Aerobe_Energiebereitstellung.html#bestimmung-des-ruheumsatzes",
    "title": "Aerobe Energiekomponente (WAerob)",
    "section": "Bestimmung des Ruheumsatzes",
    "text": "Bestimmung des Ruheumsatzes\nDer Ruheumsatz bezeichnet die Energiemenge für die Aufrechterhaltung der physiologischen Grundfunktionen wie Atmung, Kreislauf, Verdauung und unwillkürlichem Muskeltonus in einem normalen Ruhezustand. Im Gegensatz zum Grundumsatz, der unter streng standardisierten Bedingungen (morgens, nüchtern, liegend) gemessen wird, beschreibt der Ruheumsatz den Energieumsatz in einem alltäglichen Ruhezustand. Die Höhe des Ruheumsatzes wird maßgeblich von individuellen Faktoren wie Körpermasse, Geschlecht, Alter und besonders dem Anteil der stoffwechselaktiven Muskulatur beeinflusst. Für präzise Berechnungen des Energieumsatzes während körperlicher Aktivität dient der Ruheumsatz als Bezugsgröße (Ciba-Geigy, 1977, S. 225).\nFür die praktische Bestimmung des Grundumsatzes stehen zwei verschiedene Methoden zur Verfügung: Der Sauerstoffvolumenstrom in Ruhe \\(\\dot{V}O_{2, Ruhe}(t)\\) lässt sich entweder durch direkte Messung mittels Spirometrie oder durch Berechnung mittels etablierter Formeln bestimmen. In dieser Arbeit wurden dafür Gleichung 1 und Gleichung 2 verwendet. Gleichung 1 ermöglicht die Berechnung des täglichen Grundumsatzes (h) in kcal in Abhängigkeit von Geschlecht, Körpermasse, Körperlänge und Alter (Harris & Benedict, 1918):\n\\[\nh_{f, m}\\,[kcal] =\n\\begin{cases}\nh_{f} = 655.1 + (9.563 \\cdot \\text{Körpermasse [kg]}) + (1.850 \\cdot \\text{Körperlänge [cm]}) - (4.676 \\cdot \\text{Alter [Jahre]}) \\rightarrow \\text{Frauen}\\\\    \nh_{m} = 66.5\\; + (13.75 \\cdot \\text{Körpermasse [kg]}) + (5.003 \\cdot \\text{Körperlänge [cm]}) - (6.775 \\cdot \\text{Alter [Jahre]}) \\rightarrow \\text{Männer}\n\\end{cases}\n\\tag{1}\\]\nNach der Berechnung des Grundumsatzes erfolgte die Bestimmung des kalorischen Äquivalents (kÄ) anhand des individuell gemessenen RQ (t) und Tabelle 1, woraus sich der Ruheumsatz (RMR, Englisch für “resting metabolic rate”) im Liegen in Liter pro Minute berechnen ließ. Um vom Ruheumsatz im Liegen auf den Ruheumsatz im Stehen zu kommen, wurde der berechnete Ruheumsatz mit dem Faktor \\(\\frac{1.39}{1.08} = 1.287\\) für Männer und \\(\\frac{1.15}{0.90} = 1.278\\) für Frauen, basierend auf Abbildung 1, multipliziert (Ciba-Geigy, 1977, S. 225). Der mit folgender Gleichung berechnete RMR entspricht \\(\\dot{V}O_{2, Ruhe}\\):\n\\[\nRMR_{f, m}\\,[l \\cdot min^{-1}] =\n\\begin{cases}\nRMR_{f} = \\;\\left( \\frac{h_{f}}{24\\, \\cdot\\, 60\\, \\cdot\\, kÄ} \\right) \\cdot 4.1868 \\cdot 1.278 \\rightarrow \\text{Frauen} \\\\\nRMR_{m} = \\left( \\frac{h_{m}}{24\\, \\cdot\\, 60\\, \\cdot\\, kÄ} \\right) \\cdot 4.1868 \\cdot 1.287 \\rightarrow \\text{Männer}\n\\end{cases}\n\\tag{2}\\]\n\n\n\n\n\n\nAbbildung 1: Energieumsatz bei verschiedenen Tätigkeiten (Ciba Geigy, 1977, S.225)\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 1: Energieumsatz bei verschiedenen Tätigkeiten (Ciba Geigy, 1977, S.225).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRMR-Beispielrechnung\n\n\n\nParameter:\n\nKörpermasse = 75 kg\nKörperlänge = 180 cm\nAlter = 25 Jahre\nRQ = 0.77 entspricht kÄ von 19.946 [kJ • l-1] (siehe Tabelle 1)\n\n\\(h_{m} = 66.5 + (13.75 \\cdot \\text{75}) + (5.003 \\cdot \\text{180}) - (6.775 \\cdot \\text{25}) = 1828.9\\, [\\text{kcal}]\\) \\(RMR_{m} = \\left( \\frac{1828.9}{24 \\cdot 60 \\cdot 19.946} \\right) \\cdot 4.1868 \\cdot 1.287 = 0.344\\, [l \\cdot min^{-1}]\\)\n\n\nIn der vorliegenden Studie wurde der durchschnittliche \\(\\dot{V}O_{2, Ruhe}\\) über einen mehrminütigen Messzeitraum etwa 10 Minuten vor Beginn der ersten Belastung auf dem Fahrradergometer in sitzender Position ermittelt. Zusätzlich erfolgte eine Bestimmung durch die oben beschriebene Berechnungsmethode. Da aufgrund verschiedener Faktoren, wie beispielsweise Stress, Nahrungsaufnahme oder unterschiedliche Umgebungsbedingungen, die Werte der gemessenen durchschnittlichen \\(\\dot{V}O_{2, Ruhe}\\) im Vergleich zu den Normwerten unnatürlich hoch sein können, wurde der gemessene \\(\\dot{V}O_{2,Ruhe}\\)-Durchschnittswert nur verwendet, wenn er maximal 20% größer war als der berechnete. Andernfalls wurde der berechnete Wert verwendet.\n\n\n\n\n\n\n\n\n\n\n\n\n\nTabelle 1: Zusammenhang zwischen dem respiratorischem Koeffizienten und dem kalorischen Äquivalent in [kcal · l-1] und [kJ · l-1] (Zuntz, 1901, S.260; Stegemann, 1991, S.59)",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Energieumsatzberechnung",
      "Aerobe Energiekomponente (W~Aerob~)"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Energieumsatzberechnung/Aerobe_Energiebereitstellung.html#berechnung-der-aeroben-energiekomponente-waerob",
    "href": "Theoretischer_Hintergrund/Energieumsatzberechnung/Aerobe_Energiebereitstellung.html#berechnung-der-aeroben-energiekomponente-waerob",
    "title": "Aerobe Energiekomponente (WAerob)",
    "section": "Berechnung der aeroben Energiekomponente WAerob",
    "text": "Berechnung der aeroben Energiekomponente WAerob\nZur Bestimmung des aeroben Arbeitsumsatzes (WAerob) während eines Belastungszeitraums wurde zunächst der Netto-Sauerstoffvolumenstrom \\(\\dot{V}O_{2,Netto}(t)\\) nach Gleichung 3 berechnet:\n\\[\n\\dot{V}O_{2,Netto}(t)\\;[l \\cdot min^{-1}] = \\dot{V}O_{2,Belastung}(t) - \\dot{V}O_{2,Ruhe} (t)\n\\tag{3}\\]\nDer aerobe Anteil am physiologischen Gesamtenergieumsatz (WAerob) konnte durch Multiplikation des mittleren Netto-Sauerstoffvolumenstroms (\\(\\overline{\\dot{V}O_{2,Netto}}\\)) mit der Belastungsdauer t und dem mittleren kalorischen Äquivalent (\\(\\overline{kÄ}_{Bel}\\)) aus Tabelle 1 bestimmt werden (Stegemann, 1991, S. 59):\n\\[\nW_{Aerob}\\;[kJ] = \\overline{\\dot{V}O_{2,Netto}} \\cdot \\overline{kÄ}_{Bel} \\cdot  t\n\\tag{4}\\]\nDie mittlere aerobe Leistung (\\(\\overline{P}_{Aerob}\\)) wurde durch Division der WAerob in kJ durch die Belastungsdauer in Sekunden berechnet:\n\\[\n\\overline{P}_{Aerob}\\;[W] = \\frac{W_{Aerob}}{t} \\cdot 1000\n\\tag{5}\\]",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Energieumsatzberechnung",
      "Aerobe Energiekomponente (W~Aerob~)"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Energieumsatzberechnung/Aerobe_Energiebereitstellung.html#sauerstoffvolumenstrom-kinetik",
    "href": "Theoretischer_Hintergrund/Energieumsatzberechnung/Aerobe_Energiebereitstellung.html#sauerstoffvolumenstrom-kinetik",
    "title": "Aerobe Energiekomponente (WAerob)",
    "section": "Sauerstoffvolumenstrom-Kinetik",
    "text": "Sauerstoffvolumenstrom-Kinetik\nWährend die in Gleichung 4 beschriebenen Berechnungen der WAerob auf Durchschnittswerten des \\(\\dot{V}O_{2,Belastung}(t)\\) basieren, ermöglicht die Analyse der Kinetik des Sauerstoffvolumenstroms zu Belastungsbeginn und während der Belastung weitere Einblicke in die Charakteristik der aeroben Energiebereitstellung. Von besonderem Interesse sind dabei die Geschwindigkeit der initialen Anpassung sowie das Erreichen oder Ausbleiben eines Fließgleichgewichts und dessen absolute Höhe. Diese Aspekte lassen sich durch die mathematische Modellierung des Sauerstoffvolumenstroms quantifizieren.\nDer Anstieg des Sauerstoffvolumenstroms \\(\\dot{V}O_{2,Belastung}(t)\\) zu Beginn einer leichten bis moderaten körperlichen Belastung auf dem Fahrradergometer unterhalb der Laktatschwelle (LT1) wurde traditionell in der Literatur als monoexponentiell beschrieben, mit einer Amplitude von ungefähr 9–10 ml O2·W-1·min-1 (Barstow & Mole, 1991; Bearden & Moffatt, 2000). Die Zeitkonstante \\(\\tau_{\\text{Start}}\\) beschreibt die Geschwindigkeit, mit der der Sauerstoffvolumenstrom den Gleichgewichtszustand \\(\\dot{V}O_{2,\\text{Brutto, SS}}\\) erreicht. Dieser Gleichgewichtszustand, auch Steady-State genannt, zeichnet sich durch ein Gleichgewicht zwischen Energiebedarf und aerober Energiebereitstellung aus, was sich in einem Plateauwert der \\(\\dot{V}O_{2,Belastung}(t)\\) widerspiegelt. Dies lässt sich mit der folgenden Formel darstellen (Clark, 2014; Francescato et al., 2003; Henry & DeMoor, 1956; Hill et al., 1924; Margaria et al., 1965; Özyener et al., 2001; Whipp, 1971):\n\\[\n\\dot{V}O_{2,\\text{Belastung}}\\,(t) = \\dot{V}O_{2,\\text{Amplitude}} \\cdot \\left(1 - e^{-\\frac{t - TD}{\\tau_{\\text{Start}}}}\\right) + \\dot{V}O_{2,\\text{Start}}\n\\tag{6}\\]\nDabei beschreibt \\(\\dot{V}O_{2,\\text{Start}}\\) den Sauerstoffvolumenstrom zu Beginn der Belastung und \\(\\dot{V}O_{2,\\text{Amplitude}}\\) die Differenz zwischen Start- und Brutto-Steady-State-Wert. Der Brutto-Steady-State-Wert \\(\\dot{V}O_{2,\\text{Brutto, SS}}\\) ergibt sich aus der Summe von \\(\\dot{V}O_{2,\\text{Amplitude}}\\) und \\(\\dot{V}O_{2,\\text{Start}}\\) und wurde in der vorliegenden Untersuchung zum Zeitpunkt 4\\(\\tau\\) bestimmt. Durch Subtraktion des Ruhe-Sauerstoffvolumenstroms \\(\\dot{V}O_{2, \\text{Ruhe}}\\) von diesem Brutto-Steady-State-Wert wurde der Netto-Sauerstoffvolumenstrom \\(\\dot{V}O_{2,\\text{Netto, SS}}\\) berechnet. Die Wahl des Zeitpunkts 4\\(\\tau\\) basiert darauf, dass zu diesem Zeitpunkt bereits 98% des Gesamtanstiegs des Sauerstoffvolumenstroms stattgefunden haben. Das genaue methodische Vorgehen zur Bestimmung der \\(\\dot{V}O_{2,\\text{Brutto, SS}}\\)- und \\(\\dot{V}O_{2,\\text{Netto, SS}}\\)-Werte wird am Ende dieses Kapitels detailliert beschrieben.  In der folgenden Shiny-App wird ein Beispiel der in Gleichung 6 beschriebenen Modellfunktion gezeigt. Eigene \\(\\dot{V}O_{2}\\)-Daten können hochgeladen und mittels nichtlinearer Regression an die Beispieldaten angepasst werden.\n\nShiny-App: Monoexponentielle \\(\\dot{V}O_{2}\\)-Modellfunktion\n#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| viewerHeight: 900\nlibrary(shiny)\nlibrary(plotly)\nlibrary(minpack.lm)\n\n# Beispieldaten\nt_data &lt;- c(0, 2.8, 5.3, 8.6, 10.4, 15.2, 19.7, 22.5, 24.5, 26.2, 28.2, 31.6, 33.5, 35.3, 37, 38.5, 40.3, 41.9, 43.5, 45.2, 46.8, 48.4, 50, 51.5, 53.3, 54.8, 56.5, 57.9, 59.5, 61.1, 62.9, 64.3, 65.8, 67.7, 69.1, 70.7, 72.4, 73.9, 75.7, 77.2, 78.9, 80.5, 82.7, 84.1, 85.5, 87, 88.6, 90.2, 91.5, 92.9, 94.3, 95.8, 97.6, 99.1, 100.5, 102.1, 103.5, 105.3, 106.6, 108.1, 109.6, 111.4, 112.8, 114.3, 115.8, 117.7, 119.1, 120.8, 122.3, 124.2, 125.7, 127.2, 128.8, 131.1, 132.5, 133.9, 135.4, 136.9, 138.4, 140, 141.3, 143, 144.5, 146.1, 147.6, 149, 150.5, 152.3, 153.9, 155.6, 156.9, 158.6, 160.1, 162.4, 163.7, 165.1)\nVO2_data &lt;- c(0.465, 0.34, 0.466, 0.503, 0.452, 0.687, 0.846, 0.963, 0.936, 1.125, 1.238, 1.541, 1.395, 1.685, 1.689, 1.622, 1.917, 1.732, 1.835, 1.801, 1.664, 1.744, 1.891, 1.85, 1.858, 1.89, 2.108, 1.962, 1.992, 1.972, 2.026, 1.868, 1.949, 2.033, 1.887, 1.856, 2.112, 2.117, 2.129, 1.994, 2.03, 1.925, 1.916, 1.949, 1.956, 2.119, 1.894, 2.034, 1.766, 1.994, 1.985, 2.068, 1.796, 2.172, 2.09, 2.017, 2.152, 2.238, 2.027, 2.214, 2.159, 2.098, 1.963, 2.063, 2.292, 2.21, 1.84, 2.102, 2.1, 2.086, 2.008, 2.048, 1.978, 1.87, 2.16, 1.977, 2.335, 2.053, 2.084, 2.056, 2.005, 2.161, 2.088, 2.161, 2.078, 2.038, 2.117, 2.148, 2.043, 2.342, 2.142, 2.306, 2.043, 1.881, 1.918, 2.252)\n\n# UI\nui &lt;- fluidPage(\n  titlePanel(\"V̇O2-Modellfunktion\"),\n  fluidRow(\n    column(3,\n           style = \"height: 90vh; overflow-y: auto;\",\n           \n           tags$h4(tags$strong(\"Modellparameter:\")),\n           sliderInput(\"VO2\", \"V̇O2 Amplitude\", min = 0.0, max = 7.0, value = 1.7, step = 0.001),\n           sliderInput(\"Tau\", \"Tau\", min = 5, max = 360, value = 23, step = 1.0),\n           sliderInput(\"VO2_Start\", \"V̇O2 Start\", min = 0.0, max = 4.0, value = 0.4, step = 0.001),\n           sliderInput(\"VO2_Ruhe\", \"V̇O2 Ruhe\", min = 0, max = 1, value = 0.3, step = 0.001),\n           sliderInput(\"time_delay\", \"Zeitverzögerung\", min = 0, max = 300, value = 11, step = 1),\n           conditionalPanel(\n             condition = \"output.showFitSlider\",\n             sliderInput(\"nlsLM_end\", \"nlsLM Ende\", min = 10, max = max(t_data), value = max(t_data), step = 1)\n           ),\n           actionButton(\"toggle_data\", \"Beispieldaten einfügen\"),\n           br(), br(),\n           fileInput(\"file_upload\", \"CSV-Datei hochladen\", accept = \".csv\"),\n           tags$h4(tags$strong(\"Modelanpassung:\")),\n           actionButton(\"optimize\", \"nlsLM - Fit\"),\n           br(), br(),\n           tags$h4(tags$strong(\"Berechnung - Ruhesauerstoffaufnahme:\")),\n           radioButtons(\"geschlecht\", \"Geschlecht:\", choices = c(\"Männlich\", \"Weiblich\")),\n           sliderInput(\"koerpermasse\", \"Körpermasse [kg]:\", min = 40, max = 150, value = 55),\n           sliderInput(\"koerperlaenge\", \"Körperlänge [cm]:\", min = 140, max = 220, value = 160),\n           sliderInput(\"alter\", \"Alter [Jahre]:\", min = 18, max = 100, value = 24),\n           sliderInput(\"rq\", \"RQ:\", min = 0.7, max = 1.0, value = 0.77, step = 0.01),\n           actionButton(\"berechne_vo2_ruhe\", \"VO2 Ruhe berechnen\")\n    ),\n    mainPanel(\n      width = 9,\n      plotlyOutput(\"plot\"),\n      uiOutput(\"instructions\")\n    )\n  )\n)\n\n# Server\nserver &lt;- function(input, output, session) {\n  show_data &lt;- reactiveVal(FALSE)\n  uploaded_data &lt;- reactiveVal(NULL)\n  \n  observeEvent(input$toggle_data, {\n    show_data(!show_data())\n    max_t &lt;- max(t_data)\n    updateSliderInput(session, \"nlsLM_end\", min = input$time_delay, max = max_t, value = max_t)\n  })\n  \n  observeEvent(input$file_upload, {\n    req(input$file_upload)\n    df &lt;- read.csv(input$file_upload$datapath)\n    if (\"t_s\" %in% names(df) && \"VO2_t\" %in% names(df)) {\n      uploaded_data(df)\n      show_data(TRUE)\n      max_t &lt;- max(df$t_s)\n      updateSliderInput(session, \"nlsLM_end\", min = input$time_delay, max = max_t, value = max_t)\n    } else {\n      showModal(modalDialog(\n        title = \"Invalid CSV\",\n        \"Die csv-Datei muss 't_s' und 'VO2_t' als Spaltennamen beinhalten.\",\n        easyClose = TRUE,\n        footer = NULL\n      ))\n    }\n  })\n  \n  # Neue Funktionen zur Berechnung des Grundumsatzes und RMR\n  berechne_grundumsatz &lt;- function(geschlecht, masse, laenge, alter) {\n    if (geschlecht == \"Männlich\") {\n      return(66.5 + (13.75 * masse) + (5.003 * laenge) - (6.775 * alter))\n    } else {\n      return(655.1 + (9.563 * masse) + (1.850 * laenge) - (4.676 * alter))\n    }\n  }\n  \n  berechne_rmr &lt;- function(grundumsatz, rq, geschlecht) {\n    ka &lt;- 19.946  # Annahme für RQ = 0.77, passen Sie dies an, wenn nötig\n    faktor &lt;- if(geschlecht == \"Männlich\") 1.287 else 1.278\n    return((grundumsatz / (24 * 60 * ka)) * 4.1868 * faktor)\n  }\n  \n  # Reaktion auf den Klick des \"VO2 Ruhe berechnen\" Buttons\n  observeEvent(input$berechne_vo2_ruhe, {\n    grundumsatz &lt;- berechne_grundumsatz(\n      input$geschlecht,\n      input$koerpermasse,\n      input$koerperlaenge,\n      input$alter\n    )\n    \n    rmr &lt;- berechne_rmr(grundumsatz, input$rq, input$geschlecht)\n    \n    # Aktualisieren Sie den VO2_Ruhe Slider mit dem berechneten Wert\n    updateSliderInput(session, \"VO2_Ruhe\", value = round(rmr, 3))\n    \n    # Zeigen Sie eine Benachrichtigung mit dem berechneten Wert an\n    showNotification(paste(\"Berechnete Ruhesauerstoffaufnahme:\", round(rmr, 3), \"l/min\"), type = \"message\")\n  })\n  \n  \n  \n  observe({\n    if (input$VO2_Start &lt; input$VO2_Ruhe) {\n      updateSliderInput(session, \"VO2_Start\", value = input$VO2_Ruhe)\n    }\n  })\n  \n  output$showFitSlider &lt;- reactive({\n    show_data()\n  })\n  outputOptions(output, \"showFitSlider\", suspendWhenHidden = FALSE)\n  \n  observeEvent(input$optimize, {\n    if (show_data()) {\n      Beispieldaten &lt;- if (is.null(uploaded_data())) {\n        data.frame(t_s = t_data, VO2_t = VO2_data)\n      } else {\n        uploaded_data()\n      }\n      \n      t_delay &lt;- isolate(input$time_delay)\n      nlsLM_end &lt;- isolate(input$nlsLM_end)\n      \n      # Finde den nächstgelegenen Zeitpunkt zu t_delay\n      closest_index &lt;- which.min(abs(Beispieldaten$t_s - t_delay))\n      \n      # Setze VO2_Start auf den gerundeten Wert des nächsten Punktes\n      VO2_Start &lt;- round(Beispieldaten$VO2_t[closest_index], 3)\n      \n      updateSliderInput(session, \"VO2_Start\", value = VO2_Start)\n      \n      data_subset &lt;- Beispieldaten[Beispieldaten$t_s &gt;= t_delay & Beispieldaten$t_s &lt;= nlsLM_end, ]\n      \n      start_values &lt;- list(VO2 = isolate(input$VO2), Tau = isolate(input$Tau))\n      \n      fit &lt;- try(nlsLM(VO2_t ~ VO2 * (1 - exp(-(t_s - t_delay) / Tau)) + VO2_Start,\n                       data = data_subset,\n                       start = start_values,\n                       lower = c(VO2 = 0.5, Tau = 5),\n                       upper = c(VO2 = 7.0, Tau = 360),\n                       control = nls.control(maxiter = 1024)), silent = TRUE)\n      \n      if (!inherits(fit, \"try-error\")) {\n        params &lt;- as.list(coef(fit))\n        updateSliderInput(session, \"VO2\", value = params$VO2)\n        updateSliderInput(session, \"Tau\", value = params$Tau)\n      } else {\n        showModal(modalDialog(\n          title = \"nlsLM fehlgeschlagen\",\n          \"Die nicht-lineare Regression mittels Levenberg-Marquardt-Algorithmus konnte nicht erfolgreich durchgeführt werden.\",\n          easyClose = TRUE,\n          footer = NULL\n        ))\n      }\n    }\n  })\n  \n  output$plot &lt;- renderPlotly({\n    VO2 &lt;- input$VO2\n    Tau &lt;- input$Tau\n    VO2_Start &lt;- input$VO2_Start\n    t_delay &lt;- input$time_delay\n    VO2_Ruhe &lt;- input$VO2_Ruhe\n    nlsLM_end &lt;- input$nlsLM_end\n    \n    model_function &lt;- function(t_s, VO2, Tau, VO2_Start, t_delay) {\n      VO2 * (1 - exp(-(t_s - t_delay) / Tau)) + VO2_Start\n    }\n    \n    Beispieldaten &lt;- if (show_data() && !is.null(uploaded_data())) {\n      uploaded_data()\n    } else {\n      data.frame(t_s = t_data, VO2_t = VO2_data)\n    }\n    \n    tau4 &lt;- 4 * Tau\n    max_t &lt;- max(Beispieldaten$t_s, na.rm = TRUE)\n    max_x &lt;- max(1.05 * tau4 + t_delay, max_t * 1.05)\n    t_s &lt;- seq(0, max_x * 1.20, by = 1)\n    model_values &lt;- ifelse(t_s &gt;= t_delay, model_function(t_s, VO2, Tau, VO2_Start, t_delay), NA)\n    VO2_SS_gross &lt;- model_function(tau4 + t_delay, VO2, Tau, VO2_Start, t_delay)\n    VO2_SS_net &lt;- VO2_SS_gross - VO2_Ruhe\n    max_y &lt;- max(1.05 * VO2_SS_gross, max(Beispieldaten$VO2_t, na.rm = TRUE) * 1.05)\n    \n    eq_text &lt;- sprintf(\"V̇O₂ (t) = %.3f * (1 - e&lt;sup&gt;-(t - %.2f) / %.2f&lt;/sup&gt;) + %.3f\",\n                       VO2, t_delay, Tau, VO2_Start)\n    VO2_SS_gross_text &lt;- sprintf(\"V̇O₂ &lt;sub&gt;SS,Brutto&lt;/sub&gt;: %.3f\", VO2_SS_gross)\n    VO2_SS_net_text &lt;- sprintf(\"V̇O₂ &lt;sub&gt;SS,Netto&lt;/sub&gt;: %.3f\", VO2_SS_net)\n    t_halb &lt;- Tau * log(2)\n    \n    shapes &lt;- list(\n      list(\n        type = \"line\", x0 = t_delay, x1 = t_delay, y0 = 0, y1 = max_y * 1.5,\n        line = list(color = \"gray\", width = 1, dash = \"dash\")\n      ),\n      list(\n        type = \"line\", x0 = Tau + t_delay, x1 = Tau + t_delay, y0 = 0, y1 = max_y * 1.5,\n        line = list(color = \"gray\", width = 1, dash = \"dash\")\n      ),\n      list(\n        type = \"line\", x0 = tau4 + t_delay, x1 = tau4 + t_delay, y0 = 0, y1 = max_y * 1.5,\n        line = list(color = \"gray\", width = 1, dash = \"dash\")\n      ),\n      if (show_data()) {\n        list(\n          type = \"line\", x0 = nlsLM_end, x1 = nlsLM_end, y0 = 0, y1 = max_y * 1.5,\n          line = list(color = \"gray\", width = 1, dash = \"dash\")\n        )\n      },\n      list(\n        type = \"line\", x0 = 0, x1 = max_x, y0 = VO2_Ruhe, y1 = VO2_Ruhe,\n        line = list(color = '#1CADE4', width = 1, dash = \"solid\")\n      )\n    )\n    \n    p &lt;- plot_ly() %&gt;%\n      add_trace(x = ~t_s, y = ~model_values, type = 'scatter', mode = 'lines',\n                name = 'Modellfunktion', line = list(color = '#EF6F6A')) %&gt;%\n      layout(\n        title = \"V̇O&lt;sub&gt;2&lt;/sub&gt;-Modellfunktion\",\n        margin = list(t = 40),\n        xaxis = list(title = \"t [s]\", range = c(0, max_x)),\n        yaxis = list(title = \"V̇O&lt;sub&gt;2&lt;/sub&gt;(t) [l·min&lt;sup&gt;-1&lt;/sup&gt;]\", tickformat = \".3f\"),\n        legend = list(\n          x = 0.80,\n          y = 0.99,\n          xanchor = \"left\",\n          yanchor = \"top\",\n          bgcolor = \"rgba(255, 255, 255, 0.3)\",\n          bordercolor = \"rgba(0,0,0,0)\",\n          borderwidth = 0\n        ),\n        shapes = shapes,\n        annotations = list(\n          list(\n            x = max_x * 0.60,\n            y = max_y * 0.6,\n            text = eq_text,\n            showarrow = FALSE,\n            xanchor = 'left',\n            yanchor = 'bottom',\n            font = list(\n              family = \"Arial, sans-serif\",\n              size = 12,\n              color = \"black\"\n            )\n          ),\n          list(\n            x = max_x * 0.60,\n            y = max_y * 0.5,\n            text = VO2_SS_gross_text,\n            showarrow = FALSE,\n            xanchor = 'left',\n            yanchor = 'bottom',\n            font = list(\n              family = \"Arial, sans-serif\",\n              size = 12,\n              color = \"black\"\n            )\n          ),\n          list(\n            x = max_x * 0.60,\n            y = max_y * 0.4,\n            text = VO2_SS_net_text,\n            showarrow = FALSE,\n            xanchor = 'left',\n            yanchor = 'bottom',\n            font = list(\n              family = \"Arial, sans-serif\",\n              size = 12,\n              color = \"black\"\n            )\n          ),\n          list(\n            x = max_x * 0.60,\n            y = max_y * 0.3,\n            text = paste(\"T&lt;sub&gt;1/2&lt;/sub&gt;:\", round(t_halb, 1),\" s\"),\n            showarrow = FALSE,\n            xanchor = 'left',\n            yanchor = 'bottom',\n            font = list(\n              family = \"Arial, sans-serif\",\n              size = 12,\n              color = \"black\"\n            )\n          ),\n          list(\n            x = t_delay, y = max_y * 0.9, text = sprintf(\"t&lt;sub&gt;delay&lt;/sub&gt;: %.1f s\", t_delay), \n            showarrow = FALSE, xanchor = \"left\", yanchor = \"bottom\",\n            textangle = -90, font = list(size = 11)\n          ),\n          list(\n            x = Tau + t_delay, y = max_y * 0.9, text = sprintf(\"tau: %.1f s\", Tau), \n            showarrow = FALSE, xanchor = \"left\", yanchor = \"bottom\",\n            textangle = -90, font = list(size = 11)\n          ),\n          list(\n            x = tau4 + t_delay, y = max_y * 0.9, text = sprintf(\"4tau: %.1f s\", tau4), \n            showarrow = FALSE, xanchor = \"left\", yanchor = \"bottom\",\n            textangle = -90, font = list(size = 11)\n          ),\n          if (show_data()) {\n            list(\n              x = nlsLM_end, y = max_y * 0.9, text = sprintf(\"nlsLM Ende: %.1f s\", nlsLM_end), \n              showarrow = FALSE, xanchor = \"left\", yanchor = \"bottom\",\n              textangle = -90, font = list(size = 11)\n            )\n          }\n        )) %&gt;%\n      add_trace(x = ~t_s, y = ~rep(VO2_Ruhe, length(t_s)), type = 'scatter', mode = 'lines',\n                name = 'V̇O&lt;sub&gt;2, Ruhe&lt;/sub&gt;', line = list(color = '#1CADE4'))\n    \n    if (show_data()) {\n      model_values_at_data &lt;- model_function(Beispieldaten$t_s, VO2, Tau, VO2_Start, t_delay)\n      \n      data_subset &lt;- Beispieldaten[Beispieldaten$t_s &gt;= t_delay & Beispieldaten$t_s &lt;= input$nlsLM_end, ]\n      \n      ss_res &lt;- sum((data_subset$VO2_t - model_values_at_data[Beispieldaten$t_s &gt;= t_delay & Beispieldaten$t_s &lt;= input$nlsLM_end])^2, na.rm = TRUE)\n      ss_tot &lt;- sum((data_subset$VO2_t - mean(data_subset$VO2_t, na.rm = TRUE))^2, na.rm = TRUE)\n      r_squared &lt;- 1 - (ss_res / ss_tot)\n      \n      p &lt;- p %&gt;%\n        add_trace(data = Beispieldaten, x = ~t_s, y = ~VO2_t, type = 'scatter', mode = 'markers+lines',\n                  name = 'V̇O&lt;sub&gt;2&lt;/sub&gt;', \n                  marker = list(color = 'rgba(38, 131, 198, 0.9)', size = 5.0),\n                  line = list(color = 'rgba(38, 131, 198, 1.0)', width = 0.65, dash = '4 4')) %&gt;%\n        layout(annotations = list(\n          list(\n            x = max_x * 0.60,\n            y = max_y * 0.2,\n            text = sprintf(\"R²: %.3f\", r_squared),\n            showarrow = FALSE,\n            xanchor = 'left',\n            yanchor = 'bottom',\n            font = list(\n              family = \"Arial, sans-serif\",\n              size = 12,\n              color = \"black\"\n            )\n          )\n        ))\n    }\n    \n    p\n  })\n  output$instructions &lt;- renderUI({\n    HTML(\n      \"&lt;div style='margin-top: 20px; padding: 10px; background-color: #f0f0f0; border: 1px solid #ddd; border-radius: 5px; width: fit-content;'&gt;\n        &lt;h4 style='color: #333;'&gt;&lt;strong&gt;Anleitung - Modellanpassung:&lt;/strong&gt;&lt;/h4&gt;\n        &lt;ol style='color: #555; list-style-position: outside; padding-left: 20px;'&gt;\n          &lt;li&gt;Beispiel VO2-Daten oder eigene VO2-Daten als CSV-Datei einfügen.&lt;/li&gt;\n          &lt;li&gt;Die Zeitverzögerung festlegen, um den Startpunkt der Modellanpassung zu bestimmen, und bei Bedarf das Ende der Anpassung anpassen.&lt;/li&gt;\n          &lt;li&gt;Modellanpassung 'Fit: nlsLM' durchführen.&lt;/li&gt;\n          &lt;li&gt;Alternativ: Manuelle Modellanpassung der Modellparameter mit den Schiebereglern.&lt;/li&gt;\n        &lt;/ol&gt;\n        &lt;div style='margin-top: 20px;'&gt;&lt;/div&gt;\n        &lt;pre style='background-color: #f8f8f8; padding: 10px; border: 1px solid #ddd; border-radius: 5px; width: fit-content;'&gt;\nVO2-Daten können als CSV-Datei im folgenden Format hochgeladen werden:\nt_s,VO2_t\n0.0,0.479\n1.0,0.459\n2.3,0.488\n…\n        &lt;/pre&gt;\n      &lt;/div&gt;\"\n    )\n  })\n}\n\n# App ausführen\nshinyApp(ui = ui, server = server)\n\n\n\n\n\n\nModellanpassung - Details:\n\n\n\n\n\nnlsLM - Fit:\n\nVerwendete Funktion: nlsLM\nParameter: V̇O2 (Amplitude), Tau\nModell: V̇O2_t ~ V̇O2 · (1 - exp(-(t_s - t_delay) / Tau)) + V̇O2_Start\nGrenzen:\n\nV̇O2: 0.5 bis 7.0 l/min\nTau: 5 bis 360 s\n\nProzess:\n\nBestimmung des V̇O2_Start-Wertes:\n\nFinden des nächstgelegenen Zeitpunkts zu t_delay in den Daten\nSetzen von V̇O2_Start auf den gerundeten V̇O2-Wert dieses Punktes\n\nDatenauswahl:\n\nVerwendung der Daten zwischen t_delay und nlsLM_end\n\nStartwertebestimmung:\n\nVerwendung der aktuellen Slider-Werte für V̇O2 und Tau\n\nDurchführung der nicht-linearen Regression:\n\nVerwendung des Levenberg-Marquardt-Algorithmus\nMaximale Iterationen: 1024\n\n\nOptimierung: Minimierung der Residuenquadratsumme (RSS)",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Energieumsatzberechnung",
      "Aerobe Energiekomponente (W~Aerob~)"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Energieumsatzberechnung/Aerobe_Energiebereitstellung.html#drei-phasen-modell",
    "href": "Theoretischer_Hintergrund/Energieumsatzberechnung/Aerobe_Energiebereitstellung.html#drei-phasen-modell",
    "title": "Aerobe Energiekomponente (WAerob)",
    "section": "Drei-Phasen-Modell",
    "text": "Drei-Phasen-Modell\nDie Analyse der \\(\\dot{V}O_{2}(t)\\)-Kinetik kann durch die Berücksichtigung von Zeitverzögerungen und/oder Exponentialfunktionen zweiter Ordnung verfeinert werden. Dazu kann die Anpassungsreaktion des \\(\\dot{V}O_{2}\\,(t)\\) nach Beginn der sportlichen Betätigung in drei Phasen unterteilt werden, wie in Abbildung 2 zu sehen (Whipp et al., 1982). Dies ermöglicht es, die erhöhte Komplexität der \\(\\dot{V}O_{2}\\)-Kinetik oberhalb der LT besser darzustellen und eine präzisere Analyse der physiologischen Anpassungen bei körperlicher Belastung durchzuführen, da oberhalb der LT der \\(\\dot{V}O_2\\)-Umsatz über 10 ml O2·W-1·min-1 steigt (Barstow, 1994; Bearden & Moffatt, 2000; Sietsema et al., 2020). Die 3 Phasen lassen sich wie folgt beschreiben:\n\n\n\n\n\n\n\n\nAbbildung 2: Beispiel der Drei-Phasen der VO2-Kinetik bis zum Erreichen eines SS nach Beginn der Belastung (McNulty & Robergs, 2017)\n\n\n\n\n\n\n\n\n\n\n\nPhase 1: Phase I, häufig als kardiodynamische Phase bezeichnet, umfasst ungefähr die ersten 10 bis 25 Sekunden nach Beginn der Belastung. Aufgrund des schnellen Anstiegs des Herzzeitvolumens und des Lungenblutflusses zu Beginn der Belastung steigt \\(\\dot{V}O_2\\,(t)\\) abrupt an. In dieser Phase bleibt die Zusammensetzung des gemischtvenösen Blutes sowie der respiratorische Quotient \\(RQ\\,(t) = \\frac{\\dot{V}CO_{2}\\,(t)}{\\dot{V}O_{2}\\,(t)}\\) im Vergleich zum Ruhezustand unverändert. Somit ist der Anstieg des \\(\\dot{V}O_2\\,(t)\\) ausschließlich auf das erhöhte Herzminutenvolumen zurückzuführen, da sich die Sauerstoffkonzentration im arteriellen und venösen Blut (Ca und Cv) noch nicht verändert haben. Dies lässt sich mit Hilfe der Fick’schen Gleichung Gleichung 7 verdeutlichen (Clark, 2014; Fick, 1855; Sietsema et al., 2020; Stirling et al., 2005; Whipp et al., 1982).\n\\[\n\\dot{V}O_2 = \\dot{Q} \\cdot (C_a - C_v)\n\\tag{7}\\]\nDa die anfängliche „kardiodynamische“ Phase der \\(\\dot{V}O_2\\)-Reaktion nicht direkt den Sauerstoffumsatz der aktiven Muskulatur repräsentiert, werden in der Regel die ersten 20 bis 25 Sekunden von Phase I bei Modellierungen der \\(\\dot{V}O_2\\)-Kinetik aus der Modellanpassung ausgeschlossen (Bearden & Moffatt, 2000; Özyener et al., 2001).\nPhase 2: Phase 2 folgt auf Phase 1 und ist durch einen schnellen, monoexponentiellen Anstieg des \\(\\dot{V}O_2\\) gekennzeichnet. Die Zeitkonstante beträgt im Durchschnitt etwa 30 (Sietsema et al., 2020) bis 33 Sekunden (Özyener et al., 2001). Anschließend wird entweder ein SS erreicht oder der \\(\\dot{V}O_2\\) steigt weiter an, was dann in dem Modell als Phase 3 bezeichnet wird (Stirling et al., 2005).\nPhase 3: In Phase 3 des \\(\\dot{V}O_2\\)-Modells wird bei leichten bis moderaten Belastungen unterhalb der Laktatschwelle (LT) nach etwa 3 Minuten ein stabiler Zustand (SS) erreicht. Dieses Verhalten beschreibt, wie der \\(\\dot{V}O_2\\) sich im 3-Phasen-Modell für Belastungen unterhalb der LT verhält. Bei Belastungen oberhalb der LT erreicht der \\(\\dot{V}O_2\\) nach der primären Anpassungsreaktion keinen SS mehr, sondern steigt weiter an (siehe Abbildung 3). Diese zusätzliche Komponente, meist als “slow component” bezeichnet und überlagert die anfängliche monoexponentielle Funktion aus Phase 2.\n\n\n\n\n\n\n\n\n\nAbbildung 3: Beispiele der VO2-Anstiegskinetik eines Probanden für verschiedene Belastungsintensitäten: sehr intensiv, schwer, mittelschwer und moderat (von oben nach unten). Unterhalb der VO2-Daten ist der entsprechende Residuenplot zu sehen. In Spalte A wird eine Modellfunktion mit mono-exponentieller Kurvenanpassung gezeigt, in Spalte B eine mit bi-exponentieller Anpassung (Özyener, 2001).\n\n\n\n\n\nMathematische Modellierungen haben gezeigt, dass die langsame Komponente etwa 90 bis 200 Sekunden nach Beginn des Übergangs einsetzt (Barstow & Mole, 1991; Bearden & Moffatt, 2000; Sietsema et al., 2020; Whipp & Wasserman, 1972). Die Komponente der Anpassungsreaktion bis zum Beginn der slow component wird in der Literatur oft als “primary component” oder “fundamental component” bezeichnet (Barstow, 1994; Özyener et al., 2001). Im Folgenden wird diese Hauptkomponente mit dem Index “fast” gekennzeichnet.\n\nBiexponentielle \\(\\dot{V}O_{2}\\)-Modellfunktion\nPhase 2 und 3 des 3-Phasen-Modells lassen sich mit Hilfe der Gleichung 6 modellieren:\n\\[\n\\dot{V}O_2\\,(t) = \\dot{V}O_{2,\\text{fast}} \\cdot \\left(1 - e^{-\\frac{t_s - t_\\text{delay, fast}}{\\tau_\\text{fast}}}\\right) +\n\\dot{V}O_{2,\\text{slow}} \\cdot \\left(1 - e^{-\\frac{t_s - t_\\text{delay,slow}}{\\tau_\\text{slow}}}\\right) +\n\\dot{V}O_{2,\\text{Start}}\n\\]\n\\(\\dot{V}O_{2,\\text{fast}}\\) repräsentiert die Amplitude der Hauptkomponente, während \\(\\dot{V}O_{2,\\text{slow}}\\) die Amplitude der slow component beschreibt. Die Zeitkonstanten \\(\\tau_\\text{fast}\\) und \\(\\tau_\\text{slow}\\) steuern die Geschwindigkeit der jeweiligen Reaktionsprozesse, wobei die Zeitverzögerungen \\(t_\\text{delay, fast}\\) und \\(t_\\text{delay, slow}\\) den Beginn dieser Prozesse bestimmen. \\(\\dot{V}O_{2,\\text{Start}}\\) beschreibt den Sauerstoffvolumenstrom zu Beginn der Belastung.\nIn der folgenden Shiny-App wird die Modellanpassung der Gleichung Gleichung 6 an Beispieldaten demonstriert. Eigene \\(\\dot{V}O_{2}(t)\\)-Daten können hochgeladen und mittels nichtlinearer Regression an die Modellparameter angepasst werden.\n\nBiexponentielle \\(\\dot{V}O_{2}\\)-Shiny-App\n#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| viewerHeight: 900\nlibrary(shiny)\nlibrary(plotly)\nlibrary(minpack.lm)\nlibrary(dplyr)\nlibrary(shinyjs)\n\n# Beispieldaten\nt_data &lt;- c(0.0, 2.7, 5.3, 8.3, 11.5, 13.6, 15.4, 17.1, 19.8, 21.1, 22.3, 23.5, 24.9, 27.5, 30.9, 32.4, 35.0, 38.3, 39.7, 41.6, 43.7, 45.3, 46.8, 49.8, 52.0, 53.6, 55.5, 57.5, 59.0, 60.7, 62.4, 64.4, 66.6, 68.1, 69.8, 71.4, 73.3, 75.0, 76.7, 78.4, 80.0, 82.2, 83.9, 85.4, 87.3, 88.8, 90.6, 92.0, 93.6, 94.8, 96.3, 97.9, 99.5, 101.1, 102.7, 104.3, 106.0, 107.7, 109.3, 110.9, 112.5, 114.8, 116.4, 118.1, 119.7, 121.3, 122.8, 124.3, 125.9, 127.4, 128.9, 130.6, 132.1, 133.6, 135.6, 137.1, 138.6, 140.1, 141.6, 143.1, 144.4, 145.8, 147.2, 148.4, 149.9, 151.6, 153.1, 154.7, 156.1, 157.4, 158.7, 160.5, 161.9, 163.3, 164.7, 166.2, 167.6, 169.1, 172.6, 173.9, 175.4, 176.7, 178.1, 179.6, 181.0, 182.4, 183.8, 185.3, 186.7, 188.2, 189.6, 191.0, 192.4, 193.8, 195.2, 196.6, 198.0, 199.3, 200.7, 202.0, 203.3, 204.7, 206.1, 207.5, 208.8, 210.2, 211.6, 213.0, 214.3, 215.7, 217.1, 218.4, 219.8, 221.1, 222.4, 223.7, 225.0, 226.3, 227.7, 229.0, 230.5, 231.9, 233.1, 234.4)\nVO2_data &lt;- c(0.823, 0.898, 0.966, 1.122, 1.281, 1.313, 1.463, 1.537, 1.602, 1.595, 1.598, 1.674, 1.923, 2.168, 2.439, 2.670, 2.797, 2.712, 2.688, 2.968, 3.228, 3.371, 3.673, 3.938, 4.076, 3.959, 3.886, 3.880, 3.928, 3.962, 4.173, 4.381, 4.268, 4.208, 4.234, 4.132, 4.109, 4.192, 4.304, 4.493, 4.352, 4.349, 4.332, 4.346, 4.345, 4.373, 4.320, 4.286, 4.353, 4.346, 4.287, 4.322, 4.250, 4.332, 4.257, 4.161, 4.120, 4.144, 4.115, 4.158, 4.186, 4.206, 4.220, 4.259, 4.291, 4.279, 4.295, 4.339, 4.371, 4.425, 4.448, 4.474, 4.517, 4.536, 4.544, 4.528, 4.432, 4.371, 4.367, 4.430, 4.492, 4.535, 4.510, 4.433, 4.399, 4.305, 4.308, 4.304, 4.366, 4.434, 4.501, 4.535, 4.512, 4.463, 4.509, 4.529, 4.586, 4.624, 4.740, 4.769, 4.788, 4.794, 4.824, 4.830, 4.888, 4.887, 4.915, 4.924, 4.955, 4.965, 4.982, 4.992, 5.016, 5.024, 5.033, 5.066, 5.081, 5.053, 5.035, 4.997, 5.018, 5.038, 5.035, 5.039, 4.970, 4.970, 4.973, 4.964, 4.945, 4.953, 4.974, 4.984, 4.997, 4.995, 4.946, 4.997, 5.014, 5.092, 5.072, 5.111, 5.088, 5.065, 5.061, 5.038)\n\n# UI\nui &lt;- fluidPage(\n  useShinyjs(),\n  titlePanel(\"Bi-exponentielle V̇O2-Modellfunktion\"),\n  fluidRow(\n    column(3,\n           style = \"height: 90vh; overflow-y: auto;\",\n           \n           tags$h4(tags$strong(\"Modellparameter:\")),\n           sliderInput(\"VO2\", \"V̇O2_fast\", min = 0.0, max = 7.0, value = 3.7, step = 0.01),\n           sliderInput(\"tau_fast\", \"Tau_fast\", min = 10, max = 120, value = 45, step = 0.1),\n           sliderInput(\"VO2_Start\", \"V̇O2_Start\", min = 0.0, max = 4.0, value = 0.8, step = 0.01),\n           sliderInput(\"VO2_Ruhe\", \"V̇O2_Ruhe\", min = 0, max = 1, value = 0.4, step = 0.1),\n           sliderInput(\"time_delay\", \"Zeitverzögerung_fast\", min = 0, max = 600, value = 0, step = 1),\n           sliderInput(\"VO2_slow\", \"V̇O2_slow\", min = 0.0, max = 1.0, value = 0.3, step = 0.01),\n           sliderInput(\"tau_slow\", \"Tau_slow\", min = 90, max = 600, value = 110, step = 0.1),\n           sliderInput(\"time_delay_slow\", \"Zeitverzögerung_slow\", min = 0, max = 1200, value = 160, step = 1),\n           conditionalPanel(\n             condition = \"output.showFitSlider\",\n             sliderInput(\"nlsLM_end\", \"nlsLM Ende\", min = 10, max = 300, value = 300, step = 1)\n           ),\n           actionButton(\"toggle_data\", \"Beispieldaten einfügen\"),\n           br(), br(),\n           fileInput(\"file_upload\", \"CSV-Datei hochladen\", accept = \".csv\"),\n           tags$h4(tags$strong(\"Modellanpassung:\")),\n           actionButton(\"fit_fast\", \"1. Fit: Schnelle Komponente\"),br(),\n           actionButton(\"fit_slow\", \"2. Fit: Langsame Komponente & Verfeinerung\"),br(),\n           actionButton(\"fit_optimize\", \"3. Fit: Optimierung\")\n    ),\n    mainPanel(\n      width = 9,\n      plotlyOutput(\"plot\"),\n      uiOutput(\"instructions\")\n    )\n  )\n)\n\n# Server\nserver &lt;- function(input, output, session) {\n  show_data &lt;- reactiveVal(FALSE)\n  uploaded_data &lt;- reactiveVal(NULL)\n  current_data &lt;- reactiveVal(NULL)\n  current_r_squared &lt;- reactiveVal(NA)\n  \n  calculate_r_squared &lt;- function(observed, predicted) {\n    ss_res &lt;- sum((observed - predicted)^2, na.rm = TRUE)\n    ss_tot &lt;- sum((observed - mean(observed, na.rm = TRUE))^2, na.rm = TRUE)\n    return(1 - (ss_res / ss_tot))\n  }\n  \n  observeEvent(input$toggle_data, {\n    show_data(!show_data())\n    if (show_data()) {\n      current_data(data.frame(t_s = t_data, VO2_t = VO2_data))\n    } else {\n      current_data(NULL)\n    }\n  })\n  \n  observeEvent(input$file_upload, {\n    req(input$file_upload)\n    df &lt;- read.csv(input$file_upload$datapath)\n    if (\"t_s\" %in% names(df) && \"VO2_t\" %in% names(df)) {\n      uploaded_data(df)\n      current_data(df)\n      show_data(TRUE)\n    } else {\n      showModal(modalDialog(\n        title = \"Invalid CSV\",\n        \"Die csv-Datei muss 't_s' und 'VO2_t' als Spaltennamen beinhalten.\",\n        easyClose = TRUE,\n        footer = NULL\n      ))\n    }\n  })\n  \n  observe({\n    req(input$VO2_Start, input$VO2_Ruhe)\n    if (input$VO2_Start &lt; input$VO2_Ruhe) {\n      updateSliderInput(session, \"VO2_Start\", value = input$VO2_Ruhe)\n    }\n  })\n  \n  # Hilfsfunktion zur Bestimmung des nächstgelegenen VO2-Wertes\n  find_nearest_VO2 &lt;- function(data, t_delay) {\n    req(data, t_delay)\n    if (nrow(data) == 0) return(NA)\n    \n    index &lt;- which.min(abs(data$t_s - t_delay))\n    return(data$VO2_t[index])\n  }\n  \n  \n  observeEvent(input$fit_fast, {\n    req(current_data())\n    Beispieldaten &lt;- current_data()\n    \n    t_delay &lt;- isolate(input$time_delay)\n    \n    # Bestimme den nächstgelegenen VO2-Wert als VO2_Start\n    VO2_Start &lt;- find_nearest_VO2(Beispieldaten, t_delay)\n    \n    # Aktualisiere den VO2_Start Slider\n    updateSliderInput(session, \"VO2_Start\", value = VO2_Start)\n    \n    data_subset &lt;- Beispieldaten[Beispieldaten$t_s &gt;= t_delay, ]\n    \n    best_fit &lt;- NULL\n    best_rss &lt;- Inf\n    \n    withProgress(message = 'Fitting in progress', value = 0, {\n      for (i in 1:100) {\n        # Randomisierte Startwerte innerhalb der Slider-Grenzen\n        VO2_start &lt;- runif(1, 0.5, 7.0)\n        tau_fast_start &lt;- runif(1, 10, 120)\n        \n        start_values &lt;- list(\n          VO2 = VO2_start,\n          tau_fast = tau_fast_start\n        )\n        \n        fit &lt;- try(nlsLM(VO2_t ~ VO2 * (1 - exp(-(t_s - t_delay) / tau_fast)) + VO2_Start,\n                         data = data_subset,\n                         start = start_values,\n                         lower = c(VO2 = 0.5, tau_fast = 10),\n                         upper = c(VO2 = 7.0, tau_fast = 120),\n                         control = nls.control(maxiter = 1024)), silent = TRUE)\n        \n        if (!inherits(fit, \"try-error\")) {\n          rss &lt;- sum(residuals(fit)^2)\n          if (rss &lt; best_rss) {\n            best_rss &lt;- rss\n            best_fit &lt;- fit\n          }\n        }\n        \n        incProgress(1/100, detail = paste(\"Iteration\", i))\n      }\n    })\n    \n    if (!is.null(best_fit)) {\n      params &lt;- as.list(coef(best_fit))\n      updateSliderInput(session, \"VO2\", value = params$VO2)\n      updateSliderInput(session, \"tau_fast\", value = params$tau_fast)\n      updateSliderInput(session, \"VO2_slow\", value = 0)\n      updateSliderInput(session, \"tau_slow\", value = 0)\n      \n      predicted &lt;- VO2_Start + params$VO2 * (1 - exp(-(data_subset$t_s - t_delay) / params$tau_fast))\n      r_squared &lt;- calculate_r_squared(data_subset$VO2_t, predicted)\n      current_r_squared(r_squared)\n      \n      showNotification(sprintf(\"Schritt 1 erfolgreich. R²: %.3f\", r_squared), type = \"message\")\n    } else {\n      showModal(modalDialog(\n        title = \"nlsLM fehlgeschlagen\",\n        \"Die nicht-lineare Regression mittels Levenberg-Marquardt-Algorithmus konnte nicht erfolgreich durchgeführt werden.\",\n        easyClose = TRUE,\n        footer = NULL\n      ))\n    }\n  })\n  \n  observeEvent(input$fit_slow, {\n    req(current_data())\n    Beispieldaten &lt;- current_data()\n    \n    req(input$time_delay, input$VO2_Start, input$VO2, input$tau_fast)\n    \n    t_delay &lt;- input$time_delay\n    VO2_Start &lt;- input$VO2_Start\n    VO2 &lt;- input$VO2\n    tau_fast &lt;- input$tau_fast\n    \n    # Setze VO2_slow und tau_slow auf die initialen Werte\n    VO2_slow &lt;- 0.4\n    tau_slow &lt;- 160\n    \n    data_subset &lt;- Beispieldaten[Beispieldaten$t_s &gt;= t_delay, ]\n    \n    # Berechne die obere Grenze für t_delay_slow\n    t_delay_slow_upper &lt;- max(Beispieldaten$t_s)\n    \n    best_fit &lt;- NULL\n    best_rss &lt;- Inf\n    best_t_delay_slow &lt;- NULL\n    best_VO2_fast &lt;- VO2\n    best_tau_fast &lt;- tau_fast\n    best_VO2_slow &lt;- VO2_slow\n    best_tau_slow &lt;- tau_slow\n    \n    # Berechne die Anzahl der Iterationen für t_delay_slow\n    num_iterations &lt;- floor(t_delay_slow_upper - (tau_fast + t_delay)) + 1\n    \n    withProgress(message = 'Fitting in progress', value = 0, {\n      for (i in 1:num_iterations) {\n        t_delay_slow &lt;- tau_fast + t_delay + i - 1\n        \n        # Fit VO2_fast und tau_fast nach unten\n        current_VO2_fast &lt;- best_VO2_fast\n        current_tau_fast &lt;- best_tau_fast\n        current_VO2_slow &lt;- best_VO2_slow\n        current_tau_slow &lt;- best_tau_slow\n        \n        model &lt;- function(VO2_fast, tau_fast, VO2_slow, tau_slow, t_delay_slow) {\n          VO2_fast * (1 - exp(-(data_subset$t_s - t_delay) / tau_fast)) + \n            VO2_slow * (1 - exp(-(pmax(data_subset$t_s - t_delay_slow, 0)) / tau_slow)) + \n            VO2_Start\n        }\n        \n        current_rss &lt;- sum((data_subset$VO2_t - model(current_VO2_fast, current_tau_fast, current_VO2_slow, current_tau_slow, t_delay_slow))^2)\n        \n        # Optimiere VO2_fast und tau_fast\n        while (TRUE) {\n          improved &lt;- FALSE\n          \n          # Versuche VO2_fast zu reduzieren\n          if (current_VO2_fast &gt; 0.1) {\n            new_VO2_fast &lt;- max(0.1, current_VO2_fast - 0.01)\n            new_rss &lt;- sum((data_subset$VO2_t - model(new_VO2_fast, current_tau_fast, current_VO2_slow, current_tau_slow, t_delay_slow))^2)\n            if (new_rss &lt; current_rss) {\n              current_VO2_fast &lt;- new_VO2_fast\n              current_rss &lt;- new_rss\n              improved &lt;- TRUE\n            }\n          }\n          \n          # Versuche tau_fast zu reduzieren\n          if (current_tau_fast &gt; 10) {\n            new_tau_fast &lt;- max(10, current_tau_fast - 0.1)\n            new_rss &lt;- sum((data_subset$VO2_t - model(current_VO2_fast, new_tau_fast, current_VO2_slow, current_tau_slow, t_delay_slow))^2)\n            if (new_rss &lt; current_rss) {\n              current_tau_fast &lt;- new_tau_fast\n              current_rss &lt;- new_rss\n              improved &lt;- TRUE\n            }\n          }\n          \n          if (!improved) break\n        }\n        \n        # Optimiere VO2_slow und tau_slow\n        # Zuerst nach unten\n        while (TRUE) {\n          improved &lt;- FALSE\n          \n          # Versuche VO2_slow zu reduzieren\n          if (current_VO2_slow &gt; 0.05) {\n            new_VO2_slow &lt;- max(0.05, current_VO2_slow - 0.01)\n            new_rss &lt;- sum((data_subset$VO2_t - model(current_VO2_fast, current_tau_fast, new_VO2_slow, current_tau_slow, t_delay_slow))^2)\n            if (new_rss &lt; current_rss) {\n              current_VO2_slow &lt;- new_VO2_slow\n              current_rss &lt;- new_rss\n              improved &lt;- TRUE\n            }\n          }\n          \n          # Versuche tau_slow zu reduzieren\n          if (current_tau_slow &gt; 90) {\n            new_tau_slow &lt;- max(90, current_tau_slow - 0.1)\n            new_rss &lt;- sum((data_subset$VO2_t - model(current_VO2_fast, current_tau_fast, current_VO2_slow, new_tau_slow, t_delay_slow))^2)\n            if (new_rss &lt; current_rss) {\n              current_tau_slow &lt;- new_tau_slow\n              current_rss &lt;- new_rss\n              improved &lt;- TRUE\n            }\n          }\n          \n          if (!improved) break\n        }\n        \n        # Dann nach oben\n        while (TRUE) {\n          improved &lt;- FALSE\n          \n          # Versuche VO2_slow zu erhöhen\n          if (current_VO2_slow &lt; 1.0) {  # Angenommen, 1.0 ist die obere Grenze für VO2_slow\n            new_VO2_slow &lt;- min(1.0, current_VO2_slow + 0.01)\n            new_rss &lt;- sum((data_subset$VO2_t - model(current_VO2_fast, current_tau_fast, new_VO2_slow, current_tau_slow, t_delay_slow))^2)\n            if (new_rss &lt; current_rss) {\n              current_VO2_slow &lt;- new_VO2_slow\n              current_rss &lt;- new_rss\n              improved &lt;- TRUE\n            }\n          }\n          \n          # Versuche tau_slow zu erhöhen\n          new_tau_slow &lt;- current_tau_slow + 0.1\n          new_rss &lt;- sum((data_subset$VO2_t - model(current_VO2_fast, current_tau_fast, current_VO2_slow, new_tau_slow, t_delay_slow))^2)\n          if (new_rss &lt; current_rss) {\n            current_tau_slow &lt;- new_tau_slow\n            current_rss &lt;- new_rss\n            improved &lt;- TRUE\n          }\n          \n          if (!improved) break\n        }\n        \n        if (current_rss &lt; best_rss) {\n          best_rss &lt;- current_rss\n          best_t_delay_slow &lt;- t_delay_slow\n          best_VO2_fast &lt;- current_VO2_fast\n          best_tau_fast &lt;- current_tau_fast\n          best_VO2_slow &lt;- current_VO2_slow\n          best_tau_slow &lt;- current_tau_slow\n        }\n        \n        incProgress(1 / num_iterations, detail = paste(\"Iteration\", i, \"von\", num_iterations))\n      }\n    })\n    \n    if (!is.null(best_t_delay_slow)) {\n      updateSliderInput(session, \"time_delay_slow\", value = best_t_delay_slow)\n      updateSliderInput(session, \"VO2\", value = best_VO2_fast)\n      updateSliderInput(session, \"tau_fast\", value = best_tau_fast)\n      updateSliderInput(session, \"VO2_slow\", value = best_VO2_slow)\n      updateSliderInput(session, \"tau_slow\", value = best_tau_slow)\n      \n      predicted &lt;- VO2_Start + best_VO2_fast * (1 - exp(-(data_subset$t_s - t_delay) / best_tau_fast)) +\n        best_VO2_slow * (1 - exp(-(pmax(data_subset$t_s - best_t_delay_slow, 0)) / best_tau_slow))\n      r_squared &lt;- calculate_r_squared(data_subset$VO2_t, predicted)\n      current_r_squared(r_squared)\n      \n      showNotification(sprintf(\"Schritt 2 erfolgreich. R²: %.3f\", r_squared), type = \"message\")\n    } else {\n      showModal(modalDialog(\n        title = \"Fit fehlgeschlagen\",\n        \"Die Anpassung für die langsame Komponente konnte nicht erfolgreich durchgeführt werden.\",\n        easyClose = TRUE,\n        footer = NULL\n      ))\n    }\n  })\n  \n  observeEvent(input$fit_optimize, {\n    req(current_data())\n    Beispieldaten &lt;- current_data()\n    \n    req(input$time_delay, input$VO2_Start, input$VO2, input$tau_fast, input$VO2_slow, input$tau_slow, input$time_delay_slow)\n    \n    t_delay &lt;- input$time_delay\n    VO2_Start &lt;- input$VO2_Start\n    \n    data_subset &lt;- Beispieldaten[Beispieldaten$t_s &gt;= t_delay, ]\n    \n    # Werte aus Schritt 2\n    VO2_step2 &lt;- input$VO2\n    tau_fast_step2 &lt;- input$tau_fast\n    VO2_slow_step2 &lt;- input$VO2_slow\n    tau_slow_step2 &lt;- input$tau_slow\n    t_delay_slow_step2 &lt;- input$time_delay_slow\n    \n    # Berechne R² für Schritt 2\n    step2_predicted &lt;- VO2_Start + VO2_step2 * (1 - exp(-(data_subset$t_s - t_delay) / tau_fast_step2)) +\n      VO2_slow_step2 * (1 - exp(-(pmax(data_subset$t_s - t_delay_slow_step2, 0)) / tau_slow_step2))\n    step2_r_squared &lt;- calculate_r_squared(data_subset$VO2_t, step2_predicted)\n    \n    best_fit &lt;- NULL\n    best_rss &lt;- Inf\n    \n    withProgress(message = 'Optimierung läuft', value = 0, {\n      for (i in 1:1000) {\n        # Randomisierte Startwerte innerhalb der festgelegten Grenzen\n        VO2_start &lt;- runif(1, VO2_step2 * 0.98, VO2_step2 * 1.02)\n        tau_fast_start &lt;- runif(1, max(10, tau_fast_step2 - 3), tau_fast_step2 + 3)\n        VO2_slow_start &lt;- runif(1, VO2_slow_step2 * 0.98, VO2_slow_step2 * 1.02)\n        tau_slow_start &lt;- runif(1, max(90, tau_slow_step2 - 3), tau_slow_step2 + 3)\n        t_delay_slow_start &lt;- runif(1, max(0, t_delay_slow_step2 - 5), t_delay_slow_step2 + 5)\n        \n        start_values &lt;- list(\n          VO2 = VO2_start,\n          tau_fast = tau_fast_start,\n          VO2_slow = VO2_slow_start,\n          tau_slow = tau_slow_start,\n          t_delay_slow = t_delay_slow_start\n        )\n        \n        fit &lt;- try(nlsLM(VO2_t ~ VO2 * (1 - exp(-(t_s - t_delay) / tau_fast)) + \n                           VO2_slow * (1 - exp(-(t_s - t_delay_slow) / tau_slow)) + VO2_Start,\n                         data = data_subset,\n                         start = start_values,\n                         lower = c(VO2 = VO2_step2 * 0.98, \n                                   tau_fast = max(10, tau_fast_step2 - 3), \n                                   VO2_slow = VO2_slow_step2 * 0.98, \n                                   tau_slow = max(90, tau_slow_step2 - 3), \n                                   t_delay_slow = max(0, t_delay_slow_step2 - 5)),\n                         upper = c(VO2 = VO2_step2 * 1.02, \n                                   tau_fast = tau_fast_step2 + 3, \n                                   VO2_slow = VO2_slow_step2 * 1.02, \n                                   tau_slow = tau_slow_step2 + 3, \n                                   t_delay_slow = t_delay_slow_step2 + 5),\n                         control = nls.control(maxiter = 1024)), silent = TRUE)\n        \n        if (!inherits(fit, \"try-error\")) {\n          rss &lt;- sum(residuals(fit)^2)\n          if (rss &lt; best_rss) {\n            best_rss &lt;- rss\n            best_fit &lt;- fit\n          }\n        }\n        \n        incProgress(1/1000, detail = paste(\"Iteration\", i))\n      }\n    })\n    \n    if (!is.null(best_fit)) {\n      params &lt;- as.list(coef(best_fit))\n      step3_predicted &lt;- VO2_Start + params$VO2 * (1 - exp(-(data_subset$t_s - t_delay) / params$tau_fast)) +\n        params$VO2_slow * (1 - exp(-(pmax(data_subset$t_s - params$t_delay_slow, 0)) / params$tau_slow))\n      step3_r_squared &lt;- calculate_r_squared(data_subset$VO2_t, step3_predicted)\n      \n      if (step3_r_squared &gt; step2_r_squared) {\n        updateSliderInput(session, \"VO2\", value = params$VO2)\n        updateSliderInput(session, \"tau_fast\", value = params$tau_fast)\n        updateSliderInput(session, \"VO2_slow\", value = params$VO2_slow)\n        updateSliderInput(session, \"tau_slow\", value = params$tau_slow)\n        updateSliderInput(session, \"time_delay_slow\", value = params$t_delay_slow)\n        \n        current_r_squared(step3_r_squared)\n        showNotification(sprintf(\"Optimierung erfolgreich. Neues R²: %.3f\", step3_r_squared), type = \"message\")\n      } else {\n        current_r_squared(step2_r_squared)\n        showNotification(sprintf(\"Kein besserer Fit gefunden. Ergebnisse von Schritt 2 beibehalten. R²: %.3f\", step2_r_squared), type = \"warning\")\n      }\n    } else {\n      current_r_squared(step2_r_squared)\n      showNotification(sprintf(\"Optimierung fehlgeschlagen. Ergebnisse von Schritt 2 beibehalten. R²: %.3f\", step2_r_squared), type = \"warning\")\n    }\n  })\n  \n  output$plot &lt;- renderPlotly({\n    req(input$VO2, input$tau_fast, input$VO2_slow, input$tau_slow, input$VO2_Start, input$time_delay, input$time_delay_slow, input$VO2_Ruhe)\n    \n    VO2 &lt;- input$VO2\n    tau_fast &lt;- input$tau_fast\n    VO2_slow &lt;- input$VO2_slow\n    tau_slow &lt;- input$tau_slow\n    VO2_Start &lt;- input$VO2_Start\n    t_delay &lt;- input$time_delay\n    t_delay_slow &lt;- input$time_delay_slow\n    VO2_Ruhe &lt;- input$VO2_Ruhe\n    \n    model_function &lt;- function(t_s, VO2, tau_fast, VO2_slow, tau_slow, VO2_Start, t_delay, t_delay_slow) {\n      VO2 * (1 - exp(-(pmax(t_s - t_delay, 0)) / tau_fast)) + \n        pmax(VO2_slow * (1 - exp(-(pmax(t_s - t_delay_slow, 0)) / tau_slow)), 0) + \n        VO2_Start\n    }\n    \n    model_fast &lt;- function(t_s, VO2, tau_fast, t_delay) {\n      VO2 * (1 - exp(-(pmax(t_s - t_delay, 0)) / tau_fast))\n    }\n    \n    model_slow &lt;- function(t_s, VO2_slow, tau_slow, t_delay_slow) {\n      pmax(VO2_slow * (1 - exp(-(pmax(t_s - t_delay_slow, 0)) / tau_slow)), 0)\n    }\n    \n    Beispieldaten &lt;- current_data()\n    \n    max_t &lt;- if (!is.null(Beispieldaten) && nrow(Beispieldaten) &gt; 0) max(Beispieldaten$t_s, na.rm = TRUE) else 300\n    max_x &lt;- max_t * 1.20\n    t_s &lt;- seq(0, max_x * 1.20, by = 1)\n    \n    model_values &lt;- ifelse(t_s &gt;= t_delay, model_function(t_s, VO2, tau_fast, VO2_slow, tau_slow, VO2_Start, t_delay, t_delay_slow), NA)\n    fast_values &lt;- ifelse(t_s &gt;= t_delay, model_fast(t_s, VO2, tau_fast, t_delay), NA)\n    slow_values &lt;- ifelse(t_s &gt;= t_delay_slow, model_slow(t_s, VO2_slow, tau_slow, t_delay_slow), NA)\n    \n    max_y &lt;- if (!is.null(Beispieldaten) && nrow(Beispieldaten) &gt; 0) max(Beispieldaten$VO2_t, na.rm = TRUE) * 1.05 else max(model_values, na.rm = TRUE) * 1.05\n    \n    eq_text &lt;- sprintf(\"V̇O₂ (t) = %.2f * (1 - e&lt;sup&gt;-(t - %.0f) / %.1f&lt;/sup&gt;) + %.2f * (1 - e&lt;sup&gt;-(t - %.1f) / %.0f&lt;/sup&gt;) + %.2f\",\n                       VO2, t_delay, tau_fast, VO2_slow, t_delay_slow, tau_slow, VO2_Start)\n    t_halb &lt;- tau_fast * log(2)\n    \n    shapes &lt;- list(\n      list(\n        type = \"line\", x0 = t_delay, x1 = t_delay, y0 = 0, y1 = max_y * 1.5,\n        line = list(color = \"gray\", width = 1, dash = \"dash\")\n      ),\n      list(\n        type = \"line\", x0 = t_delay_slow, x1 = t_delay_slow, y0 = 0, y1 = max_y * 1.5,\n        line = list(color = \"gray\", width = 1, dash = \"dash\")\n      )\n    )\n    \n    p &lt;- plot_ly() %&gt;%\n      add_trace(x = ~t_s, y = ~model_values, type = 'scatter', mode = 'lines',\n                name = 'V̇O2-Modellfunktion', line = list(color = '#EF6F6A')) %&gt;%\n      add_trace(x = ~t_s, y = ~fast_values, type = 'scatter', mode = 'lines', \n                name = 'V̇O&lt;sub&gt;2&lt;/sub&gt;&lt;sub&gt;,fast&lt;/sub&gt;', line = list(color = '#42BA97')) %&gt;%\n      add_trace(x = ~t_s, y = ~slow_values, type = 'scatter', mode = 'lines', \n                name = 'V̇O&lt;sub&gt;2&lt;/sub&gt;&lt;sub&gt;,slow&lt;/sub&gt;', line = list(color = '#BB7693')) %&gt;%\n      layout(title = \"Biexponentielle V̇O&lt;sub&gt;2&lt;/sub&gt;-Modellfunktion\",\n             margin = list(t = 40),\n             xaxis = list(title = \"t [s]\", range = c(0, max_x)),\n             yaxis = list(title = \"V̇O&lt;sub&gt;2&lt;/sub&gt; (t) [l·min&lt;sup&gt;-1&lt;/sup&gt;]\", tickformat = \".1f\"),\n             legend = list(\n               x = 0.05,\n               y = 0.99,\n               xanchor = \"left\",\n               yanchor = \"top\",\n               bgcolor = \"rgba(255, 255, 255, 0.3)\",\n               bordercolor = \"rgba(0,0,0,0)\",\n               borderwidth = 0\n             ),\n             shapes = shapes,\n             annotations = list(\n               list(\n                 x = max_x * 0.35,\n                 y = max_y * 0.3,\n                 text = eq_text,\n                 showarrow = FALSE,\n                 xanchor = 'left',\n                 yanchor = 'bottom',\n                 font = list(\n                   family = \"Arial, sans-serif\",\n                   size = 10,\n                   color = \"black\"\n                 )\n               ),\n               list(\n                 x = max_x * 0.35,\n                 y = max_y * 0.2,\n                 text = paste(\"T&lt;sub&gt;1/2&lt;/sub&gt;:\", round(t_halb, 1),\" s\"),\n                 showarrow = FALSE,\n                 xanchor = 'left',\n                 yanchor = 'bottom',\n                 font = list(\n                   family = \"Arial, sans-serif\",\n                   size = 10,\n                   color = \"black\"\n                 )\n               ),\n               list(\n                 x = t_delay, y = max_y * 0.85, text = sprintf(\"t&lt;sub&gt;delay&lt;/sub&gt;: %.1f s\", t_delay), showarrow = FALSE, xanchor = \"left\", yanchor = \"bottom\",\n                 textangle = -90, font = list(size = 11)\n               ),\n               list(\n                 x = t_delay_slow, y = max_y * 0.85, text = sprintf(\"t&lt;sub&gt;delay_slow&lt;/sub&gt;: %.1f s\", t_delay_slow), showarrow = FALSE, xanchor = \"left\", yanchor = \"bottom\",\n                 textangle = -90, font = list(size = 11)\n               )\n             )) %&gt;%\n      add_trace(x = ~t_s, y = ~rep(VO2_Ruhe, length(t_s)), type = 'scatter', mode = 'lines',\n                name = 'V̇O&lt;sub&gt;2,Ruhe&lt;/sub&gt;', line = list(color = '#1CADE4'))\n    \n    if (show_data() && !is.null(Beispieldaten) && nrow(Beispieldaten) &gt; 0) {\n      data_subset &lt;- Beispieldaten[Beispieldaten$t_s &gt;= t_delay, ]\n      \n      model_values_at_data &lt;- model_function(data_subset$t_s, VO2, tau_fast, VO2_slow, tau_slow, VO2_Start, t_delay, t_delay_slow)\n      \n      r_squared &lt;- calculate_r_squared(data_subset$VO2_t, model_values_at_data)\n      current_r_squared(r_squared)\n      \n      current_r_squared(r_squared)  # Aktualisieren Sie die reaktive Variable\n      \n      p &lt;- p %&gt;%\n        add_trace(data = Beispieldaten, x = ~t_s, y = ~VO2_t, type = 'scatter', mode = 'markers+lines',\n                  name = 'V̇O&lt;sub&gt;2&lt;/sub&gt;', \n                  marker = list(color = 'rgba(38, 131, 198, 0.9)', size = 5.0),\n                  line = list(color = 'rgba(38, 131, 198, 1.0)', width = 0.65, dash = '4 4'))\n      \n      p$x$layout$annotations &lt;- c(p$x$layout$annotations,\n                                  list(\n                                    list(\n                                      x = max_x * 0.35,\n                                      y = max_y * 0.10,\n                                      text = sprintf(\"R²: %.3f\", current_r_squared()),\n                                      showarrow = FALSE,\n                                      xanchor = 'left',\n                                      yanchor = 'bottom',\n                                      font = list(\n                                        family = \"Arial, sans-serif\",\n                                        size = 10,\n                                        color = \"black\"\n                                      )\n                                    )\n                                  ))\n    }\n    \n    p\n  })\n  output$instructions &lt;- renderUI({\n    HTML(\n      \"&lt;div style='margin-top: 20px; padding: 10px; background-color: #f0f0f0; border: 1px solid #ddd; border-radius: 5px; width: fit-content;'&gt;\n      &lt;h4 style='color: #333;'&gt;&lt;strong&gt;Anleitung - Modellanpassung:&lt;/strong&gt;&lt;/h4&gt;\n      &lt;ol style='color: #555; list-style-position: outside; padding-left: 20px;'&gt;\n        &lt;li&gt;Beispiel-VO2-Daten einfügen oder eigene VO2-Daten als CSV-Datei hochladen.&lt;/li&gt;\n        &lt;li&gt;Zeitverzögerung_fast festlegen, um den Startpunkt der Modellanpassung zu bestimmen.&lt;/li&gt;\n        &lt;li&gt;Schrittweise die Modellanpassung durchführen:\n          &lt;ol&gt;\n            &lt;li&gt;Fit: Schnelle Komponente&lt;/li&gt;\n            &lt;li&gt;Fit: Langsame Komponente Verfeinerung&lt;/li&gt;\n            &lt;li&gt;Fit: Optimierung&lt;/li&gt;\n          &lt;/ol&gt;\n        &lt;/li&gt;\n        &lt;li&gt;Alternative: Manuelle Anpassung der Modellparameter über die Schieberegler.&lt;/li&gt;\n      &lt;/ol&gt;\n      &lt;div style='margin-top: 20px;'&gt;&lt;/div&gt;\n      &lt;pre style='background-color: #f8f8f8; padding: 10px; border: 1px solid #ddd; border-radius: 5px; width: fit-content;'&gt;\nVO2-Daten können als CSV-Datei im folgenden Format hochgeladen werden:\nt_s,VO2_t\n0.0,0.479\n1.0,0.459\n2.3,0.488\n…\n      &lt;/pre&gt;\n    &lt;/div&gt;\"\n    )\n  })\n}\n\n# App ausführen\nshinyApp(ui = ui, server = server)\n\n\n\n\n\n\nModellanpassung - Details:\n\n\n\n\n\n1. Schnelle Komponente (1. Fit):\n\nVerwendete Funktion: nlsLM\nParameter: V̇O2_fast, tau_fast\nGrenzen:\n\nV̇O2_fast: 0.5 bis 7.0 l/min\ntau_fast: 10 bis 120 s\n\nProzess: 100 Iterationen mit zufälligen Startwerten\nOptimierung: Minimierung der Residuenquadratsumme (RSS)\n\n2. Langsame Komponente & Verfeinerung (2. Fit):\n\nParameter: V̇O2_fast, tau_fast, V̇O2_slow, tau_slow, t_delay_slow\nInitiale Werte (basierend auf Ozyener et al., 2001):\n\nV̇O2_slow: 0.4 l/min\ntau_slow: 160 s\n\nGrenzen:\n\nV̇O2_slow: 0.05 bis 1.0 l/min\ntau_slow: 90 bis Unendlich s\nt_delay_slow: tau_fast + t_delay bis max(t_s)\n\nProzess für t_delay_slow:\n\nBerechnung des Suchbereichs: von (tau_fast + t_delay) bis zum maximalen Zeitpunkt der Daten\nIteration durch jeden möglichen Wert in diesem Bereich (1-Sekunden-Schritte)\nFür jeden t_delay_slow-Wert:\n\nBerechnung der RSS mit festen Werten für V̇O2_slow (0.4 l/min) und tau_slow (160 s)\n\nAuswahl des t_delay_slow-Wertes mit der niedrigsten RSS\n\nOptimierung von V̇O2_fast und tau_fast:\n\nSchrittweise Reduzierung von V̇O2_fast (0.01 l/min) und tau_fast (0.1 s)\nBei jeder Änderung: Berechnung der neuen RSS\nAkzeptanz der Änderung nur bei Verbesserung der RSS\nWiederholung bis keine Verbesserung mehr möglich\n\nOptimierung von V̇O2_slow und tau_slow:\n\nZunächst Reduzierung: V̇O2_slow (0.01 l/min) und tau_slow (0.1 s)\nDann Erhöhung: V̇O2_slow (0.01 l/min) und tau_slow (0.1 s)\nBei jeder Änderung: Berechnung der neuen RSS\nAkzeptanz der Änderung nur bei Verbesserung der RSS\nWiederholung jeder Richtung bis keine Verbesserung mehr möglich\n\n\n3. Optimierung (3. Fit):\n\nVerwendete Funktion: nlsLM\nParameter: V̇O2_fast, tau_fast, V̇O2_slow, tau_slow, t_delay_slow\nGrenzen: Basierend auf den Ergebnissen von Schritt 2\n\nV̇O2_fast: ±2% des Wertes aus Schritt 2\ntau_fast: ±3 s des Wertes aus Schritt 2 (Minimum 10 s)\nV̇O2_slow: ±2% des Wertes aus Schritt 2\ntau_slow: ±3 s des Wertes aus Schritt 2 (Minimum 90 s)\nt_delay_slow: ±5 s des Wertes aus Schritt 2 (Minimum 0 s)\n\nProzess: 1000 Iterationen mit zufälligen Startwerten innerhalb der Grenzen\nOptimierung: Minimierung der RSS",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Energieumsatzberechnung",
      "Aerobe Energiekomponente (W~Aerob~)"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Energieumsatzberechnung/Aerobe_Energiebereitstellung.html#methodik-umgang-mit-dotvo_2-daten-in-dieser-arbeit",
    "href": "Theoretischer_Hintergrund/Energieumsatzberechnung/Aerobe_Energiebereitstellung.html#methodik-umgang-mit-dotvo_2-daten-in-dieser-arbeit",
    "title": "Aerobe Energiekomponente (WAerob)",
    "section": "Methodik: Umgang mit \\(\\dot{V}O_{2}\\)-Daten in dieser Arbeit",
    "text": "Methodik: Umgang mit \\(\\dot{V}O_{2}\\)-Daten in dieser Arbeit\nIn dieser Arbeit wurde der Anstieg des \\(\\dot{V}O_{2}\\,(t)\\) nach Belastungsbeginn für jede Belastungsstufe wie folgt analysiert: Zunächst wurden aus den Atemzug-für-Atemzug \\(\\dot{V}O_{2}\\)-Daten die Ausreißer entfernt. Danach erfolgte eine Glättung der Daten mittels eines gleitenden 3-Atemzug-Durchschnitts, gefolgt von der Kurvenanpassung. Vor der Kurvenanpassung wurde die Zeitverzögerung der Hauptkomponente des \\(\\dot{V}O_{2}\\,(t)\\) grafisch so bestimmt, dass die Phase-I-Daten der kardiorespiratorischen Antwort nicht einbezogen wurden. Dies entsprach in der Regel dem von (Bearden & Moffatt, 2000; Stirling et al., 2005) beschriebenen Zeitraum von 10-25 Sekunden für Phase 1. Die Kurvenanpassung wurde anschließend mit Gleichung 6 an die jeweiligen Daten durchgeführt. Die Modellparameter der Kurvenanpassung wurden wie folgt gewählt:\n\n\n\n\n\n\nParameter - Kurvenanpassung:\n\n\n\n\n\n\nVerwendete Funktion: nlsLM\n\nMaximale Iterationen: 1024\nVerwendung des Levenberg-Marquardt-Algorithmus\n\nParameter: V̇O2 (Amplitude), Tau\nModell: V̇O2_t ~ V̇O2 · (1 - exp(-(t_s - t_delay) / Tau)) + V̇O2_Start\nGrenzen:\n\nV̇O2: 0.5 bis 7.0 l/min\nTau: 5 bis 360 s\n\nOptimierung: Minimierung der Residuenquadratsumme (RSS)\n\n\n\n\nDies erfolgte für jedes Belastungsintervall mittels nichtlinearer Regression unter Verwendung des in Gleichung 6 beschriebenen mono-exponentiellen 3-Parameter-Modells (Francescato et al., 2003). Da die Probanden in den Erholungsphasen nicht vollständig ruhten, war der Sauerstoffvolumenstrom zu Beginn der Belastung (\\(\\dot{V}O_{2, Start}\\)) signifikant höher als \\(\\dot{V}O_{2,Ruhe}\\). \\(\\dot{V}O_{2net, SS}\\) wurde als der Wert der Modellfunktion von \\(\\dot{V}O_{2gross, SS}\\) zum Zeitpunkt \\(4 \\cdot τ_{Start}\\) abzüglich \\(\\dot{V}O_{2,Ruhe}\\) bestimmt. Bis zum Zeitpunkt \\(4 \\cdot τ_{Start}\\) hat ungefähr 98,2 % des Anstiegs von \\(\\dot{V}O_{2, Belastung}(t)\\) stattgefunden. Daher wurde dieser Zeitpunkt näherungsweise als Steady-State (SS) Wert des Sauerstoffvolumenstroms während der Belastung festgelegt. Ein Modellierungsbeispiel ist in Abbildung 4 zu sehen:\n\n\n\n\n\n\nAbbildung 4: Modellierung der Sauerstoffkinetik während des Belastungstests 01_2 mit exponentieller Anpassungskurve",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Energieumsatzberechnung",
      "Aerobe Energiekomponente (W~Aerob~)"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Energieumsatzberechnung/Aerobe_Energiebereitstellung.html#quellenverzeichnis",
    "href": "Theoretischer_Hintergrund/Energieumsatzberechnung/Aerobe_Energiebereitstellung.html#quellenverzeichnis",
    "title": "Aerobe Energiekomponente (WAerob)",
    "section": "Quellenverzeichnis",
    "text": "Quellenverzeichnis\n\n\nBarstow, T. J. (1994). Characterization of VO2 kinetics during heavy exercise. Medicine and science in sports and exercise, 26(11), 1327–1334.\n\n\nBarstow, T. J., & Mole, P. A. (1991). Linear and nonlinear characteristics of oxygen uptake kinetics during heavy exercise. Journal of Applied Physiology, 71(6), 2099–2106. https://doi.org/10.1152/jappl.1991.71.6.2099\n\n\nBearden, S. E., & Moffatt, R. J. (2000). V̇O2 kinetics and the O2 deficit in heavy exercise. Journal of Applied Physiology, 88(4), 1407–1412. https://doi.org/10.1152/jappl.2000.88.4.1407\n\n\nCiba-Geigy. (1977). Wissenschaftliche Tabellen Geigy: Einheiten im Meßwesen, Körperflüssigkeiten, Organe, Energiehaushalt, Ernährung (8. Auflage, S. 290). CIBA-GEIGY AG.\n\n\nClark, C. (2014). A detailed comparison of oxygen uptake kinetics at a range of exercise intensities (phdthesis February; S. 150). Gloucestershire.\n\n\nFick, A. (1855). Über Diffusion. Annalen der Physik, 170(1), 59–86. https://doi.org/10.1002/andp.18551700105\n\n\nFrancescato, M. P., Cettolo, V., & Di Prampero, P. E. (2003). Relationships between mechanical power, O2 consumption, O2 deficit and high-energy phosphates during calf exercise in humans. Pflugers Archiv European Journal of Physiology, 445(5), 622–628. https://doi.org/10.1007/s00424-002-0992-9\n\n\nHarris, J. A., & Benedict, F. G. (1918). A Biometric Study of Human Basal Metabolism. Proceedings of the National Academy of Sciences of the United States of America, 4(12), 370–373. https://doi.org/10.1073/pnas.4.12.370\n\n\nHenry, F. M., & DeMoor, J. C. (1956). Lactic and alactic oxygen consumption in moderate exercise of graded intensity. Journal of applied physiology, 8(6), 608–614. https://doi.org/10.1152/jappl.1956.8.6.608\n\n\nHill, A. V., Long, C. N. H., & Lupton, H. (1924). Muscular exercise, lactic acid, and the supply and utilisation of oxygen. Proceedings of the Royal Society of London. Series B, Containing Papers of a Biological Character, 96(679), 438–475. https://doi.org/10.1098/rspb.1924.0037\n\n\nMargaria, R., Manglli, F., Cuttica, F., & Cerretelli, P. (1965). The kinetics of the oxygen consumption at the onset of muscular exercise in man. Ergonomics, 8(1), 49–54. https://doi.org/10.1080/00140136508930773\n\n\nÖzyener, F., Rossiter, H. B., Ward, S. A., & Whipp, B. J. (2001). Influence of exercise intensity on the on- and off-transient kinetics of pulmonary oxygen uptake in humans. The Journal of physiology, 533(Pt 3), 891–902. https://doi.org/10.1111/j.1469-7793.2001.t01-1-00891.x\n\n\nSietsema, K. E., Sue, D. Y., Stringer, W. W., & Ward, S. A. (2020). Wasserman & Whipp’s Principles of Exercise Testing and Interpretation: Including Pathophysiology and Clinical Applications (6. Edition, S. 600). Wolters Kluwer.\n\n\nStegemann, J. (1991). Leistungsphysiologie (4. Edition, S. 385). Georg Thieme Verlag.\n\n\nStirling, J. R., Zakynthinaki, M. S., & Saltin, B. (2005). A model of oxygen uptake kinetics in response to exercise: Including a means of calculating oxygen demand/deficit/debt. Bulletin of Mathematical Biology, 67(5), 989–1015. https://doi.org/10.1016/j.bulm.2004.12.005\n\n\nWhipp, B. J. (1971). Rate constant for the kinetics of oxygen uptake during light exercise. Journal of applied physiology, 30(2), 261–263. https://doi.org/10.1152/jappl.1971.30.2.261\n\n\nWhipp, B. J., Ward, S. A., Lamarra, N., Davis, J. A., & Wasserman, K. (1982). Parameters of ventilatory and gas exchange dynamics during exercise. Journal of applied physiology: respiratory, environmental and exercise physiology, 52(6), 1506–1513. https://doi.org/10.1152/jappl.1982.52.6.1506\n\n\nWhipp, B. J., & Wasserman, K. (1972). Oxygen uptake kinetics for various intensities of constant-load work. Journal of applied physiology, 33(3), 351–356. https://doi.org/10.1152/jappl.1972.33.3.351",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Energieumsatzberechnung",
      "Aerobe Energiekomponente (W~Aerob~)"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Energieumsatzberechnung/Aerobe_Energiebereitstellung.html#footnotes",
    "href": "Theoretischer_Hintergrund/Energieumsatzberechnung/Aerobe_Energiebereitstellung.html#footnotes",
    "title": "Aerobe Energiekomponente (WAerob)",
    "section": "Fußnoten",
    "text": "Fußnoten\n\n\nDie LT beschreibt den Punkt, an dem das Blutlaktat bei zunehmender Belastungsintensität über das Ruheniveau hinaus zu akkumulieren beginnt (Sietsema et al., 2020).↩︎",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Energieumsatzberechnung",
      "Aerobe Energiekomponente (W~Aerob~)"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Energieumsatzberechnung/index_Energieumsatzberechnung.html#indirekte-kalorimetrie",
    "href": "Theoretischer_Hintergrund/Energieumsatzberechnung/index_Energieumsatzberechnung.html#indirekte-kalorimetrie",
    "title": "Energieumsatzberechnung",
    "section": "Indirekte Kalorimetrie",
    "text": "Indirekte Kalorimetrie\n\nStöchiometrische Grundlagen der Energieumsatzberechnung\n\n\nMit Hilfe der indirekten Kalorimetrie kann der Energieumsatz einer Person in Ruhe oder während einer Belastung bestimmt werden. Im Gegensatz zur direkten Kalorimetrie, bei der die Wärmeabgabe eines Organismus gemessen wird, basiert die indirekte Kalorimetrie auf der Analyse der Atemgase, welche mit einem Spirometriemesssystem erfasst werden können. Mit der stöchiometrischen Beziehung zwischen dem oxidierten Nährstoff, dem dabei verstoffwechseltem Sauerstoff (O2) und dem abgegebenen Kohlendioxid (CO2) können die stöchiometrische Grundgleichungen für die Kohlenhydrat-, Fett- und Eiweißoxidation (Gleichung 2 und Gleichung 5) aufgestellt werden und der Energieumsatz und der Substratumsatz eines Individuums berechnet werden. Diese Zusammenhänge der Stoffwechselrate im Hinblick auf den O2-Umsatz und der CO2-Abgabe, die durch den respiratorischen Quotienten (\\(\\text{RQ}(t) = \\frac{\\dot{V}\\text{CO}_2(t)}{\\dot{V}\\text{O}_2(t)}\\)) beschrieben werden, sowie die Menge der dabei verstoffwechselten Nährstoffe wurden zu Beginn des 20. Jahrhunderts unter anderem von Zuntz & Schumburg (1901) entwickelt und werden immer noch in ähnlicher Form verwendet (siehe Tabelle 1)(Brooks et al., 2004, S. 10). Die stöchiometrische Gleichung für die Oxidation von Glukose (C6H12O6) lautet:\n\\[\n\\begin{aligned}\n\\text{C}_6\\text{H}_{12}\\text{O}_6 + 6\\text{O}_2 &\\rightarrow 6\\text{CO}_2 + 6\\text{H}_2\\text{O} \\quad (\\Delta G = -2869 \\text{kJ}) \\\\\n\\text{RQ} &= \\frac{\\text{CO}_2}{\\text{O}_2} = \\frac{6}{6} = 1.0\n\\end{aligned}\n\\tag{2}\\]\nEin Molekül Glukose reagiert mit sechs Molekülen O2, wobei sechs Moleküle CO2 und sechs Moleküle Wasser (H2O) entstehen. Das Molekulargewicht der Glukose beträgt ca. 180 g/mol. Ein Mol O2 entspricht unter Standardbedingungen von 0 Grad Celcius wie in Gleichung 3 gezeigt ca. 22.414 Liter (Ciba-Geigy, 1977, S. 45). Quantitativ reagiert also ein Mol C6H12O6 (≙180 g) mit 6 mol O2 (≙134.4 Liter) zu 6 mol H2O und 6 mol CO2 (≙134.4 Liter) (Stegemann, 1991, S. 57).\n\n\n\n\n\n\n\n\n\n\n\n\n\nTabelle 1: Zusammenhang zwischen dem respiratorischem Koeffizienten und dem kalorischen Äquivalent in [kcal · l-1] und [kJ · l-1] (modifiziert nach Zuntz, 1901, S. 361; Stegemann, 1991, S. 59)\n\n\n\n\n\n\n\\[\n\\begin{gathered}\n\\text{Umrechnung von 0 Grad Celsius in Kelvin:} \\\\\n\\text{T} \\text{ [K]} = \\text{T [}^{\\,\\circ} \\text{C]} + 273.15\\rightarrow 0\\,^{\\circ}\\text{C} + 273.15 = 273.15 \\text{ K} \\\\[10pt]\n\\text{Definition des Standarddruckes P =} \\,1 \\text{ atm} = 101325 \\text{ Pa} \\\\\n\\text{Universelle molare Gaskonstante R}  = 8.314 \\text{ J} \\cdot \\text{mol}^{-1} \\cdot \\text{K}^{-1} \\\\ \\downarrow \\\\\nV_{m,O_2} \\text{ [L} \\cdot \\text{mol}^{-1}\\text{]} = \\frac{R \\cdot T}{P} \\cdot 1000 \\\\\nV_{m,O_2} = \\frac{8.314 \\text{ [J} \\cdot \\text{mol}^{-1} \\cdot \\text{K}^{-1}\\text{]} \\cdot 273.15 \\text{ [K]}}{101325 \\text{ [Pa}\\text{]}} \\cdot 1000 \\text{ [L} \\cdot \\text{m}^{-3}\\text{]} = 22.414 \\text{ L} \\cdot \\text{mol}^{-1}\n\\end{gathered}\n\\tag{3}\\]\nDie Änderung der Gibbs’schen freien Energie bei der Verbrennung von Glukose mit O2 wird in Gleichung 2 durch ΔG ausgedrückt, wobei das negative Vorzeichen verdeutlicht, dass es sich um eine spontan ablaufende, exergone Reaktion handelt, bei der Energie freigesetzt wird. Das kalorische Äquivalent der Kohlenhydratoxidation (kÄKH) für einen Liter O2 erhält man, indem man die Energie, die bei der vollständigen Verbrennung von einem Mol Glukose frei wird (ΔG = 2869 kJ) (Stegemann, 1991, S. 43), durch die dabei umgesetzte Menge an O2 teilt. kÄKH beträgt nach Gleichung 4 ungefähr:\n\\[\nkÄ_{\\text{KH}} = \\frac{2869\\,[\\text{kJ}]}{134,4\\,[\\text{l} \\cdot \\text{O}_2]} \\approx 21,3\\,[\\text{kJ} \\cdot \\text{l}^{-1} \\cdot \\text{O}_2^{-1}]\n\\tag{4}\\]\nLipide enthalten im Vergleich zu Kohlenhydraten deutlich weniger Sauerstoffatome und benötigen daher mehr Sauerstoff im Oxidationsprozess. Außerdem können Fettsäuren im Gegensatz zu Kohlenhydraten, deren biochemische Formel immer die gleiche ist (C6H12O6), unterschiedliche chemische Zusammensetzungen haben. Der verstoffwechselte O2 und das produzierte CO2 hängen dabei von der Art des oxidierten Lipids ab. Die vollständige Oxidation eines Moleküls der am häufigsten verstoffwechselten Fettsäure, der Palmitinsäure (C16H32O2; 1 Mol ≙ 256 g), im menschlichen Körper verwendet 23 Moleküle O2 und produziert dabei 16 Moleküle CO2 und 16 Moleküle H2O. Die stöchiometrische Gleichung der Verstoffwechselung lautet somit:\n\\[\n\\begin{aligned}\n\\text{C}_{16}\\text{H}_{32}\\text{O}_2 + 23\\text{O}_2 &\\rightarrow 16\\text{CO}_2 + 16\\text{H}_2\\text{O} \\quad (\\Delta G = -9871 \\text{kJ}) \\\\\n\\text{RQ} &= \\frac{\\text{CO}_2}{\\text{O}_2} = \\frac{16}{23} \\approx 0.696\n\\end{aligned}\n\\tag{5}\\]\nDer RQ von Palmitinsäure entspricht daher 0.696. Je nach Art der oxidierten Fettsäure kann der RQ für Lipide zwischen 0.686 für Lignocerinsäure (C24H48O2) und 0.727 für Caprylsäure (C8H16O2) variieren (Jeukendrup & Gleeson, 2019, S. 100; McArdle et al., 2009, S. 186). Für die Berechnungen der Substratanteile wird in der Regel jedoch der RQ der Palmitinoxidation von etwa 0.7 verwendet.\nDas kalorische Äquivalent der Fettsäureoxidation (kÄFETT) kann berechnet werden, indem die frei werdende Energie beim vollständigen Abbau eines Mols Palmitinsäure (ΔG = 9871 kJ) und das Volumen von 23 Mol O2 unter Standardbedingungen (515.2 Liter) verwendet werden:\n\\[\nkÄ_{\\text{FETT}} = \\frac{9871\\,[\\text{kJ}]}{515,2\\,[\\text{l} \\cdot \\text{O}_2]} \\approx 19,2\\,[\\text{kJ} \\cdot \\text{l}^{-1} \\cdot \\text{O}_2^{-1}]\n\\tag{6}\\]\nDie in Gleichung 4 und Gleichung 6 berechneten Werte entsprechen ungefähr den häufig zur Energieumsatzberechnung benutzten Werten geläufiger Tabellen (siehe Tabelle 1 und Tabelle 2) (Stegemann, 1991, S. 57).Aus den Berechnungen wird deutlich, dass bei der Oxidation von Kohlenhydraten im Vergleich zu Fett etwa 7.4% mehr Energie pro umgesetzen O2 frei wird (Brooks, 2012): \\[\n\\frac{5.05 - 4.70 \\, [\\text{kcal} \\cdot \\text{Liter}^{-1} \\, \\text{O}_2]}{4.70 \\, [\\text{kcal} \\cdot \\text{Liter}^{-1} \\, \\text{O}_2]} = 0.074 \\approx 7.4\\%\n\\] Aus diesem Grund ist es bei intensiven Belastungen aufgrund der begrenzten O2-Umsatzrate förderlich, primär Kohlenhydrate zu verstoffwechseln, während es aufgrund der nahezu unbegrenzten körpereigenen Fettspeicher bei sehr lang andauernden Belastungen vorteilhaft ist, verstärkt Fettstoffwechsel zu betreiben.\n\n\n\n\n\n\n\n\n\n\nTabelle 2: Kalorische Äquivalente (kÄ) verschiedener Nahrungsbestandteile in kcal pro Liter O₂-Umsatz und den dazugehörigen RQ, sowie der Energiegehalt (EG) in kcal pro Gramm verstoffwechselten Substrates im und außerhalb des Körpers, bestimmt durch indirekte, direkte und Bombenkalorimetrie (modifiziert nach Brooks et al., 2004, S.49; Brooks, 2012)\n\n\n\n\nAus den angegebenen Berechnungen ergibt sich, dass Lipide bei einem RQ von etwa 0.70 und Kohlenhydrate bei einem RQ von 1.00 die Hauptenergiequelle sind. Für RQ-Werte zwischen 0.70 und 1.00 lassen sich die relativen Beiträge von Lipiden und Kohlenhydraten zur Energiequelle sowie deren Beitrag zum Energiefluss interpolieren. Dies ist in Tabelle 1 dargestellt. Der Proteinstoffwechsel wird in den durchgeführten Berechnungen nicht berücksichtigt.\n\n\nUnterschiede zwischen RQ und RER\n\n\nBisher wurde stets der Respiratorische Quotient (RQ) für die Berechnung des Energieumsatzes herangezogen. In der Praxis wird jedoch während körperlicher Belastung der pulmonale respiratorische Austauschquotient (englisch: “pulmonary respiratory exchange ratio” = RER) gemessen und zur Energieumsatzberechnung verwendet. Obwohl beide Parameter durch die gleiche Gleichung 7 bestimmt werden, können Änderungen in der CO2-Speicherung über kurze Messzeiträume des Gasaustausches in der Lunge dazu führen, dass RER(t) nicht gleich RQ(t) ist. Während der RQ nicht über 1.0 hinausgeht, kann der RER Werte von 1.5 oder höher erreichen.\n\\[\n\\text{RQ}(t) = \\text{RER}(t) = \\frac{\\dot{V}\\text{CO}_2(t)}{\\dot{V}\\text{O}_2(t)}\n\\tag{7}\\]\nDer RQ(t) stellt das Verhältnis von O2-Umsatz und CO2-Produktion zum Zeitpunkt t in der Zelle dar, wo O2 verstoffwechselt und CO2 produziert wird. RER(t) hingegen repräsentiert das Verhältnis von ausgeatmetem \\(\\dot{V}CO_{2}(t)\\) zu eingeatmetem \\(\\dot{V}O_{2}(t)\\) zum entsprechenden Zeitpunkt, bestimmt durch die Analyse der ein- und ausgeatmeten Atemgase am Mund. Der RER ist somit leichter zu bestimmen, weist jedoch einige Einschränkungen auf (Brooks et al., 2004, S. 51).\n\n\n\n\n\n\n\n\n\nAbbildung 2: Die vorübergehenden Effekte der Bikarbonatpufferung zu Beginn der Belastung und die Wiederherstellung der HCO₃⁻-Reserven während der Erholung. Vor und nach der Belastung ist RER ≠ RQ (Brooks, 2004, S.53).\n\n\n\n\n\nObwohl der über längere Zeiträume im Körper verstoffwechselte O2 und das in den Lungen freigesetzte CO2 dem respiratorischen Quotienten (RQ) entspricht, spiegeln die Atemgase nicht immer sofort die zellulären Ereignisse wider. Dies liegt daran, dass die Zellen Flüssigkeitssysteme sind und von anderen Flüssigkeitssystemen sowohl auf der arteriellen als auch auf der venösen Seite umgeben sind. Daher kommt es zu Beginn und am Ende der Belastung sowie während intensiver Belastung, wie in Abbildung 2 zu erkennen, dazu, dass der RER nicht dem RQ entspricht. Die Gründe für diese Abweichungen während und nach der Belastung sind das anfallende nicht-metabolische CO2 („Excess CO2“) sowie die Speicherung von CO2 und Bikarbonat in den Zellen, im Blut und in anderen Körperkompartimenten (Brooks et al., 2004, S. 52).\nWährend intensiven glykolytischen Belastungen fällt Milchsäure (HLA) im Blut an, die unter physiologischen Bedingungen zu 99% zu Laktat- (LA−) und Wasserstoffionen (H+) dissoziiert und sich in nahezu äquimolaren Verhältnissen in der Skelettmuskulatur anreichert (Gladden, 2004; Wahl et al., 2009). Da der pH-Wert ein Maß der H+-Konzentration in einer Lösung ist, kann es bei einer Akkumulation von H+ zu einer Laktatazidose kommen, die eine Störung des Säure-Basen-Haushaltes beschreibt und mit einem Absinken des pH-Werts im Blut unter 7.35 einhergeht (Robergs et al., 2004). Für den menschlichen Organismus ist es sehr wichtig, den pH-Wert konstant zu halten, damit alle Enzymsysteme einwandfrei funktionieren. Deshalb gibt es im Körper verschiedene Puffersysteme, um den pH-Wert im Blut bei leichten Belastungen oder in Ruhe in den physiologischen Normbereichen von etwa 7.37 bis 7.43 zu halten. Bei sehr intensiver körperlicher Belastung werden im arteriellen Blut pH-Werte von unter 6.9 gemessen (Maassen, 1999). Zu den Puffersystemen gehören intrazelluläre, extrazelluläre und dynamische Puffersysteme sowie respiratorische und renale Mechanismen (Juel, 2008). Diese Puffersysteme können H+ nach Bedarf aufnehmen oder abgeben. Das wichtigste Puffersystem des Blutes ist das Bikarbonatpuffersystem. Fallen H+ an, reagieren diese mit Bikarbonat (HCO3−) über Kohlensäure (H2CO3) zu H2O und CO2 (siehe Gleichung 8). Das dabei anfallende nicht-metabolische Excess CO2, das nicht aus der unmittelbaren Verbrennung eines Substrats entsteht, muss abgeatmet werden, wodurch der Atemantrieb gesteigert wird und weitere H+ gepuffert werden können. Die verringerte H+-Akkumulation in der Arbeitsmuskulatur soll es ermöglichen, den Kontraktionsprozess und die Resynthese von ATP durch Glykolyse unter günstigeren Bedingungen fortzusetzen und so den Beginn der Muskelermüdung zu verzögern (Brooks et al., 2004, S. 254; Lancha Junior et al., 2015).\n\\[\n\\begin{array}{c}\n\\text{HLA} \\rightarrow \\text{H}^+ + \\text{LA}^- \\\\\n\\text{H}^+ + \\text{HCO}_3^- \\rightarrow \\text{H}_2\\text{CO}_3 \\\\\n\\text{H}_2\\text{CO}_3 \\rightarrow \\text{H}_2\\text{O} + \\text{CO}_2\n\\end{array}\n\\tag{8}\\]\nAus den oben beschriebenen Gründen unterscheidet sich der RQ vom RER während der Belastung. Umgekehrt kann während der Erholungsphase nach intensiver Belastung die Speicherung von CO2 und Bikarbonat in Zellen, Blut und anderen Körperkompartimenten erfolgen, um die während der Belastung verlorenen Vorräte auszugleichen. Dies kann dazu führen, dass das RER kleiner als der RQ ist. Hierbei können RER-Werte von weniger als 0.7 beobachtet werden (Brooks et al., 2004, S. 254).\nFür die folgenden Berechnungen des Energieumsatzes wird davon ausgegangen, dass RER während der Belastung gleich RQ ist. Bei RER-Werten, die kleiner als 0.7 oder größer als 1.0 sind, werden die jeweils nächstliegenden RQ-Werte (0.7 bzw. 1.0) aus Tabelle 1 verwendet.",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Energieumsatzberechnung"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Energieumsatzberechnung/index_Energieumsatzberechnung.html#quellenverzeichnis",
    "href": "Theoretischer_Hintergrund/Energieumsatzberechnung/index_Energieumsatzberechnung.html#quellenverzeichnis",
    "title": "Energieumsatzberechnung",
    "section": "Quellenverzeichnis",
    "text": "Quellenverzeichnis\n\n\nBeneke, R., Pollmann, C., Bleif, I., Leithäuser, R. M., & Hütler, M. (2002). How anaerobic is the Wingate Anaerobic Test for humans ? European Journal of Applied Physiology, 87, 388–392. https://doi.org/10.1007/s00421-002-0622-4\n\n\nBrooks, G. A. (2012). Bioenergetics of exercising humans. Comprehensive Physiology, 2(1), 537–562. https://doi.org/10.1002/cphy.c110007\n\n\nBrooks, G. A., Fahey, T. D., & Baldwin, K. M. (2004). Exercise Physiology: Human Bioenergetics and Its Applications (4. Edition, S. 928). McGraw-Hill Education Ltd.\n\n\nCiba-Geigy. (1977). Wissenschaftliche Tabellen Geigy: Einheiten im Meßwesen, Körperflüssigkeiten, Organe, Energiehaushalt, Ernährung (8. Auflage, S. 290). CIBA-GEIGY AG.\n\n\nDi Prampero, P. E. (1981). Energetics of Muscular Exercise. Review of physiology, biochemistry and pharmacology, 89, 143–222.\n\n\nDi Prampero, P. E., Boutellier, U., & Pietsch, P. (1983). Oxygen deficit and stores at onset of muscular exercise in humans. Journal of Applied Physiology Respiratory Environmental and Exercise Physiology, 55(1 I), 146–153. https://doi.org/10.1152/jappl.1983.55.1.146\n\n\nFrancescato, M. P., Cettolo, V., & Di Prampero, P. E. (2003). Relationships between mechanical power, O2 consumption, O2 deficit and high-energy phosphates during calf exercise in humans. Pflugers Archiv European Journal of Physiology, 445(5), 622–628. https://doi.org/10.1007/s00424-002-0992-9\n\n\nGastin, P. B. (2001). Energy System Interaction and Relative Contribution During Maximal Exercise. 31(10), 725–741.\n\n\nGladden, L. B. (2004). Lactate metabolism: a new paradigm for the third millennium. Journal of Physiology, 558(1), 5–30. https://doi.org/10.1113/jphysiol.2003.058701\n\n\nHeck, H. (2006). Muskulärer Energiestoffwechsel und sportliche Aktivität. Blickpunkt der Mann, 4(4), 23–28.\n\n\nHorn, F., Blaeschke, F., Trugenberger, K., Gröll, M., Polzer, C., Lechner, K., & Anderson, J. M. (2021). Biochemie des Menschen : das Lehrbuch für das Medizinstudium (8. Edition, S. 790). Georg Thieme Verlag. https://doi.org/10.1055/b000000082\n\n\nJeukendrup, A., & Gleeson, M. (2019). Sport Nutrition (3. Edition, S. 602). Human Kinetics.\n\n\nJuel, C. (2008). Regulation of pH in human skeletal muscle: Adaptations to physical activity. Acta Physiologica, 193(1), 17–24. https://doi.org/10.1111/j.1748-1716.2008.01840.x\n\n\nLancha Junior, A. H., de Salles Painelli, V., Saunders, B., & Artioli, G. G. (2015). Nutritional Strategies to Modulate Intracellular and Extracellular Buffering Capacity During High-Intensity Exercise. Sports Medicine, 45, 71–81. https://doi.org/10.1007/s40279-015-0397-5\n\n\nMaassen, N. (1999). Der pH-Wert des Blutes bei körperlicher Belastung.pdf. Deutsche Zeitschrift für Sportmedizin, 50(11), 362–367.\n\n\nMarées, H. de. (2003). Sportphysiologie (H. Heck & U. Bartmus, Hrsg.; 9. Edition, S. 799). Sportverlag Strauss.\n\n\nMargaria, R. (1976). Biomechanics and energetics of muscular exercise (S. 144). Oxford University Press.\n\n\nMcArdle, W., Katch, F., & Katch, V. (2009). Exercise Physiology - Nutrition, Energy and Human Performance (7. Edition, S. 1104). Wolters Kluwer.\n\n\nMcGilvery, R. W. (1975). The Use of Fuels for Muscular Work. In Metabolic adaptation to prolonged physical exercise (S. 12–30). Springer.\n\n\nNelson, D. L., & Cox, M. M. (2012). Lehninger Principles of Biochemistry: 6th Edition. Macmillan Learning. https://books.google.de/books?id=n9e1NAEACAAJ\n\n\nRobergs, R., Ghiasvand, F., & Parker, D. (2004). Biochemistry of exercise-induced metabolic acidosis. AMERICAN JOURNAL OF PHYSIOLOGY-REGULATORY INTEGRATIVE AND COMPARATIVE PHYSIOLOGY, 287(3), R502–R516. https://doi.org/10.1152/ajpregu.00114.2004\n\n\nStegemann, J. (1991). Leistungsphysiologie (4. Edition, S. 385). Georg Thieme Verlag.\n\n\nWahl, P., Bloch, W., & Mester, J. (2009). Moderne Betrachtungsweisen des Laktats : Laktat ein überschätztes und zugleich unter- schätztes Molekül. Schweizerische Zeitschrift für Sportmedizin und Sporttraumatologie, 57(3), 100–107.\n\n\nWhipp, J., & Wassermann, K. (1969). Efficiency of muscular work. Journal of Applied Physiology, 26(5), 644–648.\n\n\nZuntz, N., & Schumburg, D. (1901). Studien zu einer Physiologie des Marsches (S. 361). Hirschwald Verlag.",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Energieumsatzberechnung"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Energieumsatzberechnung/Anaerobe_laktazide_Energiebereitstellung.html#kinetik-der-blutlaktatkonzentration",
    "href": "Theoretischer_Hintergrund/Energieumsatzberechnung/Anaerobe_laktazide_Energiebereitstellung.html#kinetik-der-blutlaktatkonzentration",
    "title": "Anaerobe- laktazide Energiekomponente (WBLC)",
    "section": "Kinetik der Blutlaktatkonzentration",
    "text": "Kinetik der Blutlaktatkonzentration\nBei intensiven körperlichen Belastungen übersteigt der Energiebedarf die oxidative Kapazität der Mitochondrien, wodurch vermehrt ATP durch anaerobe Glykolyse bereitgestellt wird. Dieser Stoffwechselweg resultiert in einer verstärkten Bildung von Laktat in der beanspruchten Muskulatur. Das Laktat diffundiert aus dieser Muskulatur in die Zwischenzellräume und gelangt über die Venen zum rechten Herzen. Dort wird das Blut aus der Muskulatur mit dem Blut aus anderen Körperregionen vermischt und durch die Lunge zum linken Herzen gepumpt und in die Aorta ausgeworfen. Anschließend werden sämtliche Arterien, einschließlich jener, die die Regionen um die Blutentnahmestellen am Ohrläppchen versorgen, von Blut mit gleicher Laktatkonzentration durchströmt. Das gebildete Laktat wird nach einer Rückumwandlung von Laktat in Pyruvat vornehmlich im belasteten Muskel selbst, in geringerem Maße im Herzmuskel, in den Nieren und im Gehirn eliminiert. Primär in der Leber wird Laktat über die Glukoneogenese via Pyruvat wieder zu Glukose und Glykogen (Glukoneogenese) aufgebaut. Die Laktateliminationsrate hängt von der Höhe des aeroben Umsatzes und der Laktatkonzentration ab, wobei sie mit steigendem aerobem Stoffwechsel und höherer Laktatkonzentration zunimmt (Heck et al., 2022, S. 38, 193, 407; Van Hall, 2010). Während einer intensiven Belastung steigt das Muskellaktat steil an und fällt nach Belastungsende annähernd exponentiell ab. Die Blutlaktatkonzentration hingegen erreicht erst nach Belastungsende ihr Maximum (BLCmax) (Beneke et al., 2007; Diamant et al., 1968; Heck et al., 2022, S. 193; Mader et al., 1981; Margaria et al., 1933). BLCmax wird in Abhängigkeit von der Belastungsdauer und Intensität sowie der maximalen Laktatkonzentration erst nach bis zu 10-12 Minuten Erholungszeit erreicht, in Einzelfällen sogar erst nach 15-20 Minuten (siehe Abbildung 3). Die Ursache hierfür ist der Konzentrationsgradient zwischen der Muskel- und Blutlaktatkonzentration. In Abbildung 1 und Abbildung 2 ist der Konzentrationsgradient zwischen Muskel- und Blutlaktatkonzentration gut zu erkennen. Diese charakteristische Laktatkinetik, insbesondere die Differenz zwischen dem Blutlaktatwert vor Belastungsbeginn (BLCPre) und BLCmax, bildet die Grundlage für die quantitative Bestimmung des anaerob-laktaziden Energieanteils einer Belastung.\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 1: Simulierte Verlaufskurve von Muskellaktat und Blutlaktat bei einer 2 minütigen Maximalbalastung (Mader et al., 1981)\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 2: Verlaufskurve von Muskellaktat und Blutlaktat nach einer dreiminütigen Ausbelastung auf dem Fahrradergometer (Diamant et al., 1968)\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 3: Nachbelastungslaktatwerte aus Ohrkapillarblut nach 300m und 600m Läufen mit unterschiedlicher Intensität (Heck et al., 2022, S. 193)",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Energieumsatzberechnung",
      "Anaerobe- laktazide Energiekomponente (W~BLC~)"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Energieumsatzberechnung/Anaerobe_laktazide_Energiebereitstellung.html#berechnung-der-wblc",
    "href": "Theoretischer_Hintergrund/Energieumsatzberechnung/Anaerobe_laktazide_Energiebereitstellung.html#berechnung-der-wblc",
    "title": "Anaerobe- laktazide Energiekomponente (WBLC)",
    "section": "Berechnung der WBLC",
    "text": "Berechnung der WBLC\nDie Berechnung des anaerob-laktaziden Energieanteils (WBLC) erfolgt aus dem Blutlaktatwert direkt vor Beginn der Belastung (BLCPre) und dem maximalen Laktatwert nach der Belastung (BLCmax). Die Differenz von BLCmax und BLCPre ergibt den Nettoblutlaktatwert (BLCNetto), der die größte Schwankung zwischen BLCPre und BLCmax darstellt. Durch Multiplikation von BLCNetto mit einem Sauerstoff-Laktat-Äquivalent von 3.0 [ml O2·kg-1·mmol-1] (Di Prampero, 1981) und dem kÄ für Kohlenhydrate (kÄKH) bei einem RQ von 1.0 von 21.131 kJ pro Liter O2 kann der anaerob-laktazide Energieanteil der Belastung in Joule ermittelt werden (Stegemann, 1991, S. 59):\n\\[\nW_{BLC} = BLC_{Netto} \\, [\\text{mmol} \\cdot \\text{l}^{-1}] \\cdot 3.0 \\, [\\text{ml O}_2 \\cdot \\text{kg}^{-1} \\cdot \\text{mmol}^{-1}] \\cdot \\text{Körpermasse} \\, [\\text{kg}] \\cdot kÄ_{\\text{KH}} \\, [\\text{kJ} \\cdot \\text{l}^{-1} \\,\\text{O}_2]\n\\] Die mittlere anaerob-laktazide Leistung (\\(\\overline{P}_{BLC}\\)) kann dann durch Division des WBLC-Wertes in kJ durch die Belastungsdauer t in Sekunden berechnet werden:\n\\[\n\\overline{P}_{BLC}\\;[W] = \\frac{W_{BLC}}{t} \\cdot 1000\n\\tag{1}\\]",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Energieumsatzberechnung",
      "Anaerobe- laktazide Energiekomponente (W~BLC~)"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Energieumsatzberechnung/Anaerobe_laktazide_Energiebereitstellung.html#interaktive-modelle-zur-laktatkinetik-bei-körperlicher-belastung",
    "href": "Theoretischer_Hintergrund/Energieumsatzberechnung/Anaerobe_laktazide_Energiebereitstellung.html#interaktive-modelle-zur-laktatkinetik-bei-körperlicher-belastung",
    "title": "Anaerobe- laktazide Energiekomponente (WBLC)",
    "section": "Interaktive Modelle zur Laktatkinetik bei körperlicher Belastung",
    "text": "Interaktive Modelle zur Laktatkinetik bei körperlicher Belastung\nDie nachfolgenden interaktiven Shiny-Apps dienen der Veranschaulichung verschiedener Laktatreaktionen des Körpers unter Belastung. Sie illustrieren sowohl die Beziehung zwischen Belastungsintensität und Blutlaktatkonzentration als auch den charakteristischen Verlauf der Laktatwerte während und nach definierten Belastungen. Die Apps ermöglichen durch Anpassung der Belastungsparameter ein besseres Verständnis der physiologischen Zusammenhänge. Die jeweiligen Modellparameter werden im Anschluss an jede Shiny-App ausführlich erläutert.",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Energieumsatzberechnung",
      "Anaerobe- laktazide Energiekomponente (W~BLC~)"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Energieumsatzberechnung/Anaerobe_laktazide_Energiebereitstellung.html#laktat-leistungs-beziehung",
    "href": "Theoretischer_Hintergrund/Energieumsatzberechnung/Anaerobe_laktazide_Energiebereitstellung.html#laktat-leistungs-beziehung",
    "title": "Anaerobe- laktazide Energiekomponente (WBLC)",
    "section": "Laktat-Leistungs-Beziehung",
    "text": "Laktat-Leistungs-Beziehung\nIn der folgenden Anwendung wird die charakteristische Laktat-Leistungs-Beziehung während ansteigender Belastung visualisiert. Der Verlauf zeigt zunächst einen leichten Anstieg der Blutlaktatkonzentration bei zunehmender Belastungsintensität, welche hier durch die externe Leistung beim Radfahren in Watt ausgedrückt wird. Ab einem bestimmten Belastungspunkt steigt die Laktatkonzentration überproportional an. Dies resultiert in einem exponentiellen Anstieg der Laktat-Leistungs-Kurve. Diese Beziehung verdeutlicht das Verhältnis zwischen der Änderung der Laktatkonzentration (ΔLaktat) und der Änderung der Belastungsintensität (ΔLeistung).\n#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| viewerHeight: 900\nlibrary(shiny)\nlibrary(plotly)\n\n# UI bleibt unverändert\nui &lt;- fluidPage(\n  titlePanel(\"Laktat-Leistungs-Modell\"),\n  sidebarLayout(\n    sidebarPanel(\n      numericInput(\"num_rows\", \"Anzahl der Datenpunkte\", 4, min = 1, max = 20),\n      uiOutput(\"input_fields\"),\n      width = 2  \n    ),\n    mainPanel(\n      width = 9,\n      plotlyOutput(\"plot\"),\n      uiOutput(\"instructions\")\n    )\n  )\n)\n\n# Server mit angepasstem Plot-Bereich\nserver &lt;- function(input, output, session) {\n  initial_values &lt;- list(\n    list(Leistung = 100, DeltaBLC = 0.3),\n    list(Leistung = 200, DeltaBLC = 1.0),\n    list(Leistung = 300, DeltaBLC = 2.8),\n    list(Leistung = 400, DeltaBLC = 8.0)\n  )\n  \n  output$input_fields &lt;- renderUI({\n    num_rows &lt;- input$num_rows\n    \n    lapply(1:num_rows, function(i) {\n      initial_value &lt;- if (i &lt;= length(initial_values)) initial_values[[i]] else list(Leistung = 0, DeltaBLC = 0)\n      tagList(\n        numericInput(paste0(\"leistung_\", i), paste(\"ΔLeistung\", i), value = initial_value$Leistung, step = 10),\n        numericInput(paste0(\"deltaBLC_\", i), paste(\"ΔBLC\", i), value = initial_value$DeltaBLC, step = 0.1)\n      )\n    })\n  })\n  \n  input_data &lt;- reactive({\n    num_rows &lt;- input$num_rows\n    if (is.null(num_rows)) return(NULL)\n    \n    data &lt;- data.frame(Leistung = numeric(num_rows), ΔBLC = numeric(num_rows))\n    \n    for (i in 1:num_rows) {\n      leistung_val &lt;- input[[paste0(\"leistung_\", i)]]\n      deltaBLC_val &lt;- input[[paste0(\"deltaBLC_\", i)]]\n      \n      if (is.null(leistung_val) || is.null(deltaBLC_val)) {\n        data$Leistung[i] &lt;- if (i &lt;= length(initial_values)) initial_values[[i]]$Leistung else 0\n        data$ΔBLC[i] &lt;- if (i &lt;= length(initial_values)) initial_values[[i]]$DeltaBLC else 0\n      } else {\n        data$Leistung[i] &lt;- leistung_val\n        data$ΔBLC[i] &lt;- deltaBLC_val\n      }\n    }\n    \n    data\n  })\n  \n  observe({\n    for (i in 1:length(initial_values)) {\n      updateNumericInput(session, paste0(\"leistung_\", i), value = initial_values[[i]]$Leistung)\n      updateNumericInput(session, paste0(\"deltaBLC_\", i), value = initial_values[[i]]$DeltaBLC)\n    }\n  })\n  \n  output$plot &lt;- renderPlotly({\n    df_proband &lt;- input_data()\n    \n    if (is.null(df_proband)) return(NULL)\n    \n    model &lt;- nls(ΔBLC ~ a * exp(b * Leistung), data = df_proband, start = list(a = 1, b = 0.01))\n    coef_exponential_model &lt;- coef(model)\n    \n    # Erweiterte x-Sequenz von 0 bis max * 1.25\n    x_max &lt;- max(df_proband$Leistung) * 1.25\n    x_seq &lt;- seq(0, x_max, length.out = 100)\n    y_pred &lt;- predict(model, newdata = data.frame(Leistung = x_seq))\n    \n    plot_ly() %&gt;%\n      add_trace(data = df_proband, x = ~Leistung, y = ~ΔBLC, type = 'scatter', mode = 'markers',\n                name = \"ΔBLC\",\n                marker = list(color = \"#2683C6\", size = 7.0)) %&gt;%\n      add_trace(x = x_seq, y = y_pred, type = 'scatter', mode = 'lines', \n                name = 'Laktat-Modellfunktion', \n                line = list(color = '#62A39F', width = 3)) %&gt;%\n      add_annotations(text = sprintf(\"ΔBLC (ΔLeistung) = %.5f \\u00B7 e&lt;sup&gt;%.5f \\u00B7 ΔLeistung&lt;/sup&gt;\", \n                                     coef_exponential_model['a'], coef_exponential_model['b']),\n                      x = x_max * 0.02,\n                      y = max(y_pred) * 0.90,\n                      showarrow = FALSE,\n                      xanchor = 'left', \n                      yanchor = 'top',\n                      font = list(family = \"Arial, sans-serif\", size = 12, color = \"black\")) %&gt;%\n      layout(\n        title = \"Laktat-Leistungs-Modell\",\n        margin = list(t = 40),\n        xaxis = list(\n          title = \"ΔLeistung [Watt]\",\n          range = c(0, x_max)  # x-Achse von 0 bis max * 1.25\n        ),\n        yaxis = list(\n          title = \"ΔBLC [mmol \\u00B7 l&lt;sup&gt;-1&lt;/sup&gt;]\",\n          range = c(0, max(y_pred) * 1.1)\n        ),\n        legend = list(\n          x = 0.01,\n          y = 0.99,\n          xanchor = \"left\",\n          yanchor = \"top\",\n          bgcolor = \"rgba(255, 255, 255, 0.8)\",\n          bordercolor = \"rgba(0,0,0,0)\",\n          borderwidth = 0\n        )\n      )\n  })\n  \n  output$instructions &lt;- renderUI({\n    HTML(\n      \"&lt;div style='margin-top: 20px; padding: 10px; background-color: #f0f0f0; border: 1px solid #ddd; border-radius: 5px; width: fit-content;'&gt;\n        &lt;h4 style='color: #333;'&gt;&lt;strong&gt;Anleitung - Modellanpassung:&lt;/strong&gt;&lt;/h4&gt;\n        &lt;ol style='color: #555; list-style-position: outside; padding-left: 20px;'&gt;\n          &lt;li&gt;Anzahl der Datenpunkte bestimmen.&lt;/li&gt;\n          &lt;li&gt;Für jeden Datenpunkt die Leistung (in Watt) und den entsprechenden ΔBLC-Wert eingeben.&lt;/li&gt;\n          &lt;li&gt;Das exponentielle Modell wird automatisch an die eingegebenen Daten angepasst.&lt;/li&gt;\n        &lt;/ol&gt;\n      &lt;/div&gt;\"\n    )\n  })\n}\n\nshinyApp(ui = ui, server = server)\n\n\n\n\n\n\nModellanpassung - Details:\n\n\n\n\n\n1. Optimierung (nls - Fit):\n\nVerwendete Funktion: nls (Non-Linear Least Squares)\nParameter: a, b\nModell: ΔBLC ~ a · exp(b · Leistung)\nProzess:\n\nDatenaufbereitung:\n\nErstellung eines reaktiven Dataframes basierend auf den Benutzereingaben\n\nModellierung:\n\nAnwendung des nicht-linearen Regressionsmodells auf die eingegebenen Daten\nStartwerte:\n\na: 1.0\nb: 0.01\n\n\nDurchführung der nicht-linearen Regression:\n\nVerwendung der Standard-nls-Funktion in R\nKeine expliziten Grenzen für die Parameter gesetzt\n\nErgebnisverarbeitung:\n\nExtraktion der Koeffizienten a und b aus dem angepassten Modell\n\nVisualisierung:\n\nErstellung einer Sequenz von Leistungswerten für glatte Kurvendarstellung\nBerechnung der vorhergesagten ΔBLC-Werte basierend auf dem Modell\nDarstellung der eingegebenen Datenpunkte und der Modellkurve\nAnzeige der Modellgleichung mit den angepassten Koeffizienten\n\n\nOptimierung: Minimierung der Summe der quadrierten Abweichungen (nls)\n\n\n\n\n\nBlutlaktat-Modellfunktion: Exponentieller Abfall nach dem Belastungsende\nDie nachfolgende Shiny-App visualisiert den Verlauf der Blutlaktatkonzentration nach Belastungsende. Der Verlauf zeigt ausgehend vom gewählten Startzeitpunkt und unter der vereinfachten Annahme eines sofortigen Laktatabbaus ohne weiteren Anstieg einen exponentiellen Abfall über die Zeit. Die Laktatkonzentration sinkt zunächst schnell und nähert sich dann asymptotisch dem Ruheniveau an. Diese Beziehung verdeutlicht das Verhältnis zwischen der Änderung der Laktatkonzentration (ΔLaktat) und der verstrichenen Zeit nach Belastungsende (ΔZeit).\n#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| viewerHeight: 900\nlibrary(shiny)\nlibrary(shinylive)\nlibrary(plotly)\nlibrary(minpack.lm)\n\n# Define data\nt_s &lt;- c(23, 127, 261, 422.5, 549.8, 664.5, 795.8, 1254.9)\nBLC_t &lt;- c(10.04, 7.49, 5.18, 3.9, 2.67, 2.18, 1.64, 0.98)\n\n# New model function: A * exp(-k * (t - delay)) + BLC0\nlaktat_model_function &lt;- function(t, A, k, BLC0, delay) {\n  A * exp(-k * (t - delay)) + BLC0\n}\n\n# UI\nui &lt;- fluidPage(\n  titlePanel(\"BLC-Modellfunktion\"),\n  fluidRow(\n    column(3,\n           style = \"height: 90vh; overflow-y: auto;\",\n           \n           tags$h4(tags$strong(\"Modellparameter:\")),\n           sliderInput(\"A\", \"A [mmol/l]\", min = 0.0, max = 15.0, value = 8.0, step = 0.1),\n           sliderInput(\"k\", \"k [s^-1]\", min = 0.0001, max = 0.02, value = 0.005, step = 0.0001),\n           sliderInput(\"BLC0\", \"BLC0 [mmol/l]\", min = 0.0, max = 5.0, value = 1.0, step = 0.01),\n           sliderInput(\"delay\", \"Delay [s]\", min = 0, max = 3600, value = 0, step = 0.1),\n           actionButton(\"set_delay\", \"Delay auf BLC_1\"),\n           br(), br(),\n           actionButton(\"optimize\", \"Fit: nlsLM\"), \n           br(), br(),\n           fileInput(\"file_upload\", \"CSV-Datei hochladen\", accept = \".csv\")\n    ),\n    mainPanel(\n      width = 9,\n      plotlyOutput(\"plot\"),\n      uiOutput(\"instructions\")\n    )\n  )\n)\n\n# Server logic\nserver &lt;- function(input, output, session) {\n  # Reactive value for uploaded data\n  uploaded_data &lt;- reactiveVal(NULL)\n  \n  # Observer for CSV upload\n  observeEvent(input$file_upload, {\n    req(input$file_upload)\n    df &lt;- read.csv(input$file_upload$datapath)\n    \n    if (\"t_s\" %in% names(df) && \"BLC_t\" %in% names(df)) {\n      uploaded_data(df)\n    } else {\n      showModal(modalDialog(\n        title = \"Ungültige CSV\",\n        \"Die CSV-Datei muss 't_s' und 'BLC_t' als Spaltennamen enthalten.\",\n        easyClose = TRUE,\n        footer = NULL\n      ))\n    }\n  })\n  \n  # Observer for setting delay to first time point\n  observeEvent(input$set_delay, {\n    data &lt;- if (is.null(uploaded_data())) {\n      data.frame(t_s = t_s, BLC_t = BLC_t)\n    } else {\n      uploaded_data()\n    }\n    updateSliderInput(session, \"delay\", value = min(data$t_s))\n  })\n  \n  observeEvent(input$optimize, {\n    data &lt;- if (is.null(uploaded_data())) {\n      data.frame(t_s = t_s, BLC_t = BLC_t)\n    } else {\n      uploaded_data()\n    }\n    \n    delay &lt;- input$delay\n    \n    # Filter data points after the delay\n    data_filtered &lt;- data[data$t_s &gt; delay, ]\n    \n    if (nrow(data_filtered) &lt; 3) {\n      showNotification(\"Nicht genügend Datenpunkte nach dem Delay für den Fitting-Prozess.\", type = \"error\")\n      return()\n    }\n    \n    best_fit &lt;- NULL\n    best_rss &lt;- Inf\n    \n    withProgress(message = 'Fitting in progress', value = 0, {\n      for (i in 1:100) {\n        # Randomized starting values\n        A_start &lt;- runif(1, 0, 15)\n        k_start &lt;- runif(1, 0.0001, 0.02)\n        BLC0_start &lt;- runif(1, 0, 5)\n        \n        start_values &lt;- list(A = A_start, k = k_start, BLC0 = BLC0_start)\n        \n        model_equation &lt;- BLC_t ~ A * exp(-k * (t_s - delay)) + BLC0\n        \n        fit &lt;- try(nlsLM(model_equation,\n                         data = data_filtered,\n                         start = start_values,\n                         lower = c(A = 0, k = 0.0001, BLC0 = 0),\n                         upper = c(A = 15, k = 0.02, BLC0 = 5),\n                         control = nls.control(maxiter = 1024)), silent = TRUE)\n        \n        if (!inherits(fit, \"try-error\")) {\n          rss &lt;- sum(residuals(fit)^2)\n          if (rss &lt; best_rss) {\n            best_rss &lt;- rss\n            best_fit &lt;- fit\n          }\n        }\n        \n        incProgress(1/100, detail = paste(\"Iteration\", i))\n      }\n    })\n    \n    if (!is.null(best_fit)) {\n      params &lt;- as.list(coef(best_fit))\n      updateSliderInput(session, \"A\", value = params$A)\n      updateSliderInput(session, \"k\", value = params$k)\n      updateSliderInput(session, \"BLC0\", value = params$BLC0)\n      \n      showNotification(\"Fitting completed successfully!\", type = \"message\")\n    } else {\n      showModal(modalDialog(\n        title = \"nlsLM fehlgeschlagen\",\n        \"Die nicht-lineare Regression mit dem Levenberg-Marquardt-Algorithmus konnte nicht erfolgreich durchgeführt werden.\",\n        easyClose = TRUE,\n        footer = NULL\n      ))\n    }\n  })\n  \n  output$plot &lt;- renderPlotly({\n    A &lt;- input$A\n    k &lt;- input$k\n    BLC0 &lt;- input$BLC0\n    delay &lt;- input$delay\n    \n    data &lt;- if (is.null(uploaded_data())) {\n      data.frame(t_s = t_s, BLC_t = BLC_t)\n    } else {\n      uploaded_data()\n    }\n    \n    max_x &lt;- max(data$t_s) * 1.66\n    min_x &lt;- max(delay - 360, 0)\n    \n    t_s_modell &lt;- seq(min_x, max_x, length.out = 1000)\n    BLC_t_modell &lt;- laktat_model_function(t_s_modell, A, k, BLC0, delay)\n    \n    max_y &lt;- max(max(BLC_t_modell) * 1.1, max(data$BLC_t) * 1.1)\n    \n    # Create equation text\n    eq_text &lt;- sprintf(\"BLC(t) = %.2f * e&lt;sup&gt;-%.4f*(t-%.2f)&lt;/sup&gt; + %.3f\", A, k, delay, BLC0)\n    \n    # Calculate R²\n    data_filtered &lt;- data[data$t_s &gt; delay, ]\n    BLC_t_modell_at_data &lt;- laktat_model_function(data_filtered$t_s, A, k, BLC0, delay)\n    ss_res &lt;- sum((data_filtered$BLC_t - BLC_t_modell_at_data)^2)\n    ss_tot &lt;- sum((data_filtered$BLC_t - mean(data_filtered$BLC_t))^2)\n    r_squared &lt;- 1 - (ss_res / ss_tot)\n    \n    # Plotly plot\n    p &lt;- plot_ly() %&gt;%\n      add_trace(x = t_s_modell[t_s_modell &gt;= delay], y = BLC_t_modell[t_s_modell &gt;= delay], \n                type = 'scatter', mode = 'lines', \n                name = 'Modellfunktion', line = list(color = '#EF6F6A')) %&gt;%\n      add_trace(x = t_s_modell[t_s_modell &lt; delay], y = BLC_t_modell[t_s_modell &lt; delay], \n                type = 'scatter', mode = 'lines', \n                name = 'Modellfunktion (vor Delay)', line = list(color = '#EF6F6A', dash = 'dash')) %&gt;%\n      add_trace(x = data$t_s, y = data$BLC_t, type = 'scatter', mode = 'markers', \n                name = 'Gemessene BLC-Werte', marker = list(color = '#42BA97', size = 10, symbol = 'x')) %&gt;%\n      add_segments(x = delay, xend = delay, y = 0, yend = max_y, \n                   line = list(color = 'darkgrey', width = 1, dash = 'dash'), \n                   showlegend = FALSE, opacity = 0.75) %&gt;%\n      layout(title = \"Exponentielles Laktat-Abbaumodell\",\n             margin = list(t = 40),\n             xaxis = list(title = \"Zeit [s]\", range = c(min_x, max_x)),\n             yaxis = list(title = \"BLC [mmol·l⁻¹]\", range = c(0, max_y)),\n             legend = list(\n               x = 0.07,\n               y = 0.99,\n               xanchor = \"left\",\n               yanchor = \"top\",\n               bgcolor = \"rgba(255, 255, 255, 0.4)\",\n               bordercolor = \"rgba(0,0,0,0)\",\n               borderwidth = 0\n             ),\n             paper_bgcolor = 'rgba(0,0,0,0)',\n             plot_bgcolor = 'rgba(0,0,0,0)',\n             annotations = list(\n               list(\n                 x = max_x * 0.4, \n                 y = max_y * 0.95,\n                 text = eq_text,\n                 showarrow = FALSE,\n                 xanchor = 'left',\n                 yanchor = 'bottom',\n                 font = list(\n                   size = 12,\n                   color = \"black\"\n                 )\n               ),\n               list(\n                 x = max_x * 0.4,\n                 y = max_y * 0.90,\n                 text = sprintf(\"R²: %.4f\", r_squared),\n                 showarrow = FALSE,\n                 xanchor = 'left',\n                 yanchor = 'bottom',\n                 font = list(\n                   size = 12,\n                   color = \"black\"\n                 )\n               )\n             ))\n    \n    p\n  })\n  output$instructions &lt;- renderUI({\n    HTML(\n      \"&lt;div style='margin-top: 20px; padding: 10px; background-color: #f0f0f0; border: 1px solid #ddd; border-radius: 5px; width: fit-content;'&gt;\n        &lt;h4 style='color: #333;'&gt;&lt;strong&gt;Anleitung - Modellanpassung:&lt;/strong&gt;&lt;/h4&gt;\n        &lt;ol style='color: #555; list-style-position: outside; padding-left: 20px;'&gt;\n          &lt;li&gt;Beispiel-Laktatdaten verwenden oder eigene Laktat-Daten als CSV-Datei einfügen.&lt;/li&gt;\n          &lt;li&gt;Zeitverzögerung manuell setzen oder mit 'Delay auf BLC_1' die Zeitverzögerung auf den Zeitpunkt des ersten BLC-Wertes setzen.&lt;/li&gt;\n          &lt;li&gt;Modellanpassung 'Fit: nlsLM' durchführen.&lt;/li&gt;\n          &lt;li&gt;Alternativ: Manuelle Modellanpassung der Modellparameter mit den Schiebereglern.&lt;/li&gt;\n        &lt;/ol&gt;\n        &lt;div style='margin-top: 20px;'&gt;&lt;/div&gt;\n        &lt;pre style='background-color: #f8f8f8; padding: 10px; border: 1px solid #ddd; border-radius: 5px; width: fit-content;'&gt;\nLaktat-Daten können als CSV-Datei im folgenden Format hochgeladen werden:\nt_s,BLC_t\n0.0,5.84\n90.0,3.60\n180.0,1.09\n…\n        &lt;/pre&gt;\n      &lt;/div&gt;\"\n    )\n  })\n}\n\n# App ausführen\nshinyApp(ui = ui, server = server)\n\n\n\n\n\n\nModellanpassung - Details:\n\n\n\n\n\nnlsLM - Fit:\n\nVerwendete Funktion: nlsLM\nParameter: a, k1, k2, BLC0\nModell: BLC_t ~ BLC0 + (a · k1 / (k2 - k1)) · (exp(-k1 · t_min) - exp(-k2 · t_min))\nGrenzen:\n\na: 0.0 bis 30.0 mmol/l\nk1: 0.1 bis 3.5 min^-1\nk2: 0.020 bis 0.200 min^-1\nBLC0: 0.90 · BLC_t[1] bis 1.10 · BLC_t[1], begrenzt auf 0 bis 5 mmol/l\n\nProzess:\n\nBestimmung der BLC0-Grenzen:\n\nUntere Grenze: max(0, 0.90 · erster BLC-Wert)\nObere Grenze: min(5, 1.10 · erster BLC-Wert)\n\nIterative Optimierung (100 Durchläufe):\n\nZufällige Startwertebestimmung für jeden Durchlauf: · a: Zufallswert zwischen 0 und 30 · k1: Zufallswert zwischen 0.1 und 3.5 · k2: Zufallswert zwischen 0.020 und 0.200 · BLC0: Zufallswert zwischen der unteren und oberen BLC0-Grenze\nDurchführung der nicht-linearen Regression: · Verwendung des Levenberg-Marquardt-Algorithmus · Maximale Iterationen: 1024\nBerechnung der Residuenquadratsumme (RSS) für jede Anpassung\nSpeicherung der besten Anpassung (niedrigste RSS)\n\n\nOptimierung: Minimierung der Residuenquadratsumme (RSS)",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Energieumsatzberechnung",
      "Anaerobe- laktazide Energiekomponente (W~BLC~)"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Energieumsatzberechnung/Anaerobe_laktazide_Energiebereitstellung.html#blutlaktat-bateman-modellfunktion-während-und-nach-dem-belastungszeitraum",
    "href": "Theoretischer_Hintergrund/Energieumsatzberechnung/Anaerobe_laktazide_Energiebereitstellung.html#blutlaktat-bateman-modellfunktion-während-und-nach-dem-belastungszeitraum",
    "title": "Anaerobe- laktazide Energiekomponente (WBLC)",
    "section": "Blutlaktat-Bateman-Modellfunktion: Während und nach dem Belastungszeitraum",
    "text": "Blutlaktat-Bateman-Modellfunktion: Während und nach dem Belastungszeitraum\nIn der folgenden Shiny-Anwendung wird die Laktatkinetik während und nach einer intensiven Belastung mithilfe der Bateman-Funktion modelliert. Diese mathematische Funktion beschreibt sowohl den Einstrom (Invasion) des Laktats aus der Muskulatur ins Blut als auch die gleichzeitige Elimination aus dem Blut. Der Konzentrationsverlauf zeigt nach Belastungsende zunächst einen Anstieg bis zu einem Maximum, gefolgt von einem exponentiellen Abfall. Die Parameter k1 und k2 beschreiben dabei die Geschwindigkeitskonstanten für Invasion bzw. Elimination, während der Parameter a die theoretische Gesamtmenge des zu eliminierenden Laktats darstellt (Heck et al., 2022, S. 194).\n#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| viewerHeight: 900\nlibrary(shiny)\nlibrary(plotly)\nlibrary(minpack.lm)\n\n# Definiere Daten\nt_min &lt;- c(0.4, 3.3, 6.5, 8.4, 10.2, 12.5, 14.9, 16.7, 19.3)\nBLC_t &lt;- c(0.82, 4.53, 6.97, 7.52, 7.73, 7.28, 6.37, 5.41, 4.71)\n\n# Normalisiere t_min, wenn der kleinste Wert größer als 0.0 ist\nif (min(t_min) &gt; 0.0) {\n  t_min &lt;- t_min - min(t_min)\n}\n\n# Bateman-Funktion für Laktatwerte (in Minuten) mit BLC0\nbateman_function &lt;- function(t, a, k1, k2, BLC0) {\n  BLC0 + (a * k1 / (k2 - k1)) * (exp(-k1 * t) - exp(-k2 * t))\n}\n\n# Invasions- und Eliminationsfunktionen\ninvasion_function &lt;- function(t, a, k1, BLC0) {\n  BLC0 + a * (1 - exp(-k1 * t))\n}\n\nelimination_function &lt;- function(t, a, k2, BLC0) {\n  BLC0 + a * exp(-k2 * t)\n}\n\n# UI\nui &lt;- fluidPage(\n  titlePanel(\"Bateman-Modellfunktion\"),\n  fluidRow(\n    column(3,\n           style = \"height: 90vh; overflow-y: auto;\",\n           \n           tags$h4(tags$strong(\"Modellparameter:\")),\n           sliderInput(\"a\", \"a [mmol/l]\", min = 0.0, max = 30.0, value = 15.0, step = 0.01),\n           sliderInput(\"k1\", \"k1 [min^-1]\", min = 0.1, max = 3.5, value = 0.5, step = 0.001),\n           sliderInput(\"k2\", \"k2 [min^-1]\", min = 0.020, max = 0.200, value = 0.10, step = 0.001),\n           sliderInput(\"BLC0\", \"BLC0 [mmol/l]\", min = 0.0, max = 5.0, value = 1.0, step = 0.01),\n           actionButton(\"optimize\", \"Fit: nlsLM\"), \n           br(), br(),\n           fileInput(\"file_upload\", \"CSV-Datei hochladen\", accept = \".csv\")\n    ),\n    mainPanel(\n      width = 9,\n      plotlyOutput(\"plot\"),\n      uiOutput(\"instructions\")\n    )\n  )\n)\n\n# Server-Logik\nserver &lt;- function(input, output, session) {\n  \n  # Reaktiver Wert für hochgeladene Daten\n  uploaded_data &lt;- reactiveVal(NULL)\n  \n  # Beobachter für CSV-Upload\n  observeEvent(input$file_upload, {\n    req(input$file_upload)\n    df &lt;- read.csv(input$file_upload$datapath)\n    \n    if (\"t_min\" %in% names(df) && \"BLC_t\" %in% names(df)) {\n      if (df$t_min[1] != 0.0) {\n        df$t_min &lt;- df$t_min - df$t_min[1]\n      }\n      \n      uploaded_data(df)\n    } else {\n      showModal(modalDialog(\n        title = \"Ungültige CSV\",\n        \"Die CSV-Datei muss 't_min' und 'BLC_t' als Spaltennamen enthalten.\",\n        easyClose = TRUE,\n        footer = NULL\n      ))\n    }\n  })\n  \n  observeEvent(input$optimize, {\n    data &lt;- if (is.null(uploaded_data())) {\n      data.frame(t_min = t_min, BLC_t = BLC_t)\n    } else {\n      uploaded_data()\n    }\n    \n    # Setze BLC0 Grenzen basierend auf dem ersten BLC_t Wert\n    BLC0_lower &lt;- max(0, data$BLC_t[1] * 0.9)\n    BLC0_upper &lt;- min(5, data$BLC_t[1] * 1.1)\n    \n    best_fit &lt;- NULL\n    best_rss &lt;- Inf\n    \n    withProgress(message = 'Fitting in progress', value = 0, {\n      for (i in 1:100) {\n        # Randomisierte Startwerte\n        a_start &lt;- runif(1, 0, 30)\n        k1_start &lt;- runif(1, 0.1, 3.5)\n        k2_start &lt;- runif(1, 0.020, 0.200)\n        BLC0_start &lt;- runif(1, BLC0_lower, BLC0_upper)\n        \n        start_values &lt;- list(a = a_start, k1 = k1_start, k2 = k2_start, BLC0 = BLC0_start)\n        \n        model_equation &lt;- BLC_t ~ BLC0 + (a * k1 / (k2 - k1)) * (exp(-k1 * t_min) - exp(-k2 * t_min))\n        \n        fit &lt;- try(nlsLM(model_equation,\n                         data = data,\n                         start = start_values,\n                         lower = c(a = 0.0, k1 = 0.1, k2 = 0.020, BLC0 = BLC0_lower),\n                         upper = c(a = 30.0, k1 = 3.5, k2 = 0.200, BLC0 = BLC0_upper),\n                         control = nls.control(maxiter = 1024)), silent = TRUE)\n        \n        if (!inherits(fit, \"try-error\")) {\n          rss &lt;- sum(residuals(fit)^2)\n          if (rss &lt; best_rss) {\n            best_rss &lt;- rss\n            best_fit &lt;- fit\n          }\n        }\n        \n        incProgress(1/100, detail = paste(\"Iteration\", i))\n      }\n    })\n    \n    if (!is.null(best_fit)) {\n      params &lt;- as.list(coef(best_fit))\n      updateSliderInput(session, \"a\", value = params$a)\n      updateSliderInput(session, \"k1\", value = params$k1)\n      updateSliderInput(session, \"k2\", value = params$k2)\n      updateSliderInput(session, \"BLC0\", value = params$BLC0)\n      \n      showNotification(\"Fitting completed successfully!\", type = \"message\")\n    } else {\n      showModal(modalDialog(\n        title = \"nlsLM fehlgeschlagen\",\n        \"Die nicht-lineare Regression mit dem Levenberg-Marquardt-Algorithmus konnte nicht erfolgreich durchgeführt werden.\",\n        easyClose = TRUE,\n        footer = NULL\n      ))\n    }\n  })\n  \n  output$plot &lt;- renderPlotly({\n    a &lt;- input$a\n    k1 &lt;- input$k1\n    k2 &lt;- input$k2\n    BLC0 &lt;- input$BLC0\n    \n    data &lt;- if (is.null(uploaded_data())) {\n      data.frame(t_min = t_min, BLC_t = BLC_t)\n    } else {\n      uploaded_data()\n    }\n    \n    max_x &lt;- max(data$t_min) * 1.66\n    \n    t_min_modell &lt;- seq(0, max_x, length.out = 1000)\n    BLC_t_modell &lt;- bateman_function(t_min_modell, a, k1, k2, BLC0)\n    invasion_modell &lt;- invasion_function(t_min_modell, a, k1, BLC0)\n    elimination_modell &lt;- elimination_function(t_min_modell, a, k2, BLC0)\n    \n    max_y &lt;- max(max(BLC_t_modell) * 1.2, max(data$BLC_t) * 1.2, max(invasion_modell) * 1.2, max(elimination_modell) * 1.2)\n    \n    # Berechne tmax und Lamax\n    tmax &lt;- log(k1/k2) / (k1 - k2)\n    Lamax &lt;- bateman_function(tmax, a, k1, k2, BLC0)\n    \n    # Erstelle Gleichungstext\n    eq_text &lt;- sprintf(\"[La]&lt;sub&gt;b&lt;/sub&gt;(t) = %.2f + (%.2f * %.3f / (%.3f - %.3f)) * (e&lt;sup&gt;-%.3f*t&lt;/sup&gt; - e&lt;sup&gt;-%.3f*t&lt;/sup&gt;)\", \n                       BLC0, a, k1, k2, k1, k1, k2)\n    \n    # Berechne R²\n    BLC_t_modell_at_data &lt;- bateman_function(data$t_min, a, k1, k2, BLC0)\n    ss_res &lt;- sum((data$BLC_t - BLC_t_modell_at_data)^2)\n    ss_tot &lt;- sum((data$BLC_t - mean(data$BLC_t))^2)\n    r_squared &lt;- 1 - (ss_res / ss_tot)\n    \n    # Plotly-Plot\n    p &lt;- plot_ly() %&gt;%\n      add_trace(x = t_min_modell, y = BLC_t_modell, type = 'scatter', mode = 'lines', \n                name = 'Bateman-Funktion', line = list(color = '#EF5350')) %&gt;%\n      add_trace(x = t_min_modell, y = invasion_modell, type = 'scatter', mode = 'lines', \n                name = 'Invasion', line = list(color = \"#9C85C0\", width = 2, dash = '8 5'),\n                opacity = 0.65) %&gt;%\n      add_trace(x = t_min_modell, y = elimination_modell, type = 'scatter', mode = 'lines', \n                name = 'Elimination', line = list(color = '#2683C6', width = 2, dash = '8 5'),\n                opacity = 0.65) %&gt;%\n      add_trace(x = data$t_min, y = data$BLC_t, type = 'scatter', mode = 'markers', \n                name = 'Gemessene BLC-Werte', marker = list(color = \"#42BA97\", size = 9, symbol = 'x')) %&gt;%\n      add_segments(x = tmax, xend = tmax, y = 0, yend = max_y, \n                   line = list(color = 'darkgrey', width = 1, dash = 'dash'), \n                   showlegend = FALSE, opacity = 0.5) %&gt;%\n      add_segments(x = 0, xend = max_x, y = Lamax, yend = Lamax, \n                   line = list(color = 'darkgrey', width = 1, dash = 'dash'), \n                   showlegend = FALSE, opacity = 0.5) %&gt;%\n      layout(\n        title = \"Bateman-Funktion für Laktat-Modellierung\",\n        margin = list(t = 40),\n        xaxis = list(title = \"Zeit [min]\", range = c(0, max_x)),\n        yaxis = list(title = \"Laktat [mmol/l]\", range = c(0, max_y)),\n        legend = list(\n          x = 0.01,\n          y = 0.99,\n          xanchor = \"left\",\n          yanchor = \"top\",\n          bgcolor = \"rgba(255, 255, 255, 0.2)\",\n          bordercolor = \"rgba(0,0,0,0)\",\n          borderwidth = 0\n        ),\n        annotations = list(\n          list(\n            x = max_x * 0.3, \n            y = max_y * 0.90,\n            text = eq_text,\n            showarrow = FALSE,\n            xanchor = 'left',\n            yanchor = 'bottom',\n            font = list(\n              size = 12,\n              color = \"black\"\n            )\n          ),\n          list(\n            x = max_x * 0.3,\n            y = max_y * 0.85,\n            text = sprintf(\"R²: %.4f\", r_squared),\n            showarrow = FALSE,\n            xanchor = 'left',\n            yanchor = 'bottom',\n            font = list(\n              size = 12,\n              color = \"black\"\n            )\n          ),\n          list(\n            x = max_x * 0.3,\n            y = max_y * 0.80,\n            text = sprintf(\"BLC&lt;sub&gt;max&lt;/sub&gt;: %.2f mmol/l\", Lamax),\n            showarrow = FALSE,\n            xanchor = 'left',\n            yanchor = 'bottom',\n            font = list(\n              size = 12,\n              color = \"black\"\n            )\n          ),\n          list(\n            x = max_x * 0.3,\n            y = max_y * 0.75,\n            text = sprintf(\"TBLC&lt;sub&gt;max&lt;/sub&gt;: %.2f min\",tmax),\n            showarrow = FALSE,\n            xanchor = 'left',\n            yanchor = 'bottom',\n            font = list(\n              size = 12,\n              color = \"black\"\n            )\n          )\n        )\n      )\n    \n    p\n  })\n  output$instructions &lt;- renderUI({\n    HTML(\n      \"&lt;div style='margin-top: 20px; padding: 10px; background-color: #f0f0f0; border: 1px solid #ddd; border-radius: 5px; width: fit-content;'&gt;\n        &lt;h4 style='color: #333;'&gt;&lt;strong&gt;Anleitung - Modellanpassung:&lt;/strong&gt;&lt;/h4&gt;\n        &lt;ol style='color: #555; list-style-position: outside; padding-left: 20px;'&gt;\n          &lt;li&gt;Beispiel-Laktatdaten verwenden oder eigene Laktat-Daten als CSV-Datei einfügen.&lt;/li&gt;\n          &lt;li&gt;Modellanpassung 'Fit: nlsLM' durchführen.&lt;/li&gt;\n          &lt;li&gt;Alternativ: Manuelle Modellanpassung der Modellparameter mit den Schiebereglern.&lt;/li&gt;\n        &lt;/ol&gt;\n        &lt;div style='margin-top: 20px;'&gt;&lt;/div&gt;\n        &lt;pre style='background-color: #f8f8f8; padding: 10px; border: 1px solid #ddd; border-radius: 5px; width: fit-content;'&gt;\nLaktat-Daten können als CSV-Datei im folgenden Format hochgeladen werden:\nt_min,BLC_t\n0.0,2.84\n1.5,3.60\n3.0,5.09\n…\n        &lt;/pre&gt;\n      &lt;/div&gt;\"\n    )\n  })\n}\n\n# App ausführen\nshinyApp(ui = ui, server = server)\n\n\n\n\n\n\nModellanpassung - Details:\n\n\n\n\n\nnlsLM - Fit:\n\nVerwendete Funktion: nlsLM\nParameter: a, k1, k2, BLC0\nModell: BLC_t ~ BLC0 + (a · k1 / (k2 - k1)) · (exp(-k1 · t_min) - exp(-k2 · t_min))\nGrenzen:\n\na: 0.0 bis 30.0 mmol/l\nk1: 0.1 bis 3.5 min^-1\nk2: 0.020 bis 0.200 min^-1\nBLC0: 0.90 · BLC_t[1] bis 1.10 · BLC_t[1], begrenzt auf 0 bis 5 mmol/l\n\nProzess:\n\nBestimmung der BLC0-Grenzen:\n\nUntere Grenze: max(0, 0.90 · erster BLC-Wert)\nObere Grenze: min(5, 1.10 · erster BLC-Wert)\n\nIterative Optimierung (100 Durchläufe):\n\nZufällige Startwertebestimmung für jeden Durchlauf: · a: Zufallswert zwischen 0 und 30 · k1: Zufallswert zwischen 0.1 und 3.5 · k2: Zufallswert zwischen 0.020 und 0.200 · BLC0: Zufallswert zwischen der unteren und oberen BLC0-Grenze\nDurchführung der nicht-linearen Regression: · Verwendung des Levenberg-Marquardt-Algorithmus · Maximale Iterationen: 1024\nBerechnung der Residuenquadratsumme (RSS) für jede Anpassung\nSpeicherung der besten Anpassung (niedrigste RSS)\n\n\nOptimierung: Minimierung der Residuenquadratsumme (RSS)",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Energieumsatzberechnung",
      "Anaerobe- laktazide Energiekomponente (W~BLC~)"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Energieumsatzberechnung/Anaerobe_laktazide_Energiebereitstellung.html#blutlaktat-kompartmentmodell-modellfunktion-nach-freund-et-al.-1986",
    "href": "Theoretischer_Hintergrund/Energieumsatzberechnung/Anaerobe_laktazide_Energiebereitstellung.html#blutlaktat-kompartmentmodell-modellfunktion-nach-freund-et-al.-1986",
    "title": "Anaerobe- laktazide Energiekomponente (WBLC)",
    "section": "Blutlaktat-Kompartmentmodell-Modellfunktion (nach Freund et al. 1986)",
    "text": "Blutlaktat-Kompartmentmodell-Modellfunktion (nach Freund et al. 1986)\nDie Shiny-App stellt die Laktatkinetik während und nach einer intensiven Belastung mithilfe des Zwei-Kompartment-Modells nach Freund et al. dar. Dieses mathematische Modell berücksichtigt sowohl die Laktatbildung und -elimination im Muskel- und Nicht-Muskelkompartment als auch den Austausch zwischen diesen Kompartmenten. Der Konzentrationsverlauf wird durch die Summe zweier Exponentialfunktionen beschrieben, deren Amplituden (A1, A2) und Geschwindigkeitskonstanten (γ1, γ2) die Dynamik der Laktatkinetik charakterisieren (Freund et al., 1986; Heck et al., 2022, S. 197).\n#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| viewerHeight: 900\nlibrary(shiny)\nlibrary(plotly)\nlibrary(minpack.lm)\n\n# Definiere Daten\nt_min &lt;- c(0.4, 3.3, 6.5, 8.4, 10.2, 12.5, 14.9, 16.7, 19.3)\nBLC_t &lt;- c(0.82, 4.53, 6.97, 7.52, 7.73, 7.28, 6.37, 5.41, 4.71)\n\n# Normalisiere t_min, wenn der kleinste Wert größer als 0.0 ist\nif (min(t_min) &gt; 0.0) {\n  t_min &lt;- t_min - min(t_min)\n}\n\n# Freund et al. Kompartmentmodell-Funktion\nfreund_model &lt;- function(t, A1, A2, gamma1, gamma2, La0) {\n  La0 + A1 * (1 - exp(-gamma1 * t)) + A2 * (1 - exp(-gamma2 * t))\n}\n\n# Berechne tmax und Lamax\ncalculate_tmax_lamax &lt;- function(A1, A2, gamma1, gamma2, La0) {\n  f &lt;- function(t) freund_model(t, A1, A2, gamma1, gamma2, La0)\n  tmax &lt;- optimize(f, c(0, 100), maximum = TRUE)$maximum\n  Lamax &lt;- f(tmax)\n  list(tmax = tmax, Lamax = Lamax)\n}\n\n# UI\nui &lt;- fluidPage(\n  titlePanel(\"BLC-Kompartmentmodell-Modellfunktion\"),\n  fluidRow(\n    column(3,\n           style = \"height: 90vh; overflow-y: auto;\",\n           \n           tags$h4(tags$strong(\"Modellparameter:\")),\n           sliderInput(\"A1\", \"A1 [mmol/l]\", min = 0.0, max = 100.0, value = 20.0, step = 0.1),\n           sliderInput(\"A2\", \"A2 [mmol/l]\", min = -100.0, max = 0.0, value = -20.0, step = 0.1),\n           sliderInput(\"gamma1\", \"γ1 [min^-1]\", min = 0.05, max = 2.0, value = 0.1, step = 0.001),\n           sliderInput(\"gamma2\", \"γ2 [min^-1]\", min = 0.01, max = 0.5, value = 0.05, step = 0.001),\n           sliderInput(\"La0\", \"La0 [mmol/l]\", min = 0.0, max = 5.0, value = 1.0, step = 0.01),\n           actionButton(\"optimize\", \"Fit: nlsLM\"), \n           br(), br(),\n           fileInput(\"file_upload\", \"CSV-Datei hochladen\", accept = \".csv\")\n    ),\n    mainPanel(\n      width = 9,\n      plotlyOutput(\"plot\"),\n      uiOutput(\"instructions\")\n    )\n  )\n)\n\n# Server-Logik\nserver &lt;- function(input, output, session) {\n  \n  # Reaktiver Wert für hochgeladene Daten\n  uploaded_data &lt;- reactiveVal(NULL)\n  \n  # Beobachter für CSV-Upload\n  observeEvent(input$file_upload, {\n    req(input$file_upload)\n    df &lt;- read.csv(input$file_upload$datapath)\n    \n    if (\"t_min\" %in% names(df) && \"BLC_t\" %in% names(df)) {\n      if (df$t_min[1] != 0.0) {\n        df$t_min &lt;- df$t_min - df$t_min[1]\n      }\n      \n      uploaded_data(df)\n    } else {\n      showModal(modalDialog(\n        title = \"Ungültige CSV\",\n        \"Die CSV-Datei muss 't_min' und 'BLC_t' als Spaltennamen enthalten.\",\n        easyClose = TRUE,\n        footer = NULL\n      ))\n    }\n  })\n  \n  observeEvent(input$optimize, {\n    data &lt;- if (is.null(uploaded_data())) {\n      data.frame(t_min = t_min, BLC_t = BLC_t)\n    } else {\n      uploaded_data()\n    }\n    \n    # Setze La0 Grenzen basierend auf dem ersten BLC_t Wert\n    La0_lower &lt;- max(0, data$BLC_t[1] * 0.9)\n    La0_upper &lt;- min(5, data$BLC_t[1] * 1.1)\n    \n    best_fit &lt;- NULL\n    best_rss &lt;- Inf\n    \n    withProgress(message = 'Fitting in progress', value = 0, {\n      for (i in 1:100) {\n        # Randomisierte Startwerte\n        A1_start &lt;- runif(1, 0, 100)\n        A2_start &lt;- runif(1, -100, 0)\n        gamma1_start &lt;- runif(1, 0.05, 2)\n        gamma2_start &lt;- runif(1, 0.01, 0.5)\n        La0_start &lt;- runif(1, La0_lower, La0_upper)\n        \n        start_values &lt;- list(A1 = A1_start, A2 = A2_start, gamma1 = gamma1_start, gamma2 = gamma2_start, La0 = La0_start)\n        \n        model_equation &lt;- BLC_t ~ La0 + A1 * (1 - exp(-gamma1 * t_min)) + A2 * (1 - exp(-gamma2 * t_min))\n        \n        fit &lt;- try(nlsLM(model_equation,\n                         data = data,\n                         start = start_values,\n                         lower = c(A1 = 0.0, A2 = -100.0, gamma1 = 0.05, gamma2 = 0.01, La0 = La0_lower),\n                         upper = c(A1 = 100.0, A2 = 0.0, gamma1 = 2.0, gamma2 = 0.5, La0 = La0_upper),\n                         control = nls.control(maxiter = 1024)), silent = TRUE)\n        \n        if (!inherits(fit, \"try-error\")) {\n          rss &lt;- sum(residuals(fit)^2)\n          if (rss &lt; best_rss) {\n            best_rss &lt;- rss\n            best_fit &lt;- fit\n          }\n        }\n        \n        incProgress(1/100, detail = paste(\"Iteration\", i))\n      }\n    })\n    \n    if (!is.null(best_fit)) {\n      params &lt;- as.list(coef(best_fit))\n      updateSliderInput(session, \"A1\", value = params$A1)\n      updateSliderInput(session, \"A2\", value = params$A2)\n      updateSliderInput(session, \"gamma1\", value = params$gamma1)\n      updateSliderInput(session, \"gamma2\", value = params$gamma2)\n      updateSliderInput(session, \"La0\", value = params$La0)\n      \n      showNotification(\"Fitting completed successfully!\", type = \"message\")\n    } else {\n      showModal(modalDialog(\n        title = \"nlsLM fehlgeschlagen\",\n        \"Die nicht-lineare Regression mit dem Levenberg-Marquardt-Algorithmus konnte nicht erfolgreich durchgeführt werden.\",\n        easyClose = TRUE,\n        footer = NULL\n      ))\n    }\n  })\n  \n  output$plot &lt;- renderPlotly({\n    A1 &lt;- input$A1\n    A2 &lt;- input$A2\n    gamma1 &lt;- input$gamma1\n    gamma2 &lt;- input$gamma2\n    La0 &lt;- input$La0\n    \n    data &lt;- if (is.null(uploaded_data())) {\n      data.frame(t_min = t_min, BLC_t = BLC_t)\n    } else {\n      uploaded_data()\n    }\n    \n    max_x &lt;- max(data$t_min) * 1.66\n    \n    t_min_modell &lt;- seq(0, max_x, length.out = 1000)\n    BLC_t_modell &lt;- freund_model(t_min_modell, A1, A2, gamma1, gamma2, La0)\n    \n    max_y &lt;- max(max(BLC_t_modell) * 1.2, max(data$BLC_t) * 1.2)\n    \n    # Berechne tmax und Lamax\n    results &lt;- calculate_tmax_lamax(A1, A2, gamma1, gamma2, La0)\n    tmax &lt;- results$tmax\n    Lamax &lt;- results$Lamax\n    \n    # Erstelle Gleichungstext\n    eq_text &lt;- sprintf(\"[La]&lt;sub&gt;b&lt;/sub&gt; (t) = %.2f + %.1f * (1 - e&lt;sup&gt;-%.3f*t&lt;/sup&gt;) + %.1f * (1 - e&lt;sup&gt;-%.3f*t&lt;/sup&gt;)\", \n                       La0, A1, gamma1, A2, gamma2)\n    \n    # Berechne R²\n    BLC_t_modell_at_data &lt;- freund_model(data$t_min, A1, A2, gamma1, gamma2, La0)\n    ss_res &lt;- sum((data$BLC_t - BLC_t_modell_at_data)^2)\n    ss_tot &lt;- sum((data$BLC_t - mean(data$BLC_t))^2)\n    r_squared &lt;- 1 - (ss_res / ss_tot)\n    \n    # Plotly-Plot\n    p &lt;- plot_ly() %&gt;%\n      add_trace(x = t_min_modell, y = BLC_t_modell, type = 'scatter', mode = 'lines', \n                name = 'Modellgleichung', line = list(color = '#EF5350')) %&gt;%\n      add_trace(x = data$t_min, y = data$BLC_t, type = 'scatter', mode = 'markers', \n                name = 'Gemessene BLC-Werte', marker = list(color = \"#42BA97\", size = 9, symbol = 'x')) %&gt;%\n      add_segments(x = tmax, xend = tmax, y = 0, yend = max_y, \n                   line = list(color = 'darkgrey', width = 1, dash = 'dash'), \n                   showlegend = FALSE, opacity = 0.5) %&gt;%\n      add_segments(x = 0, xend = max_x, y = Lamax, yend = Lamax, \n                   line = list(color = 'darkgrey', width = 1, dash = 'dash'), \n                   showlegend = FALSE, opacity = 0.5) %&gt;%\n      layout(\n        title = \"Freund et al. Kompartmentmodell für Laktat-Modellierung\",\n        margin = list(t = 40),\n        xaxis = list(title = \"Zeit [min]\", range = c(0, max_x)),\n        yaxis = list(title = \"Laktat [mmol/l]\", range = c(0, max_y)),\n        legend = list(\n          x = 0.01,\n          y = 0.99,\n          xanchor = \"left\",\n          yanchor = \"top\",\n          bgcolor = \"rgba(255, 255, 255, 0.8)\",\n          bordercolor = \"rgba(0,0,0,0)\",\n          borderwidth = 0\n        ),\n        annotations = list(\n          list(\n            x = max_x * 0.45, \n            y = max_y * 0.92,\n            text = eq_text,\n            showarrow = FALSE,\n            xanchor = 'left',\n            yanchor = 'bottom',\n            font = list(\n              size = 12,\n              color = \"black\"\n            )\n          ),\n          list(\n            x = max_x * 0.45,\n            y = max_y * 0.87,\n            text = sprintf(\"R²: %.4f\", r_squared),\n            showarrow = FALSE,\n            xanchor = 'left',\n            yanchor = 'bottom',\n            font = list(\n              size = 12,\n              color = \"black\"\n            )\n          ),\n          list(\n            x = max_x * 0.45,\n            y = max_y * 0.82,\n            text = sprintf(\"BLC&lt;sub&gt;max&lt;/sub&gt;: %.2f mmol/l\", Lamax),\n            showarrow = FALSE,\n            xanchor = 'left',\n            yanchor = 'bottom',\n            font = list(\n              size = 12,\n              color = \"black\"\n            )\n          ),\n          list(\n            x = max_x * 0.45,\n            y = max_y * 0.77,\n            text = sprintf(\"TBLC&lt;sub&gt;max&lt;/sub&gt;: %.2f min\",tmax),\n            showarrow = FALSE,\n            xanchor = 'left',\n            yanchor = 'bottom',\n            font = list(\n              size = 12,\n              color = \"black\"\n            )\n          )\n        )\n      )\n    \n    p\n  })\n  output$instructions &lt;- renderUI({\n    HTML(\n      \"&lt;div style='margin-top: 20px; padding: 10px; background-color: #f0f0f0; border: 1px solid #ddd; border-radius: 5px; width: fit-content;'&gt;\n        &lt;h4 style='color: #333;'&gt;&lt;strong&gt;Anleitung - Modellanpassung:&lt;/strong&gt;&lt;/h4&gt;\n        &lt;ol style='color: #555; list-style-position: outside; padding-left: 20px;'&gt;\n          &lt;li&gt;Beispiel-Laktatdaten verwenden oder eigene Laktat-Daten als CSV-Datei einfügen.&lt;/li&gt;\n          &lt;li&gt;Modellanpassung 'Fit: nlsLM' durchführen.&lt;/li&gt;\n          &lt;li&gt;Alternativ: Manuelle Modellanpassung der Modellparameter mit den Schiebereglern.&lt;/li&gt;\n        &lt;/ol&gt;\n        &lt;div style='margin-top: 20px;'&gt;&lt;/div&gt;\n        &lt;pre style='background-color: #f8f8f8; padding: 10px; border: 1px solid #ddd; border-radius: 5px; width: fit-content;'&gt;\nLaktat-Daten können als CSV-Datei im folgenden Format hochgeladen werden:\nt_min,BLC_t\n0.0,2.84\n1.5,3.60\n3.0,5.09\n…\n        &lt;/pre&gt;\n      &lt;/div&gt;\"\n    )\n  })\n}\n\n# App ausführen\nshinyApp(ui = ui, server = server)\n\n\n\n\n\n\nModellanpassung - Details:\n\n\n\n\n\nnlsLM - Fit:\n\nVerwendete Funktion: nlsLM\nParameter: A1, A2, gamma1, gamma2, La0\nModell: BLC_t ~ La0 + A1 · (1 - exp(-gamma1 · t_min)) + A2 · (1 - exp(-gamma2 · t_min))\nGrenzen:\n\nA1: 0.0 bis 100.0 mmol/l\nA2: -100.0 bis 0.0 mmol/l\ngamma1: 0.05 bis 2.0 min^-1\ngamma2: 0.01 bis 0.5 min^-1\nLa0: 0.90 · BLC_t[1] bis 1.10 · BLC_t[1], begrenzt auf 0 bis 5 mmol/l\n\nProzess:\n\nBestimmung der La0-Grenzen:\n\nUntere Grenze: max(0, 0.90 · erster BLC-Wert)\nObere Grenze: min(5, 1.10 · erster BLC-Wert)\n\nIterative Optimierung (100 Durchläufe):\n\nZufällige Startwertebestimmung für jeden Durchlauf: · A1: Zufallswert zwischen 0 und 100 · A2: Zufallswert zwischen -100 und 0 · gamma1: Zufallswert zwischen 0.05 und 2.0 · gamma2: Zufallswert zwischen 0.01 und 0.5 · La0: Zufallswert zwischen der unteren und oberen La0-Grenze\nDurchführung der nicht-linearen Regression: · Verwendung des Levenberg-Marquardt-Algorithmus · Maximale Iterationen: 1024\nBerechnung der Residuenquadratsumme (RSS) für jede Anpassung\nSpeicherung der besten Anpassung (niedrigste RSS)\n\n\nOptimierung: Minimierung der Residuenquadratsumme (RSS)",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Energieumsatzberechnung",
      "Anaerobe- laktazide Energiekomponente (W~BLC~)"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Energieumsatzberechnung/Anaerobe_laktazide_Energiebereitstellung.html#quellenverzeichnis",
    "href": "Theoretischer_Hintergrund/Energieumsatzberechnung/Anaerobe_laktazide_Energiebereitstellung.html#quellenverzeichnis",
    "title": "Anaerobe- laktazide Energiekomponente (WBLC)",
    "section": "Quellenverzeichnis",
    "text": "Quellenverzeichnis\n\n\nBeneke, R., Jumah, M. D., & Leithäuser, R. M. (2007). Modelling the lactate response to short-term all out exercise. Dynamic Medicine, 6, 1–7. https://doi.org/10.1186/1476-5918-6-10\n\n\nDi Prampero, P. E. (1981). Energetics of Muscular Exercise. Review of physiology, biochemistry and pharmacology, 89, 143–222.\n\n\nDiamant, B., Karlsson, J., & Saltin, B. (1968). Muscle Tissue Lactate after Maximal Exercise in Man. Acta Physiologica Scandinavica, 72(3), 383–384. https://doi.org/10.1111/j.1365-201X.1968.tb10846.x\n\n\nFreund, H., Oyono-Enguelle, S., Heitz, A., Marbach, J., Ott, C., Zouloumian, P., & Lampert, E. (1986). Work rate-dependent lactate kinetics after exercise in humans. Journal of applied physiology (Bethesda, Md. : 1985), 61(3), 932–939. https://doi.org/10.1152/jappl.1986.61.3.932\n\n\nHeck, H., Bartmus, U., & Grabow, V. (2022). Laktat (1. Aufl., S. 662). Springer Berlin Heidelberg.\n\n\nMader, A., Heck, H., & Hollmann, W. (1981). Leistung und Leistungsbegrenzung des menschlichen Organismus, interpretiert am Modell thermodynamisch offener Systeme. Ein Beitrag zur Diskussion biologischer Leistungsgrenzen im Hochleistungssport BT - Sport an der Grenze menschlicher Leistungsfähigkeit. In H. Rieckert (Hrsg.), Angewandte Chemie International Edition, 6(11), 951–952. (S. 69–93). Springer Berlin Heidelberg.\n\n\nMargaria, R., Edwards, H. T., & Dill, D. B. (1933). The possible mechanisms of contracting and paying the oxygen debt and the role of lactic acid in muscular contraction. American Journal of Physiology, 106, 689–715. https://api.semanticscholar.org/CorpusID:30044859\n\n\nStegemann, J. (1991). Leistungsphysiologie (4. Edition, S. 385). Georg Thieme Verlag.\n\n\nVan Hall, G. (2010). Lactate kinetics in human tissues at rest and during exercise. Acta Physiologica, 199(4), 499–508. https://doi.org/10.1111/j.1748-1716.2010.02122.x",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Energieumsatzberechnung",
      "Anaerobe- laktazide Energiekomponente (W~BLC~)"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Wirkungsgrad_Theorie.html",
    "href": "Theoretischer_Hintergrund/Wirkungsgrad_Theorie.html",
    "title": "Wirkungsgrad",
    "section": "",
    "text": "Tabelle 2: Tabellarische Übersicht unterschiedlich berechneter Wirkungsgrade beim Fahrradfahren unter verschiedenen Bedingungen\n\n\n\nAutorenBelastungsintensitätTrittrate [U·min⁻¹]TeilnehmendeBerechneter ηWirkungsgrad [%]Dickinson & Dickinson (1929)Belastungsdauer: 10 min28-111N = 1 | ♀ηnettoηnetto = 19.0 ± 2.8%→ Optimale Trittrate bei 33.3 U/minHenry & DeMoor (1950)113 | 150 Belastungsdauer: 6 min61N = 9 | ♂ηnettoηnetto = 21.2% | ηnetto = 19.3% → Niedriger ηnetto bei höherer LastGaesser & Brooks (1975)32.7 | 65.4 | 98.1 | 130.8 Belastungsdauer: 6-8 min40 | 60 | 80 | 100N = 12 | 19-24 Jahre | ♂ηbruttoηnettoηArbeitηDeltaη40,brutto = 12-20 | η60,brutto = 12-20 | η80,brutto = 10-19 | η100,brutto = 8-17η40,netto = 19-24 | η60,netto = 19-24 | η80,netto = 15-22 | η100,netto = 10-19η40,Arbeit = 25-26 | η60,Arbeit = 26-27 | η80,Arbeit = 26 | η100,Arbeit = 27-28ηDelta = 24.4-34.0→ η steigt mit steigender BelastungsintensitätSeabury et al. (1977)40.8 | 81.7 | 122.6 | 163.4 | 196.1 | 204.2 | 245.1 | 286.0 | 326.8 Belastungsdauer: 6 min42 | 46 | 50 | 54 | 58 | 59 | 61 | 62 | 64N = 3 | ♂ηbruttoηbrutto = 15.4 | ηbrutto = 19.2 | ηbrutto = 20.9 | ηbrutto = 21.9 | ηbrutto = 21.4 | ηbrutto = 22.6 | ηbrutto = 23.0 | ηbrutto = 23.4 | ηbrutto = 23.6→ Steigender ηbrutto bei höherer LastSuzuki (1979)20-80% V̇O₂ₘₐₓBelastungsdauer: 15 min60 | 100N = 6  3ST: 78% ST-Fasern & 3FT: 76% FT-Fasern | 32.0 ± 5.6 Jahre | ♂LN: 2-4V̇O₂ₘₐₓ = 60.7 ± 5.7 [l·min⁻¹·kg⁻¹]ηDeltaST-Gruppe:ηDelta, 60 = 23.3 ± 0.9ηDelta, 100 = 19.6 ± 1.6FT-Gruppe:ηDelta, 60 = 25.3 ± 2.3ηDelta, 100 = 28.8 ± 1.0→ ηDelta sinkt/steigt in ST-Gruppe/FT-Gruppe mit steigender TrittrateLuhtanen et al. (1987)50% V̇O₂ₘₐₓ | AerT | AnT | AnT + 30 Watt | AnT + 60 WattBelastungsdauer: 5 min60N = 12 | 21-38 Jahre | ♂LN: 3V̇O₂ₘₐₓ = 59.6 ± 2.5 [l·min⁻¹·kg⁻¹]ηbruttoηnettoηmuskulärηbrutto = 17.4 ± 1.0 - 19.7 ± 2.8ηnetto = 17.5 ± 0.7 - 21.8 ± 2.4ηmuskulär = 21.0 ± 1.5 - 29.7 ± 4.2→ η sinkt mit steigender BelastungsintensitätFrancescato et al. (1995)20-125W Belastungsdauer: 6 min40 | 60 | 80 | 100N = 4 | 22.2 ± 1.5 Jahre | ♂LN: 1V̇O₂max = 37.8 ± 4.9 [ml·min⁻¹·kg⁻¹]ηDeltaηDelta = 22.9 - 32.0→ ηdelta steigt mit steigender TrittrateChavarren & Calbet (1999)54% | 63%| 73% | 80% | 87% | 93% der V̇O₂ₘₐₓBelastungsdauer: 6 min60 | 80 | 100 | 120N = 7 | 22-25 Jahre | ♂LN: 4-5V̇O₂ₘₐₓ = 67.77 ± 5.07 [l·min⁻¹·kg⁻¹]ηbruttoηDeltaηbrutto = 13.0 ± 0.4 - 19.9 ± 0.7ηDelta = 21.5 ± 0.8 - 23.9 ± 1.0→ ηbrutto steigt mit steigender Belastungsintensität→ ηbrutto sinkt mit steigender Drehzahl→ ηDelta steigt mit steigender DrehzahlBeneke et al. (2002)WAnTST: letzte Stufe bei 362 ± 41 WattWAnT = 80 - 170N = 7 | 21.6 ± 3.8 Jahre | ♂LN: 1-3; Sportartfremd: Rugby V̇O₂ₘₐₓ = 51.34 ± 9.44 [l·min⁻¹·kg⁻¹]ηnettoηnetto, WAnT = 16.2 ± 1.6ηnetto, ST = 24.1 ± 1.7Millet et al. (2002)75% des PPOBelastungsdauer: 6 min60 | 90N = 8 | 20.7 ± 3.9 Jahre | ♂ηbruttoηbrutto,sitzen = 22.4 ± 0.8ηbrutto,stehen = 22.5 ± 1.9→ Keine sig. Unterschiede zw. ηbrutto,stehen und ηbrutto,sitzenHarnish et al. (2007)50% | 65% | 75% | 93% des PPOSitzen: 74.6-82.4Stehen: 57.0-65.8N = 8 | 25.8 ± 7.2 Jahre | 7♂ 1♀LN: 4-5V̇O₂ₘₐₓ = 68.8 ± 5.0 [l·min⁻¹·kg⁻¹]ηnettoηnetto,sitzen = 24.2 ± 1.7 - 26.0 ± 1.7 ηnetto,stehen = 25.1 ± 3.7 - 26.7 ± 2.3 → Keine sig. Unterschiede zw. Sitzen und Stehen→  ηnetto steigt mit steigender BelastungsintensitätBell & Ferguson (2009)75% der VT45 | 60 | 75 | 90N = 16 (8 jung / 8 alt) | 19-74 Jahre | ♀ηnettoηmuskulärηnetto, jung = 27.5 ± 4.0 | 29.1 ± 5.1ηnetto, alt = 22.4 ± 6.9 | 20.7 ± 5.5ηmuskulär, jung = 32.0 ± 3.1 | 34.0 ± 5.5ηmuskulär, alt = 30.2 ± 3.1 | 27.9 ± 4.1→ Muskeltemp.normal | Muskeltemp.erhöhtBouillod & Pinot (2014)3.8 | 4.2 | 4.6 [W·kg⁻¹]-N = 13LN: Eliteηbruttoηbrutto, sitzen = 20.6 ± 1.1 ηbrutto, stehen = 21.5 ± 5.2 → Im Stehen sig. höherer ηbruttoDunst et al. (2023)3s, 8s, 12s, 60s Maximalsprints120N = 12 | LN: Elite-Bahnradsportler3♀: 18.7 ± 4.7 Jahre9♂: 22.2 ± 4.4 Jahreηbruttoηbrutto = 10.01 ± 2.18 (3s) - 18.42 ± 1.51 (60s)→ Anstieg von ηbrutto  mit zunehmender SprintdauerZoladz et al. (2023)30-120WBelastungsdauer: 6 min60N = 17 | 23 ± 3 Jahre | ♂LN: 1-3V̇O₂max = 52.3 ± 5.5 [ml·min⁻¹·kg⁻¹]ηbruttoηDeltaηbrutto = 11.6 ± 1.4 - 21.4 ± 1.1ηDelta = 29.8 ± 1.9→ Steigender ηbrutto bei höherer LastCarlsson et al. (2024)AerTBelastungsdauer: 5 min-N = 10 | 25 ± 8 Jahre | ♂LN: Elite-Nationalηbruttoηbrutto, sitzen = 21.3 ± 1.2 ηbrutto, stehen = 21.3 ± 1.1 ηbrutto, sitzen und stehen = 21.0 ± 1.1 → Keine sig. Unterschiede zw. den BedingungenWAnT: Wingate Anaerobic Test; AerT: Aerobe Schwelle; AnT: Anaerobe Schwelle; ST: Stufentest; PPO (Peak Power Output): maximale mechanische Leistung in einem Eingangstest; MAP (Maximal Aerobic Power): höchste über 1 Minute gemittelte Leistung in einem Eingangstes; V̇O2max [ml·min-1·kg-1]: maximaler Sauerstoffvolumenstrom; Pmax: maximale mechanische Leistung; VT: Ventilatorische Schwelle; LN: Leistungsniveau nach De Pauw et al. (2013) abhängig von der V̇O2max [ml·min-1·kg-1] eingeteilt in LN1: &lt;45, LN2: 45-54.9, LN3: 55-64.9, LN4: 65-71, LN5: &gt;71",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Wirkungsgrad"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Wirkungsgrad_Theorie.html#analyse-der-wirkungsgrade-aus-der-fachliteratur",
    "href": "Theoretischer_Hintergrund/Wirkungsgrad_Theorie.html#analyse-der-wirkungsgrade-aus-der-fachliteratur",
    "title": "Wirkungsgrad",
    "section": "Analyse der Wirkungsgrade aus der Fachliteratur",
    "text": "Analyse der Wirkungsgrade aus der Fachliteratur\nDie aus der Fachliteratur ausgewählten und in der Tabelle 2 dargestellten Wirkungsgrade zeigen eine erhebliche Variabilität, wobei systematische Unterschiede zwischen den verschiedenen Berechnungsmethoden erkennbar sind.\nDer Bruttowirkungsgrad (ηbrutto) zeigt durchgängig die niedrigsten Werte aller berechneten Wirkungsgrade. Die Spannweite der gemessenen Werte reicht von unter 10% (Dunst et al., 2023; Gaesser & Brooks, 1975), die charakteristischerweise bei extrem hoher Drehzahl, sehr geringer Last oder einer Kombination beider Faktoren auftreten, bis zu Maximalwerten von 23.6% (Seabury et al., 1977), die bei hohen Lasten und moderaten Drehzahlen dokumentiert wurden. Mit typischen Werten zwischen 19% und 22% lässt sich ein charakteristischer Bereich erkennen, der in vielen Studien bestätigt wird. In der Regel steigt ηBrutto mit steigender Belastungsintensität aufgrund des geringeren Anteils des Ruheenergiestoffwechsels, während er bei hohen Trittraten sinkt.\nDer Nettowirkungsgrad (ηNetto) eliminiert den Einfluss des Ruheenergieumsatzes und zeigt dadurch systematisch höhere Werte als der Bruttowirkungsgrad. Die dokumentierten Werte in den Studien bewegen sich überwiegend zwischen 19% und 24%. Die Abhängigkeit von der Belastungsintensität zeigt in der Literatur unterschiedliche Effekte: Während Luhtanen et al. (1987) einen Abfall des ηNetto von 21.8% auf 17.5% und Henry & DeMoor (1950) von 21.2% auf 19.3% mit steigender Intensität dokumentiert, berichten sowohl Gaesser & Brooks (1975) als auch Harnish et al. (2007) einen Anstieg des ηNetto mit zunehmender Belastung. Diese gegensätzlichen Befunde könnten auf unterschiedliche Testprotokolle und Probandencharakteristika zurückzuführen sein. Ein konsistenterer Effekt zeigt sich bei der Trittrate: Hohe Drehzahlen führen hier zu einem deutlichen Abfall des ηNetto (Dickinson & Dickinson, 1929; Gaesser & Brooks, 1975).\nDer Delta-Wirkungsgrad (ηdelta) weist mit Ausnahme von ηMuskulär die höchsten Werte der verschiedenen Berechnungsmethoden auf. Die dokumentierten Werte bewegen sich typischerweise zwischen 23% und 28%. Die Spannweite reicht von Minimalwerten um 20% (Suzuki, 1979) bis zu Maximalwerten von über 32% (Francescato et al., 1995). Im Gegensatz zu ηBrutto und ηNetto zeigt ηdelta keinen Abfall mit steigender Trittrate, da durch die Berechnungsmethode der Energieumsatz für das Pedalieren ohne Last, welcher mit steigender Drehzahl zunimmt, nicht einbezogen wird. So berichten Francescato et al. (1995), Chavarren & Calbet (1999) und Gaesser & Brooks (1975) sogar einen Anstieg des ηdelta mit steigender Drehzahl. Differenzierte Ergebnisse zeigen sich bei Suzuki (1979): Bei Probanden mit überwiegend schnellen Muskelfasern (FT) steigt ηdelta bei hohen Drehzahlen an, während bei Probanden mit überwiegend langsamen Muskelfasern (ST) ηdelta bei hohen Drehzahlen abnimmt.\nDer Arbeitswirkungsgrad (ηArbeit) wurde in zwei der in Tabelle 2 dargestellten Studien systematisch untersucht. Gaesser & Brooks (1975) dokumentiert Werte zwischen 25% und 28%, während Luhtanen et al. (1987) einen Bereich von 21.0% bis 29.7% berichtet. Die Werte bewegen sich damit in einer ähnlichen Größenordnung wie der Delta-Wirkungsgrad. Bezüglich der Einflussfaktoren zeigen sich unterschiedliche Effekte: Gaesser & Brooks (1975) beobachtet einen Anstieg des ηArbeit mit zunehmender Trittfrequenz. Luhtanen et al. (1987) dokumentiert eine Reduktion des ηArbeit bei steigender Belastungsintensität.\nDer Muskuläre Wirkungsgrad (ηMuskulär) wurde in Tabelle 2 nur von Bell & Ferguson (2009) berichtet und bei normalen Muskeltemperaturen mit durchschnittlich 30.2 ± 3.1% bei älteren Menschen und 32.0 ± 3.1% bei jungen Probanden dokumentiert. Bei erhöhten Muskeltemperaturen wurden durchschnittlich 27.9 ± 4.1% bei älteren und 34.0 ± 5.5% bei jüngeren Probanden gemessen. Hier zeigen sich inverse Effekte: Während bei den jungen Probanden der Wirkungsgrad mit erhöhter Muskeltemperatur ansteigt, sinkt er bei älteren Menschen. Diese berichteten Werte sind die höchsten durchschnittlichen η-Werte aller Wirkungsgrade in Tabelle 2.\nObwohl ein erhöhter ηMuskulär aufgrund der Einbeziehung der internen Arbeit für die Aufrechterhaltung der Pedalierbewegung im Vergleich zu den in dieser Studie berichteten ηNetto Wert als plausibel erscheint, erscheinen die dokumentierten Werte im Vergleich zu den anderen in Tabelle 2 berichteten ηArbeit und ηdelta Werten außergewöhnlich hoch. Dies gilt ebenso für den von Bell & Ferguson (2009) dokumentierten ηNetto Wert im Vergleich zu den übrigen Studien. Die Autoren selbst diskutieren diese Auffälligkeit und deuten eine mögliche Überschätzung ihrer Werte im Vergleich zur existierenden Literatur an.",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Wirkungsgrad"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Wirkungsgrad_Theorie.html#limitationen-bei-wirkungsgradberechnungen",
    "href": "Theoretischer_Hintergrund/Wirkungsgrad_Theorie.html#limitationen-bei-wirkungsgradberechnungen",
    "title": "Wirkungsgrad",
    "section": "Limitationen bei Wirkungsgradberechnungen",
    "text": "Limitationen bei Wirkungsgradberechnungen\nNeben den genannten Studien gibt es noch weitere Untersuchungen, welche den Wirkungsgrad im Radsport ermittelt haben. Bei diesen Untersuchungen ist jedoch zu beachten, dass bei der Berechnung des Wirkungsgrades verschiedene Faktoren berücksichtigt werden müssen, die das Ergebnis beeinflussen können. Die verschiedenen Wirkungsgrade verhalten sich unterschiedlich in Bezug auf Änderungen von der mechanischen Leistung Pmech bei körperlicher Belastung auf dem Radergometer. Zum Beispiel hängt ηBrutto stark von der Belastungsintensität ab und steigt, wenn Pmech zunimmt. Dies liegt daran, dass der prozentuale Anteil des Ruhestoffwechsels, das heißt der Energie, die für die Aufrechterhaltung grundlegender Körperfunktionen im Ruhezustand erforderlich ist, abnimmt, wenn die Gesamtleistung während sportlicher Aktivitäten ansteigt. ηArbeit und ηdelta verhalten sich ähnlich (Böning et al., 1984). Im Gegensatz dazu ist ηNetto weniger leistungsabhängig (Chavarren & Calbet, 1999; Coast & Welch, 1985). Bei der Berechnung von ηNetto werden Veränderungen der Trittrate nicht berücksichtigt, obwohl diese den Nettowirkungsgrad beeinflussen können, selbst wenn Pmech unverändert bleibt.\n\nEinfluss der Trittrate auf den Wirkungsgrad\nDie Veränderung des Wirkungsgrades bei konstanter mechanischer Leistung Pmech und steigender Drehzahl ist primär auf den damit verbundenen Anstieg der internen Leistung/Arbeit (PInt/WInt) zurückzuführen. WInt repräsentiert die erforderliche Arbeit zur Bewegung der unteren Extremitäten während des Radfahrens und stellt eine Komponente der Gesamtarbeit (WTot) dar. WTot ergibt sich aus der Summe der internen und externen Komponenten (Hansen & Sjøgaard, 2007; Sjøgaard et al., 2002).\nObwohl WInt selbst keine externen Vortriebskräfte erzeugt, ist sie für die Aufrechterhaltung der Gesamtbewegung essentiell. Dies steht im Gegensatz zur externen Arbeit (WExt), die direkt mechanische Energie auf das System überträgt, um Vortrieb zu erzeugen. Verschiedene Faktoren beeinflussen die aufzubringende innere Arbeit und führen speziell bei hohen Trittraten zu mehr metabolischen Kosten. Dazu zählen die durch die Hill-Gleichung beschriebene verringerte Muskelkraft bei hoher Kontraktionsgeschwindigkeit, die gleichzeitige Agonisten/Antagonisten-Aktivierung mit verstärktem Abbremsen sowie Reibungs- und Viskositätswiderstände in Gelenken und Strukturen. Besonders das verstärkte Abbremsen bei hohen Drehzahlen durch die Antagonisten erhöht die Blindleistungsanforderungen. Die innere Arbeit sowie deren Berechnung wird in dem Abschnitt “Innere Arbeit” genauer beschrieben. Soll WInt bei der Wirkungsgradberechnung berücksichtigt werden, eignet sich laut Böning et al. (2017) der sogenannte muskuläre Wirkungsgrad (ηmuskulär) (auch “true efficiency” nach Luhtanen et al. (1987)). Dieser beachtet die aufgewandte WInt in der Berechnung und ist daher weniger von Änderungen der Trittrate abhängig als ηNetto.\n\n\nLimitationen der Energieumsatzbestimmung\nEin weiterer Aspekt, der in vielen Untersuchungen des Wirkungsgrades beim Radfahren ungenau bestimmt wurde, ist der physiologische Gesamtenergieumsatz. Häufig wurden nicht die verschiedenen Energiekomponenten (aerobe, anaerobe-laktazide sowie anaerobe-alaktazide Energiekomponente) berechnet, sondern nur der Sauerstoffvolumenstrom8 gemessen und als Grundlage für die Wirkungsgradberechnung der während der Belastung umgesetzten chemischen Energie verwendet (Böning et al., 2017). Dadurch wird insbesondere bei hochintensiven Belastungen die Menge des durch anaerobe Glykolyse und energiereiche Phosphate bereitgestellten ATPs vernachlässigt, was zu einer Unterschätzung der gesamten umgesetzten chemischen Energie führt (Brooks et al., 2004, S. 354).",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Wirkungsgrad"
    ]
  },
  {
    "objectID": "Theoretischer_Hintergrund/Wirkungsgrad_Theorie.html#footnotes",
    "href": "Theoretischer_Hintergrund/Wirkungsgrad_Theorie.html#footnotes",
    "title": "Wirkungsgrad",
    "section": "Fußnoten",
    "text": "Fußnoten\n\n\nIn der englischsprachigen Literatur wird der Begriff „efficiency“ meist gleichbedeutend für die Wörter “Wirkungsgrad” und “Effizienz” verwendet. Die Effizienz beschreibt allgemein das Verhältnis zwischen dem erreichten Ergebnis und dem dafür benötigten Aufwand oder den dafür eingesetzten Ressourcen, während der Wirkungsgrad spezifisch angibt, wie viel Prozent der aufgewandten Energie tatsächlich in nutzbare Energie umgewandelt wird. So kann im Kontext dieser Arbeit Wirkungsgrad und Effizienz gleichbedeutend sein, solange sich die Effizienz auf das prozentuale Verhältnis von aufgebrachter chemischer Energie gegenüber der tatsächlich erbrachten mechanischen Leistung bezieht.↩︎\nMechanische Arbeit: Arbeit, die extern am Ergometer gemessen werden kann.↩︎\nAerobe Arbeit: Arbeit, die durch aerobe Stoffwechselprozesse geleistet wird.↩︎\nRuhearbeit: Arbeit, die der Körper in Ruhe für die Aufrechterhaltung der Lebensfunktionen leistet, Grundumsatz.↩︎\nGesamtarbeit: Summe der Arbeit aus aeroben und anaeroben Stoffwechselprozessen.↩︎\nInnere mechanische Arbeit: Arbeit für die Aufrechterhaltung der Körpersegmentbewegung.↩︎\nArbeit für die Leerbewegung: Arbeit, die für das unbelastete Treten aufgebracht werden muss.↩︎\nDer Sauerstoffvolumenstrom oder auch Sauerstofffluss bezeichnet die Menge an Sauerstoff, die innerhalb einer bestimmten Zeitspanne durch ein System oder eine Einheit fließt. In der Sportwissenschaft werden diese Begriffe normalerweise gleichbedeutend mit dem Begriff “Sauerstoffaufnahme” verwendet. In dieser Arbeit beschreibt die Sauerstoffaufnahme das Gesamtvolumen an Sauerstoff, das der Körper innerhalb eines bestimmten Zeitintervalls aufgenommen hat.↩︎",
    "crumbs": [
      "Theoretischer Hintergrund",
      "Wirkungsgrad"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "",
    "section": "",
    "text": "Code"
  },
  {
    "objectID": "about.html#empirische-studie-zum-wirkungsgrad-ein-vergleich-zwischen-sitzendem-und-stehendem-fahren-auf-dem-fahrradergometer",
    "href": "about.html#empirische-studie-zum-wirkungsgrad-ein-vergleich-zwischen-sitzendem-und-stehendem-fahren-auf-dem-fahrradergometer",
    "title": "",
    "section": "Empirische Studie zum Wirkungsgrad: Ein Vergleich zwischen sitzendem und stehendem Fahren auf dem Fahrradergometer",
    "text": "Empirische Studie zum Wirkungsgrad: Ein Vergleich zwischen sitzendem und stehendem Fahren auf dem Fahrradergometer\nHierbei handelt es sich um eine unvollständige Version meiner Masterarbeit, die mit Hilfe von Quarto erstellt wurde. Diese Version dient zur Darstellung des Aufbaus und der groben Struktur der Masterarbeit. Die meisten Teile der Arbeit sowie einige der gezeigten Daten und Abbildungen sind noch unvollständig oder veraltet und werden in der endgültigen Masterarbeit deutlich anders aussehen. Diese Beta-Version soll die Vorteile des Verfassens der Masterarbeit als Webseite verdeutlichen, insbesondere im Hinblick auf die Datendarstellung und die Möglichkeit der Implementierung von R-Codebestandteilen sowie interaktiven Elementen wie Shiny-Apps oder webR-Anwendungen.\n\nim Studiengang\nM.Sc. Diagnostik und Intervention im Leistungssport\nvorgelegt von:\nJohannes Joachim Richard Will\ngeboren am 11.03.1996 in Bad Neustadt\nBetreuerin:\nDr. Martina Clauß\nGutachterinnen:\nDr. Martina Clauß\nDr. Anna Katharina Dunst\nTag der Einreichung:\n13.12.2024\nUniversität Leipzig 2024"
  },
  {
    "objectID": "Methodik/index_Methodik.html",
    "href": "Methodik/index_Methodik.html",
    "title": "Methodik",
    "section": "",
    "text": "In den folgenden Abschnitten werden die Details der Methodik der Studie umfassend dargelegt. Zunächst wird die Stichprobe sowie die Auswahlkriterien beschrieben. Anschließend werden die Messinstrumente und -methoden zur präzisen Erfassung der leistungsphysiologischen Parameter im Humanphysiologischen Labor detailliert erläutert. Darüber hinaus werden die Pilotierungsphase und das finale Studiendesign vorgestellt.",
    "crumbs": [
      "Methodik"
    ]
  },
  {
    "objectID": "Methodik/Statistische_Analyseverfahren.html",
    "href": "Methodik/Statistische_Analyseverfahren.html",
    "title": "Statistische Anaylseverfahren",
    "section": "",
    "text": "Die Auswertung der erhobenen Daten erfolgte mittels verschiedener deskriptiver und inferenzstatistischer Methoden, um sowohl die grundlegenden Eigenschaften der Daten zu beschreiben als auch Zusammenhänge und Unterschiede zwischen den untersuchten Variablen statistisch zu validieren. Die folgenden Abschnitte beschreiben detailliert die verwendeten Analysemethoden, die Prüfung der statistischen Voraussetzungen sowie die Kriterien zur Bewertung der Ergebnisse.",
    "crumbs": [
      "Methodik",
      "Statistische Anaylseverfahren"
    ]
  },
  {
    "objectID": "Methodik/Statistische_Analyseverfahren.html#deskriptive-statistik",
    "href": "Methodik/Statistische_Analyseverfahren.html#deskriptive-statistik",
    "title": "Statistische Anaylseverfahren",
    "section": "Deskriptive Statistik",
    "text": "Deskriptive Statistik\nDie erhobenen Daten wurden zunächst einer systematischen Aufbereitung für die deskriptive Analyse unterzogen, wobei die initiale Datenverarbeitung in Microsoft Excel stattfand. Die weiterführende Analyse und Visualisierung erfolgte mittels R (Version 4.4.2) und umfasste sowohl klassische Grafiken und Tabellen als auch interaktive Shiny-Applikationen. Die Charakterisierung der Verteilungen umfasste die Berechnung zentraler Tendenzen (arithmetisches Mittel, Median) sowie verschiedener Streuungsmaße (Standardabweichung, Minimal- und Maximalwerte). Sämtliche statistischen Kennwerte fanden sich in Tabellen, Grafiken und interaktiven Visualisierungen wieder. Diese deskriptive Aufbereitung ermöglichte die Identifikation von Ausreißern sowie Verteilungsmustern und schuf damit die Grundlage für die weiterführenden Analysen.",
    "crumbs": [
      "Methodik",
      "Statistische Anaylseverfahren"
    ]
  },
  {
    "objectID": "Methodik/Statistische_Analyseverfahren.html#inferenzstatistik",
    "href": "Methodik/Statistische_Analyseverfahren.html#inferenzstatistik",
    "title": "Statistische Anaylseverfahren",
    "section": "Inferenzstatistik",
    "text": "Inferenzstatistik\nDie statistischen Analysen erfolgten mit R (Version 4.2.1), wobei als Grundlage für die Wahl der statistischen Verfahren die Daten zunächst mittels Shapiro-Wilk-Test auf Normalverteilung und mittels Levene-Test auf Varianzhomogenität geprüft wurden.\nBei erfüllten Voraussetzungen (Normalverteilung und Varianzhomogenität) kamen parametrische Verfahren in Form von ein- und zweifaktoriellen Varianzanalysen (ANOVA) mit Messwiederholung zum Einsatz. Die Sphärizitätsannahme wurde mittels Mauchly-Test überprüft. Bei Verletzung der Sphärizität erfolgte eine Korrektur der Freiheitsgrade in Abhängigkeit vom Epsilon-Wert (ε): Bei ε ≤ 0.75 wurde die konservativere Greenhouse-Geisser-Korrektur angewandt, bei ε &gt; 0.75 die Huynh-Feldt-Korrektur. Für Post-hoc Analysen und spezifische Paarvergleiche wurden gepaarte t-Tests mit Bonferroni-Korrektur durchgeführt. Bei verletzten Voraussetzungen fanden nicht-parametrische Verfahren Anwendung, konkret der Friedman-Test mit nachfolgenden paarweisen Wilcoxon-Tests (Bonferroni-korrigiert) für Mehrfachvergleiche und der Wilcoxon-Test für Einzelvergleiche zwischen zwei Bedingungen. Für die Analyse von Zusammenhängen kamen lineare und nicht-lineare Regressionsmodelle zum Einsatz. Bei linearen Zusammenhängen fand die Methode der kleinsten Quadrate Anwendung (lm()-Funktion), wobei die Überprüfung der statistischen Signifikanz mittels F-Test der Varianzanalyse erfolgte. Das Bestimmtheitsmaß (R2) diente zur Quantifizierung der Modellgüte. Bei nicht-linearen Zusammenhängen erfolgte die Schätzung der Modellparameter durch einen iterativen Levenberg-Marquardt-Optimierungsalgorithmus (nlsLM()-Funktion), wobei die Modellgüte ebenfalls durch das Bestimmtheitsmaß (R2) quantifiziert wurde. Die Wahl der Startwerte der Regressionsmodelle basierte auf theoretischen Überlegungen.\nFür alle statistischen Analysen galt ein Signifikanzniveau von α = 0.05, wobei die Ergebnisse anhand ihrer p-Werte als statistisch hoch signifikant (p ≤ 0.01), signifikant (p ≤ 0.05) oder nicht signifikant (p &gt; 0.05) klassifiziert wurden. Die Darstellung der Signifikanzniveaus in den Diagrammen erfolgte mittels Asterisken (*** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05) und signifikante Haupteffekte durch ein Kreuz (†), während zusätzlich statistische Trends im Bereich 0.05 &lt; p &lt; 0.1 dokumentiert wurden. Die Quantifizierung der Effektstärken erfolgte mittels partiellem Eta-Quadrat (ηp2) für parametrische Tests, wobei Werte ≥ 0.01 als kleiner, ≥ 0.06 als mittlerer und ≥ 0.14 als großer Effekt interpretiert wurden (Cohen, 1988, S. 368). Für Wilcoxon-Tests und den Pearson Korrelationskoeffizienten kam die Effektstärke r zum Einsatz, mit Werten ≥ 0.1 als kleiner, ≥ 0.3 als mittlerer und ≥ 0.5 als großer Effekt. Bei Paarvergleichen diente Cohens d als standardisierte Effektgröße, mit Werten &lt; 0.2 als trivialer, 0.2 ≤ d &lt; 0.5 als kleiner, 0.5 ≤ d &lt; 0.8 als mittlerer und d ≥ 0.8 als großer Effekt (Cohen, 1992).\nZur Analyse von Zusammenhängen zwischen den erhobenen Parametern kamen verschiedene Regressionsanalysen zum Einsatz. Lineare Zusammenhänge wurden mittels linearer Regressionsmodelle quantifiziert, nicht-lineare Beziehungen durch exponentielle Regressionsmodelle beschrieben. Die Modellgüte ließ sich jeweils durch das Bestimmtheitsmaß (R2) evaluieren, welches den Anteil der durch das Modell erklärten Varianz an der Gesamtvarianz beschreibt und somit eine quantitative Bewertung der funktionellen Zusammenhänge zwischen den untersuchten Parametern ermöglicht.",
    "crumbs": [
      "Methodik",
      "Statistische Anaylseverfahren"
    ]
  },
  {
    "objectID": "Methodik/Statistische_Analyseverfahren.html#quellenverzeichnis",
    "href": "Methodik/Statistische_Analyseverfahren.html#quellenverzeichnis",
    "title": "Statistische Anaylseverfahren",
    "section": "Quellenverzeichnis",
    "text": "Quellenverzeichnis\n\n\nCohen, J. (1988). Statistical Power Analysis for the Behavioral Sciences (Second Edi, S. 567). Erlbaum.\n\n\nCohen, J. (1992). A power primer. Psychological bulletin, 112(1), 155–159. https://doi.org/10.1037//0033-2909.112.1.155",
    "crumbs": [
      "Methodik",
      "Statistische Anaylseverfahren"
    ]
  },
  {
    "objectID": "Diskussion.html",
    "href": "Diskussion.html",
    "title": "Diskussion",
    "section": "",
    "text": "In Stichpunkten: Aufbau der Diskussion anhand der formulierten Forschungsfragen und Hypothesen:"
  },
  {
    "objectID": "Diskussion.html#forschungsfragen",
    "href": "Diskussion.html#forschungsfragen",
    "title": "Diskussion",
    "section": "Forschungsfragen:",
    "text": "Forschungsfragen:\n\nUnterschiede zwischen den Körperpositionen Sitzen und Stehen?\nUnterschiede des ηmuskulär bei den Belastungsintensitäten?\nUnterschiede des ηmuskulär zwischen den Belastungsintensitäten in den Körperpositionen?"
  },
  {
    "objectID": "Diskussion.html#hypothesen",
    "href": "Diskussion.html#hypothesen",
    "title": "Diskussion",
    "section": "Hypothesen:",
    "text": "Hypothesen:\n\nKeine signifikanten Unterschiede des ηmuskulär zwischen Sitzen und Stehen\nKeine signifikanten Unterschiede des ηmuskulär zwischen leichten, moderaten und schweren Belastungsintensitäten\nUnterschiede zwischen den Intensitäten der Bedingungen\n\nBei niedrigen Intensitäten gibt es keine signifikanten Unterschiede des ηmuskulär zwischen sitzender und stehender Position.\nBei mittleren und hohen Intensitäten gibt es keine statistisch signifikanten Unterschiede des ηmuskulär zwischen sitzender und stehender Position\n\n\n\n\n\n\n\n\nWirkungsgradberechnungen\n\n\n\n\n\n\n\n\nWirkungsgrade\nBerechnung\n\n\n\n\nηBrutto\nWmech / WAerob\n\n\nηNetto\nWmech / (WAerob - WRuhe)\n\n\nηTotal\nWmech / (WTot - WRuhe)\n\n\nηmuskulär\n(Wmech + WInt) / (WTot - WRuhe)\n\n\nηArbeit\nWmech / (WTot - WRuhe - WLeerbewegung)\n\n\nηdelta\nΔWmech / ΔWTot\n\n\n\n\n\n\n\nZu Hypothese 1\n\nηmuskulär signifikant höher in sitzender Position (24.98 ± 1.06% vs. 24.07 ± 0.96%) (F(1,8) = 7.64, p = .024, ηp2 = .489) → Hypothese widerlegt\n\nEffekt primär durch signifikant höhere PTot in sitzender Bedingung bei konstanter WTOT\nMethodische Limitation: Berechnungsvalidität von PTot bzw. PInt für Stehen-Bedingung ist zu hinterfragen\nBei Ausklammerung von PInt kein signifikanter Unterschied → siehe ηTotal\n\nηNetto und ηBrutto unterschieden sich nicht signifikant\n\nTendenziell höhere Werte in stehender Position\n\n\n\n\nZu Hypothese 2\n\nSignifikanter Effekt der Intensität auf ηmuskulär (F(2,16) = 5.23, p = .018, ηp2 = .395). ηmuskulär nimmt mit steigender Intensität ab (24.94 ± 1.27% - 24.14 ± 0.90%) → Hypothese widerlegt\n\nPost-hoc-Analysen: Signifikanter Unterschied zwischen leicht und schwer (p = .074, d = .75)\nModerate und schwere sowie moderate und leichte Intensitätsstufen ohne statistisch signifikanten Unterschied\n\nSignifikanter Effekt der Intensität auf ηmuskulär innerhalb der Sitzen Bedingung (F(2,16) = 10.19, p = .001, ηp2 = .560). → Hypothese widerlegt\n\nPost-hoc-Analysen: Signifikanter Unterschied zwischen leicht und schwer (p = .017, d = 1.31).\nModerat und leicht (p = .217, d = .83) sowie moderat und schwerer (p = .427, d = .63) nicht signifikant\n\nWirkungsgradverhalten bei steigender Belastungsintensität:\n\nηmuskulär und ηTotal sinken tendenziell ab, da WTOT überproportional ansteigt gegenüber PTOT für ηmuskulär bzw. Pmech für ηTotal. Jedoch nur bei ηmuskulär signifikant, was womöglich damit zu erklären ist, dass PInt nicht ansteigt mit steigender Belastungsintensität und somit der ηmuskulär noch stärker abfällt als ηTotal\nηArbeit,sitzen verhält sich mit steigender Belastungsintensität innerhalb der Sitzen Bedingung vergleichbar wie ηmuskulär, da zwischen der leichten und schweren Belastungsintensität jeweils ein signifikanter Unterschied besteht. Die Unterschiede bestehen nur darin, wie die Kosten für die innere Leistung bestimmt wurden. Für ηmuskulär wurden diese anhand des biomechanischen Modells oder 3D-Kinematik errechnet, während der Sauerstoffumsatz für die Bewegungen anhand des Drehzahltests in ηArbeit,sitzen berechnet wurde. So scheinen beide Berechnungsansätze valide Methoden für die Bestimmung der inneren Arbeit zu sein. Für die stehende Bedingung können die beiden nicht verglichen werden, da ηArbeit nicht für Stehen berechnet wurde\nηNetto zeigt gegensätzliches Verhalten bei steigender Belastungsintensität. Die Mittelwerte von ηNetto steigen bei höheren Intensitäten im Mittel über beide Bedingungen, auch wenn keine signifikanten Unterschiede festzustellen sind. Innerhalb der jeweiligen Bedingungen zeigt sich ein sehr geringer nicht signifikanter Abfall für ηNetto, bzw. ein fast konstanter Nettowirkungsgrad innerhalb der Sitzen Bedingung, aber während dem Stehen ein konstanter nicht signifikanter Anstieg von leicht zu schwer\nηBrutto steigt wie zu erwarten signifikant an mit steigender Intensität, was auf den kleiner werdenden prozentualen Anteil des Ruhenergieumsatzes zurückzuführen ist\n\n\n\n\nZu Hypothese 3\n\nSignifikanter Effekt zwischen der leichten Intensität zwischen Sitzen und Stehen von ηmuskulär. Sitzen signifikant höher (25.68 ± 1.03 vs. 24.20 ± 1.05). Die statistische Analyse zeigt eine hohe Signifikanz und Effektstärke (F(1,8) = 16.63, p = .004, ηp2 = .675) → Hypothese bestätigt\nTendenziell signifikanter, aber nicht vollständig signifikanter Effekt zwischen der moderaten Intensität zwischen Sitzen und Stehen. Sitzen weiterhin numerisch höher (24.92 ± 0.78 vs. 24.08 ± 1.08) → Hypothese tendentiell bestätigt\nNicht signifikanter Effekt von ηmuskulär zwischen der schweren Intensität zwischen Sitzen und Stehen. Sitzen numerisch höher (24.36 ± 0.99 vs. 23.92 ± 0.81), jedoch zeigt statistische Prüfung keine relevante Differenz (F(1,8) = 1.41, p = .269, ηp2 = .150) → Hypothese bestätigt\nUnterschied in ηmuskulär zwischen Sitzen und Stehen nimmt mit steigender Intensität systematisch ab → Hypothese bestätigt\nAlle anderen Wirkungsgradberechnungsmethoden zeigen keine vergleichbaren signifikanten Ergebnisse.\n\nDie konsistent höheren PTot bzw. PInt-Werte im Sitzen über alle Intensitätsbedingungen hinweg legen nahe, dass die beobachteten Unterschiede höchstwahrscheinlich auf eine erhöhte berechnete innere Arbeitsleistung zurückzuführen sind\n\n\n\n\nErklärung der statistisch signifikanten Unterschiede von ηmuskulär\n\nηmuskulär zwischen den moderatn eIntsnitäten zwar nicht signifikant, aber ganz knapp davor (F(1,8) = 5.26, p = .051, ηp2 = .397). Bei größerer Stichprobe keine signifikanz anzunehmen.\nηmuskulär und ηTotal unterscheiden sich lediglich durch die Einbeziehung der inneren Arbeit. Die innere Arbeit variiert signifikant zwischen Sitzen (37.5 ± 11.3) und Stehen (22.1 ± 6.9).\nDie PInt Mittelwerte bleiben über alle Intensitäten konstant, da sie drehzahlabhängig sind und die Drehzahl nahezu identisch bleibt. Dadurch zeigt sich eine deutlich größere Differenz zwischen ηmuskulär und ηTotal von durchschnittlich 0.80 bei leichter und 0.34 bei schwerer Intensität, weil PInt nahezu gleichbleibt, während der physiologische Energieumsatz steigt.\nDa PInt im Sitzen signifikant höher war, ist ηmuskulär auch höher im Sitzen als im Stehen. Ohne Berücksichtigung von PInt (wie in ηTotal) zeigt sich keine Signifikanz. Daher repräsentiert ηTotal eher die in der Literatur erwarteten Verhaltensweisen.\nSCHWÄCHEN VON Pint:\n\nBerechnung ohne Rücksicht der potentiellen ENergie bei der BEcnung der inneren Leistung. Deshalb wahrschinelich im sitzen unterschätz und im Stehen massiv untershcätzt. Aber für das stheen gibt es kien Verleichswerte\nEine Valide BErechnung von PInt ims tehen könnte auch den beobachtetn Effekt erklären, dass bei niedrigen Intensitäten die Stehen ebdingung wahrshceinlich wenige reffizient ist als die sitzen ebdingung, da di eineer arbeit wohl wahrschienlich für die gleich edrehzhal höher ist im stehen und in den untersuchungen meit die glecihe derhzal für sitzen und stehen vergliche wurde.\n\n\n\nFazit von ηmuskulär:\n\nηmuskulär wahrscheinlich nur für das Sitzen repräsentativ, aber für die stehenden Bedingung wahrscheinlich etwas unterschätzt. Hier also noch mehr Forschungsbedarf, um die PInt fürs Stehen noch präziser einschätzen zu können.\n\nηmuskulär wahrscheinlich valide Ergebnisse für das Fahren im Sitzen, aber die Ergebnisse für das Stehen sind anzuzweifeln.\nFür den Vergleich der beiden Bedingungen wahrscheinlich ηTotal am besten geeignet und hier sind im Gegensatz zu ηmuskulär keine signifikanten Ergebnisse zu sehen."
  },
  {
    "objectID": "Diskussion.html#relevanz-für-die-praxis",
    "href": "Diskussion.html#relevanz-für-die-praxis",
    "title": "Diskussion",
    "section": "Relevanz für die Praxis",
    "text": "Relevanz für die Praxis\n\nDas Fahren im Stehen stellt bezüglich des Wirkungsgrades eine valide Alternative zum Sitzen dar, um kurzzeitig die Körperposition zu variieren und unterschiedliche Muskelgruppen zu belasten. Wie beschrieben, ist der gemittelte ηmuskulär über alle Intensitäten in stehender Position niedriger als im Sitzen. Dieser Wirkungsgrad eignet sich jedoch, wie bereits diskutiert, für die Berechnungen im Sitzen nur bedingt als Bewertungsmethode.\nEin entscheidender Aspekt beim Radfahren in der Praxis, der in der Studie nicht berücksichtigt wurde, ist der signifikante Anstieg des Luftwiderstands beim Wechsel von sitzender zu stehender Position. Dies kann insbesondere bei Profiradsportlern, die hohe Geschwindigkeiten sowohl auf ebenen Strecken als auch in bergigen Terrains erreichen, zu einer substantiellen Reduktion der Geschwindigkeit bei gleichbleibender mechanischer Leistung führen. Daher ist das Fahren im Stehen in der Praxis primär für kurze Zeitintervalle an steilen Anstiegen oder in Situationen mit geringer Geschwindigkeit sinnvoll, bei denen der Luftwiderstand gegenüber der Gravitationskraft oder dem Rollwiderstand eine untergeordnete Rolle spielt. Eine potenzielle Ausnahme bilden Situationen, in denen kurzzeitig sehr hohe mechanische Leistungen erforderlich sind. Gemäß vorliegender Literatur kann im Stehen über kurze Zeiträume eine höhere mechanische Leistung generiert werden."
  },
  {
    "objectID": "Diskussion.html#weiteres",
    "href": "Diskussion.html#weiteres",
    "title": "Diskussion",
    "section": "Weiteres",
    "text": "Weiteres\n\nEinordnung der porentualen enrgieanteile die ich bestimmt habe im Verlgeich zu Gastin2001\nIst es valide die anaeroben laktaziden Anteil überhaupt bei so langen belastungen auf diese WEise zu ebstimmen, kann nicht mehr laktazid ersellt werden aber auch shcon abgebaut wärhendndessen?"
  },
  {
    "objectID": "Diskussion.html#limitationen",
    "href": "Diskussion.html#limitationen",
    "title": "Diskussion",
    "section": "Limitationen",
    "text": "Limitationen\n\nGeringe Stichprobengröße\nLeichte und moderate Intensität zu schwer\nInnere Leistung im Stehen vermutlich unterschätzt, da für gleiche Drehzahl kaum höher als im Sitzen\n\nWurde vergleichbar berechnet wie im Sitzen\nHaltearbeit sowie vertikale Änderungen des Körperschwerpunktes nicht einbezogen\n\nEinfluss der leichten Belastung von 50 Watt in den Erholungsphasen auf die EPOC-Messung\n\nKeine geregelte Trittrate in dieser Phase\n\nZu kurze Erholung nach den jeweiligen Belastungen, vor allem an Testtag 2 nach dem Sprinttest\n\nSprinttest kontraproduktiv keine Rückkehr auf Laktat-Baseline\n\nMögliche Ungenauigkeiten bei der Bestimmung der ventilatorischen Schwellen durch das 30s-Stufenprotokoll im Vergleich zum BDR-Protokoll\nMögliche Ungenauigkeiten bei der Modellierung der EPOC-Kurven und der Berechnung des WPCR aufgrund der 50-Watt Nachbelastung\nMögliche Ungenauigkeiten der Atemgasmessung bei hohen Ventilationsraten\nMögliche Ungenauigkeiten bei der Bestimmung der Körpersegmentmassen und -schwerpunkte für die 3D-Bewegungsanalyse\nDas Ergometer hat manchmal aussetezer gehbat, wodurch in der Nachbelastungsphase teilweise statt der gewollten 50 Watt Belastung über einen Zeitraum von bis zu mehreren Minuten kein Trettwiderstand vorhanden war. Die könnte dazu geführt haben, dass in wenigen Belastungsdurchgängen bzw. der Nachbelastung davon der Sauerstoffvolumenstomr tiefer gefallen war als es eigentlich sien sollte und somit die EPOC - berechnung in manchen wenigen Fällen evtl leicht verfälscht wurde. E skonnte aber nich genau nachvollzogen werden i nwelchen fällen dies eingetreten ist und für wie lange, weshalb dies in der EPOC berechnung nicht beachtet wurde. UNd bist auf potentiell drei WErte die an der oberen Grenze der pyhislogisch plasuiblen Grenze lagen waren die restlichen wrte gut.\n…\nProbleme bei der Berechnung der inneren Leistung wie in Ettema\nEinfluss der Vorbelastung und Nachbelastung AUf EPOC, Sauerstoffspeicher und Anpasungs bzw. abfallkinetik des Sauasertoff"
  },
  {
    "objectID": "Diskussion.html#ausblick",
    "href": "Diskussion.html#ausblick",
    "title": "Diskussion",
    "section": "Ausblick",
    "text": "Ausblick\n\nWeitere Studien mit größerer Stichprobengröße, um die Validität der Ergebnisse zu erhöhen, gibt teilweise große Effekte, die aber nicht signifikant sind\nVergleich der verwendeten EPOC-Berechnungsmethode mit anderen Ansätzen aus der Literatur\nBerücksichtigung der Wärmeabgabe bei der Berechnung des Gesamtenergieumsatzes und des Wirkungsgrades, bzw. Berechnung des Wirkungsgrades über die Wärmeabgabe\nEinfluss der Torque Efficiency oder Pedal-Smoothness (hohe Leistungsspitzen) auf den Wirkungsgrad\nEinfluss von Kurbellängen auf den Wirkungsgrad\nMessung der Kräfte an dem Lenker um die Wirkenden Kräft ebsser einzuschätzen und vll auch für die messung der innerne arbeit\nPyhisologisch Variablen zwischen den Bedingungn noch besprechen, so ähnlich wie Harnish et al. (2007)\n…\nZusammenhang zwischen negativer meachnischer Leistung und innerer Arbeit erforschen\nSind Liestungsspitzen shcneller ermüdend als gleichmäßige Leistungne -&gt; Pedal Smoothness\nZur Validierung von Wint berechnungen den Probanden für verschidene Drehzahlen eine gewisse PTot vorgeben und schauen ob die gleich ephysiologische Reaktin auftritt. Also besipielsweise einmal bei 60 80 100 und 120 Trittrate fahren lassen alles bei Ptot von 300 Watt. Vorher die thoretischen Pint kostne bstimmtn und dann dementrpechend Pmech vorgebn mit bspw. 290 / 260 / 220 und 180 Wat…. Wie bei Ferguson et al. (2002)\nOder für die bestimmung der PInt im Stehen ordentliche Stufentest bei vorgebeneer Dreahzahl fahren lassen vll bei 40 50 60 70 80 90 100 nicht zwingen bis zur Ausbelastung und dann schaen was die metabolischen kosten pber 0 sind wie bei Deltawirkungsgrad und damit dann ein genauere Modell der Pint für das stehen bestimmen.\n\n\n\nErklärung der höheren VO2 Kosten von höheren Trittraten aus TOkui2007 Dies wäre auf den zusätzlichen Energieumsatz durch die Ca2+-ATPase für nicht-kontraktile Prozesse bei höheren Trittfrequenzen zurückzuführen (Abbate et al. 2001; Baker et al. 1994). Die aus ATP freigesetzte Energie wird in Leistungsabgaben einschließlich Pint und Pext umgewandelt und wird auch von verschiedenen Ionenpumpen genutzt, insbesondere der Ca2+-Pumpe des sarkoplasmatischen Retikulums (SR) (Barclay 1994). Blinks et al. (1978) zeigten, dass die Ca2+-Reabsorption in das SR bei höheren Kontraktionsfrequenzen weiter zunahm. Andererseits wurde berichtet, dass ein großer Anteil (*43%) des ATP für nicht-kontraktile Prozesse verwendet wird, wobei mehr ATP aus dem anaeroben als aus dem aeroben Stoffwechsel stammt (Baker et al. 1994). Diese Annahme stimmt mit den vorliegenden Daten überein, die zeigen, dass bei 120 U/min ein höherer [DLa]-Wert beobachtet wurde als bei 40 und 80 U/min (Tabelle 2), was zu mehr anaerober Energie bei 120 U/min führen würde und somit zu einer geringeren Muskeleffizienz. Hogan et al. (1998) zeigten, dass Muskelkontraktionen von kurzer Dauer im Hundemuskel zu einer signifikant höheren berechneten ATP-Verbrauchsrate, einer dreifachen Steigerung der Glykolyse und einer größeren Ermüdung führten, die mit erhöhten intrazellulären [La-] und [H+]-Konzentrationen verbunden war, verglichen mit Muskelkontraktionen von langer Dauer. Es ist möglich, dass die geringere Muskeleffizienz als Folge des höheren Energieverbrauchs bei der höheren Trittfrequenz mit nicht-kontraktilen Prozessen zusammenhängt, wie zum Beispiel übermäßigem Energieverbrauch im Zusammenhang mit der Wiederansammlung von Ca2+ durch das SR. Die Muskeleffizienz bei 40 U/min war in Exp. 1 signifikant niedriger als bei 80 U/min, aber in Exp. 2 gab es keinen signifikanten Unterschied im Vergleich zur Effizienz bei 80 U/min. Der menschliche Skelettmuskel besteht hauptsächlich aus Typ-I- und Typ-II-Muskelfasern. Darüber hinaus wird das Verhältnis der beiden Fasertypen in den rekrutierten Muskelfasern durch die Spannung im arbeitenden Muskel oder durch die Übungsintensität verändert (Sargeant 1994). Typ-II-Muskelfasern sind beim Menschen ineffizienter als Typ-I-Muskelfasern (Coyle et al. 1992; Jones et al. 2004; Hansen et al. 2002; Horowitz et al. 1994; Mogensen et al. 2006). Ahlquest et al. (1992) zeigten unter den gleichen experimentellen Bedingungen wie in unserem Exp. 1, dass bei gleicher Stoffwechselrate die Glykogenentleerung in Typ-II-Muskelfasern bei 50 U/min größer war als bei 100 U/min während des Radfahrens. Dies bedeutet, dass eine stärkere Rekrutierung von Typ-II-Muskelfasern bei der niedrigeren Trittfrequenz aufgrund der höheren Muskelkraft induziert werden könnte, die erforderlich ist, um den höheren Widerstand pro Zyklus bei gleicher Stoffwechselrate zu überwinden. Die geringere Muskeleffizienz bei der niedrigeren Trittfrequenz mit höherer Pedalkraft könnte aus der stärkeren Rekrutierung von Typ-II-Muskelfasern mit niedriger Effizienz resultieren, vermutlich aufgrund der höheren ausgeübten Muskelkraft. Dies unterstützt die Ergebnisse von Exp. 1, dass die Muskeleffizienz bei einer niedrigeren Trittfrequenz (40 U/min) mit höherer Pedalkraft (250%) unter der gleichen Ptot-Bedingung signifikant niedriger war als bei 80 U/min. ################################# # Diskussion als Fließtext:"
  },
  {
    "objectID": "Diskussion.html#zentrale-ergebnisse-im-kontext-der-forschungsfragen",
    "href": "Diskussion.html#zentrale-ergebnisse-im-kontext-der-forschungsfragen",
    "title": "Diskussion",
    "section": "Zentrale Ergebnisse im Kontext der Forschungsfragen",
    "text": "Zentrale Ergebnisse im Kontext der Forschungsfragen\nDie vorliegende Untersuchung liefert differenzierte Erkenntnisse zu den komplexen Wechselwirkungen zwischen Körperposition, Belastungsintensität und muskulärem Wirkungsgrad beim Radfahren. Die Ergebnisse deuten auf subtile, jedoch bedeutsame Unterschiede zwischen den untersuchten Parametern hin.\n\nKörperpositionseffekte auf den muskulären Wirkungsgrad\nBezüglich der ersten Forschungsfrage nach Unterschieden zwischen den Körperpositionen zeigte sich entgegen der ursprünglichen Hypothese ein signifikant höherer ηmuskulär in sitzender Position (24,98 ± 1,06% vs. 24,07 ± 0,96%; F(1,8) = 7,64, p = 0,024, ηp2 = 0,489). Dieser Effekt ist primär auf eine signifikant höhere PTot in sitzender Bedingung bei konstanter WTOT zurückzuführen. Allerdings muss die Berechnungsvalidität von PTot bzw. PInt für die Stehen-Bedingung kritisch hinterfragt werden. Bei Ausklammerung von PInt zeigten sich keine signifikanten Unterschiede zwischen den Positionen, wie die Analyse des ηTotal belegt. Die Wirkungsgrade ηNetto und ηBrutto unterschieden sich ebenfalls nicht signifikant zwischen den Positionen, wobei tendenziell höhere Werte in stehender Position zu beobachten waren.\n\n\nIntensitätsabhängige Modulation des Wirkungsgrades\nDie Untersuchung des Intensitätseinflusses auf ηmuskulär offenbarte entgegen der ursprünglichen Annahmen einen signifikanten Effekt (F(2,16) = 5,23, p = 0,018, ηp2 = 0,395). Mit steigender Intensität zeigte sich eine systematische Abnahme des ηmuskulär von 24,94 ± 1,27% auf 24,14 ± 0,90%. Dieser Effekt manifestierte sich besonders deutlich in der sitzenden Position (F(2,16) = 10,19, p = 0,001, ηp2 = 0,560). Die beobachtete Dynamik lässt sich möglicherweise durch das überproportionale Ansteigen von WTOT gegenüber PTOT bei gleichbleibender PInt erklären.\n\n\nInteraktionseffekte zwischen Position und Intensität\nDie Analyse der Wechselwirkungen zwischen Körperposition und Belastungsintensität ergab ein aufschlussreiches Muster. Bei leichter Intensität wurde ein signifikant höherer ηmuskulär im Sitzen nachgewiesen (25,68 ± 1,03% vs. 24,20 ± 1,05%; F(1,8) = 16,63, p = 0,004, ηp2 = 0,675). Diese Differenz verringerte sich systematisch mit zunehmender Intensität, sodass bei schwerer Belastung keine signifikanten Positionsunterschiede mehr nachweisbar waren (24,36 ± 0,99% vs. 23,92 ± 0,81%; F(1,8) = 1,41, p = 0,269, ηp2 = 0,150)."
  },
  {
    "objectID": "Diskussion.html#methodologische-betrachtungen-und-einschränkungen",
    "href": "Diskussion.html#methodologische-betrachtungen-und-einschränkungen",
    "title": "Diskussion",
    "section": "Methodologische Betrachtungen und Einschränkungen",
    "text": "Methodologische Betrachtungen und Einschränkungen\nDie methodischen Aspekte der Studie erfordern eine sorgfältige Reflexion. Die Berechnung der inneren Arbeit stellt einen zentralen Punkt dar, da sich ηmuskulär und ηTotal ausschließlich durch die Einbeziehung der inneren Arbeit unterscheiden. Die signifikante Variation zwischen Sitzen (37,5 ± 11,3) und Stehen (22,1 ± 6,9) könnte teilweise auf methodische Limitationen zurückzuführen sein. Die höhere PInt im Sitzen resultierte in einem erhöhten ηmuskulär, während sich ohne Berücksichtigung von PInt keine signifikanten Positionsunterschiede zeigten.\nDie begrenzte Stichprobengröße sowie die möglicherweise zu intensive Auslegung der leichten und moderaten Belastungsstufen könnten die Generalisierbarkeit der Ergebnisse einschränken. Insbesondere die Bestimmung der inneren Leistung im Stehen erscheint methodisch herausfordernd, da Aspekte wie Haltearbeit und vertikale Schwerpunktverschiebungen nicht vollständig erfasst wurden."
  },
  {
    "objectID": "Diskussion.html#implikationen-für-wissenschaft-und-praxis",
    "href": "Diskussion.html#implikationen-für-wissenschaft-und-praxis",
    "title": "Diskussion",
    "section": "Implikationen für Wissenschaft und Praxis",
    "text": "Implikationen für Wissenschaft und Praxis\nDie gewonnenen Erkenntnisse legen nahe, dass das Fahren im Stehen hinsichtlich des Wirkungsgrades eine valide Alternative zur sitzenden Position darstellen könnte. Allerdings sollten diese Laborergebnisse mit Bedacht auf die Praxis übertragen werden. Der in realen Bedingungen erhöhte Luftwiderstand beim Stehen wurde in dieser Untersuchung nicht abgebildet. Daher erscheint das Fahren im Stehen primär für definierte Situationen wie steile Anstiege oder Abschnitte mit geringer Geschwindigkeit empfehlenswert."
  },
  {
    "objectID": "Diskussion.html#forschungsperspektiven",
    "href": "Diskussion.html#forschungsperspektiven",
    "title": "Diskussion",
    "section": "Forschungsperspektiven",
    "text": "Forschungsperspektiven\nZukünftige Forschungsarbeiten könnten von erweiterten Stichprobengrößen und methodischen Verfeinerungen bei der Bestimmung der inneren Leistung profitieren. Vielversprechende Ansätze wären die detaillierte Untersuchung der Beziehung zwischen negativer mechanischer Leistung und innerer Arbeit sowie die Analyse des Einflusses der Pedal-Smoothness auf Wirkungsgrad und Ermüdungserscheinungen. Auch die Integration weiterer biomechanischer Parameter könnte das Verständnis der komplexen Wechselwirkungen zwischen Körperposition, Belastungsintensität und Bewegungseffizienz vertiefen."
  },
  {
    "objectID": "Ergebnisse/VO2_Daten.html#interaktive-analyse-der-belastungsparameter",
    "href": "Ergebnisse/VO2_Daten.html#interaktive-analyse-der-belastungsparameter",
    "title": "Phyisologische Belastungsparameter",
    "section": "Interaktive Analyse der Belastungsparameter",
    "text": "Interaktive Analyse der Belastungsparameter\n#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| viewerHeight: 900\n\nlibrary(shiny)\nlibrary(plotly)\nlibrary(minpack.lm)\nlibrary(dplyr)\nlibrary(shinyjs)\nlibrary(shinylive)\nlibrary(DT)\nlibrary(dplyr)\n\nEPOC_data_df_VO2 &lt;- data.frame(\n  `Proband` = c( \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"06\", \"06\", \"06\", \"06\", \"06\", \"06\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"13\", \"13\", \"13\", \"13\", \"13\", \"13\", \"15\", \"15\", \"15\", \"15\", \"15\", \"15\", \"19\", \"19\", \"19\", \"19\", \"19\", \"19\", \"20\", \"20\", \"20\", \"20\", \"20\", \"20\", \"22\", \"22\", \"22\", \"22\", \"22\", \"22\", \"23\", \"23\", \"23\", \"23\", \"23\", \"23\" ),\n  `Nr` = c( 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6 ),\n  `Bedingung` = c( \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\" ),\n  `Intensität` = c( \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"schwer\", \"schwer\" ),\n  `P_Tot [W]` = c( 315.087785382455, 315.356007475201, 343.249556933665, 345.621870862815, 376.01429973294, 377.269342767856, 291.340972880708, 296.008730999173, 319.563716705383, 320.346360885814, 342.797408580074, 334.696918549422, 342.780201343152, 364.604429952782, 419.799963753223, 400.467853364667, 431.054304415492, 452.463577903494, 328.689199107333, 348.476140134227, 357.035734534098, 375.551234669824, 395.659416230325, 383.031683804794, 317.381745748518, 278.360889376064, 350.889509890097, 330.104243714921, 363.61916212901, 400.223676014955, 255.677641947778, 247.499507416179, 267.481373216035, 272.461438312168, 297.602794954409, 306.49260579391, 297.677841174368, 262.464492841036, 297.033969571712, 313.722436973434, 332.282195549595, 347.559610294167, 245.195285695477, 236.218071887388, 265.6271457606, 278.279940401837, 297.955305580942, 291.810409732378, 199.166908885976, 204.303811710974, 230.539973534982, 223.28140151954, 248.864184197347, 255.967028389931 ),\n  `P_Tot_kg [W·kg⁻¹]` = c( 4.14589191292704, 4.14942115098949, 4.51644153860085, 4.54765619556336, 4.94755657543343, 4.96407029957705, 3.99097223124258, 4.05491412327634, 4.37758516034771, 4.3883063135043, 4.69585491205581, 4.58488929519755, 4.18024635784332, 4.44639548722904, 5.11951175308808, 4.88375430932521, 5.25675980994502, 5.51784851101822, 4.56512776537963, 4.83994639075315, 4.95882964630691, 5.21598937041422, 5.49526966986562, 5.31988449728881, 4.17607560195419, 3.662643281264, 4.61696723539601, 4.34347689098581, 4.78446265959224, 5.26610100019677, 3.93350218381197, 3.80768472947968, 4.11509804947746, 4.19171443557181, 4.57850453776014, 4.71527085836785, 3.7209730146796, 3.28080616051295, 3.7129246196464, 3.92153046216792, 4.15352744436994, 4.34449512867708, 5.10823511865578, 4.92120983098725, 5.53389887001251, 5.79749875837161, 6.20740219960296, 6.07938353609121, 3.31944848143294, 3.40506352851623, 3.84233289224969, 3.72135669199234, 4.14773640328911, 4.26611713983218 ),\n  `Masse [kg]` = c( 76, 76, 76, 76, 76, 76, 73, 73, 73, 73, 73, 73, 82, 82, 82, 82, 82, 82, 72, 72, 72, 72, 72, 72, 76, 76, 76, 76, 76, 76, 65, 65, 65, 65, 65, 65, 80, 80, 80, 80, 80, 80, 48, 48, 48, 48, 48, 48, 60, 60, 60, 60, 60, 60 ),\n  `VO2_Ruhe [l·min⁻¹]` = c( 0.409079599507683, 0.409079599507683, 0.409079599507683, 0.409079599507683, 0.409079599507683, 0.409079599507683, 0.390487656996456, 0.390487656996456, 0.390487656996456, 0.390487656996456, 0.390487656996456, 0.390487656996456, 0.398544621667437, 0.398544621667437, 0.398544621667437, 0.398544621667437, 0.398544621667437, 0.398544621667437, 0.378852606093004, 0.378852606093004, 0.378852606093004, 0.378852606093004, 0.378852606093004, 0.378852606093004, 0.398278038452436, 0.398278038452436, 0.398278038452436, 0.398278038452436, 0.398278038452436, 0.398278038452436, 0.352584633817119, 0.352584633817119, 0.352584633817119, 0.352584633817119, 0.352584633817119, 0.352584633817119, 0.415642091286353, 0.415642091286353, 0.415642091286353, 0.415642091286353, 0.415642091286353, 0.415642091286353, 0.293734941358178, 0.293734941358178, 0.293734941358178, 0.293734941358178, 0.293734941358178, 0.293734941358178, 0.320312513138994, 0.320312513138994, 0.320312513138994, 0.320312513138994, 0.320312513138994, 0.320312513138994 ),\n  `tau_on [s]` = c( 46.5, 44.9, 50.7, 34.8, 54.9, 46, 38.5, 34.6, 40.6, 39.6, 46.8, 49.8, 29, 28.4, 36, 30.6, 38.1, 48.5, 30.3, 28.1, 36.6, 28.8, 43.4, 36, 43.1, 39.1, 42.6, 47.2, 41.7, 56.8, 28.4, 25.2, 30.2, 32.5, 34.4, 40.4, 35.9, 32.6, 42, 36.7, 51.4, 45.4, 19.9, 26.6, 39.4, 25.9, 24.9, 29.8, 24.3, 20, 21.1, 25.2, 28.3, 25.7 ),\n  `VO2_SS_percent [%]` = c( 78.05, 72.88, 80.93, 82.86, 95.41, 92.44, 78.78, 78.47, 81.67, 82.74, 88.98, 90.56, 72.62, 72.38, 84.49, 82.2, 89.86, 97.43, 82.89, 80.73, 89.87, 86.88, 94.87, 95.97, 74.8, 72.53, 81.88, 84.45, 90.17, 93.29, 73.56, 66.2, 72.77, 78.14, 82.38, 86.28, 65.42, 60.21, 69.7, 71.97, 81.32, 84.22, 78.2, 74.84, 82.97, 87.62, 95.96, 88.77, 67.8, 63.55, 70.47, 72.88, 78.3, 77.61 ),\n  `R2_on` = c( 0.93, 0.95, 0.97, 0.96, 0.93, 0.96, 0.92, 0.96, 0.95, 0.96, 0.97, 0.98, 0.91, 0.91, 0.97, 0.98, 0.98, 0.99, 0.86, 0.89, 0.92, 0.93, 0.96, 0.93, 0.9, 0.96, 0.92, 0.91, 0.95, 0.95, 0.98, 0.9, 0.9, 0.95, 0.96, 0.95, 0.82, 0.82, 0.9, 0.93, 0.93, 0.95, 0.86, 0.9, 0.89, 0.93, 0.87, 0.93, 0.88, 0.89, 0.91, 0.95, 0.95, 0.96 ),\n  `VO2_Brutto_SS [l·min⁻¹]` = c( 4.413, 4.121, 4.576, 4.685, 5.395, 5.227, 3.899, 3.884, 4.042, 4.095, 4.404, 4.482, 4.49, 4.475, 5.224, 5.082, 5.556, 6.024, 4.297, 4.185, 4.659, 4.504, 4.918, 4.975, 3.985, 3.864, 4.362, 4.499, 4.804, 4.97, 3.452, 3.107, 3.415, 3.667, 3.866, 4.049, 3.632, 3.343, 3.87, 3.996, 4.515, 4.676, 3.048, 2.917, 3.234, 3.415, 3.74, 3.46, 2.762, 2.589, 2.871, 2.969, 3.19, 3.162 ),\n  `VO2_Netto_SS [l·min⁻¹]` = c( 4.004, 3.712, 4.167, 4.276, 4.986, 4.818, 3.509, 3.494, 3.652, 3.705, 4.014, 4.092, 4.042, 4.027, 4.776, 4.634, 5.108, 5.576, 3.858, 3.746, 4.22, 4.065, 4.479, 4.536, 3.587, 3.466, 3.964, 4.101, 4.406, 4.572, 3.182, 2.837, 3.145, 3.397, 3.596, 3.779, 3.279, 2.99, 3.517, 3.643, 4.162, 4.323, 2.776, 2.645, 2.962, 3.143, 3.468, 3.188, 2.384, 2.211, 2.493, 2.591, 2.812, 2.784 ),\n  `delta_VO2 [l·min⁻¹]` = c( 2.122, 2.419, 2.199, 2.281, 3.547, 3.209, 1.98, 1.752, 1.925, 1.784, 2.864, 2.367, 2.554, 3.728, 3.155, 3.118, 3.882, 4.164, 2.211, 2.172, 2.616, 2.6, 3.331, 2.904, 1.763, 2.222, 2.177, 2.882, 3.114, 2.885, 1.962, 1.736, 1.832, 2.058, 2.163, 2.364, 1.869, 1.356, 2.15, 2.119, 2.318, 2.46, 1.627, 1.674, 1.841, 2.07, 2.756, 2.821, 1.385, 1.229, 1.39, 1.501, 1.561, 1.639 ),\n  `VO2_on_Start [l·min⁻¹]` = c( 2.33, 1.747, 2.417, 2.446, 1.913, 2.077, 1.955, 2.164, 2.153, 2.344, 1.592, 2.158, 1.983, 0.815, 2.127, 2.021, 1.745, 1.937, 2.126, 2.053, 2.091, 1.952, 1.648, 2.124, 2.254, 1.683, 2.225, 1.67, 1.747, 2.138, 1.526, 1.403, 1.616, 1.646, 1.742, 1.728, 1.797, 2.012, 1.759, 1.916, 2.239, 2.261, 1.45, 1.274, 1.427, 1.383, 1.035, 0.69, 1.403, 1.383, 1.506, 1.495, 1.657, 1.553 ),\n  `VO2_Referenz [l·min⁻¹]` = c( 0.997235294117647, 0.997235294117647, 0.997235294117647, 0.997235294117647, 0.997235294117647, 0.997235294117647, 0.934166666666667, 0.934166666666667, 0.934166666666667, 0.934166666666667, 0.934166666666667, 0.934166666666667, 0.9478, 0.9478, 0.9478, 0.9478, 0.9478, 0.9478, 0.999544642857143, 0.999544642857143, 0.999544642857143, 0.999544642857143, 0.999544642857143, 0.999544642857143, 0.898278038452436, 0.898278038452436, 0.898278038452436, 0.898278038452436, 0.898278038452436, 0.898278038452436, 0.769533333333333, 0.769533333333333, 0.769533333333333, 0.769533333333333, 0.769533333333333, 0.769533333333333, 0.852692307692308, 0.852692307692308, 0.852692307692308, 0.852692307692308, 0.852692307692308, 0.852692307692308, 0.772045454545454, 0.772045454545454, 0.772045454545454, 0.772045454545454, 0.772045454545454, 0.772045454545454, 0.896472222222222, 0.896472222222222, 0.896472222222222, 0.896472222222222, 0.896472222222222, 0.896472222222222 ),\n  `VO2_avg [l·min⁻¹]` = c( 4.032, 3.768, 4.124, 4.28, 4.716, 4.705, 3.609, 3.626, 3.699, 3.783, 4.06, 3.944, 4.176, 3.944, 4.733, 4.652, 4.961, 5.401, 3.965, 3.902, 4.327, 4.195, 4.45, 4.554, 3.728, 3.61, 4.073, 4.095, 4.41, 4.485, 3.232, 2.946, 3.158, 3.407, 3.566, 3.743, 3.324, 3.125, 3.542, 3.637, 4.053, 4.185, 2.929, 2.802, 3.074, 3.208, 3.505, 3.222, 2.637, 2.436, 2.702, 2.802, 2.968, 2.96 ),\n  `VO2_SS_avg [l·min⁻¹]` = c( 4.246, 3.979, 4.387, 4.517, 5.064, 4.996, 3.771, 3.767, 3.891, 3.956, 4.223, 4.198, 4.363, 4.29, 5.04, 4.916, 5.345, 5.766, 4.15, 4.075, 4.5, 4.373, 4.742, 4.804, 3.862, 3.746, 4.214, 4.324, 4.623, 4.71, 3.373, 3.031, 3.308, 3.571, 3.744, 3.928, 3.494, 3.237, 3.709, 3.846, 4.301, 4.454, 2.969, 2.871, 3.156, 3.309, 3.642, 3.361, 2.716, 2.531, 2.807, 2.9, 3.088, 3.077 ),\n  `VCO2_avg [l·min⁻¹]` = c( 3.635, 3.415, 3.802, 3.915, 4.559, 4.292, 3.19, 3.335, 3.55, 3.623, 3.949, 3.77, 3.616, 3.635, 4.659, 4.475, 4.938, 5.473, 3.549, 3.615, 4.07, 4.033, 4.413, 4.33, 3.346, 3.341, 3.861, 3.945, 4.304, 4.232, 3.006, 2.621, 2.907, 3.287, 3.455, 3.692, 2.845, 2.79, 3.274, 3.309, 3.845, 3.918, 2.635, 2.493, 2.778, 3.028, 3.414, 2.994, 2.373, 2.21, 2.538, 2.731, 2.965, 2.893 ),\n  `VCO2_SS_avg [l·min⁻¹]` = c( 3.873, 3.653, 4.111, 4.158, 4.954, 4.607, 3.366, 3.488, 3.767, 3.833, 4.16, 4.104, 3.791, 3.976, 4.99, 4.748, 5.323, 5.917, 3.711, 3.775, 4.282, 4.209, 4.724, 4.584, 3.555, 3.539, 4.085, 4.215, 4.543, 4.621, 3.137, 2.735, 3.055, 3.457, 3.657, 3.901, 2.998, 2.933, 3.452, 3.519, 4.135, 4.207, 2.708, 2.561, 2.935, 3.13, 3.55, 3.124, 2.459, 2.291, 2.642, 2.832, 3.09, 3.018 ),\n  `RQ_avg` = c( 0.9, 0.9, 0.92, 0.9, 0.95, 0.9, 0.87, 0.91, 0.95, 0.94, 0.96, 0.94, 0.88, 0.88, 0.97, 0.95, 0.97, 1, 0.89, 0.92, 0.94, 0.95, 0.98, 0.94, 0.89, 0.93, 0.94, 0.95, 0.96, 0.94, 0.92, 0.9, 0.91, 0.96, 0.96, 0.98, 0.85, 0.89, 0.92, 0.9, 0.94, 0.92, 0.9, 0.9, 0.92, 0.94, 0.96, 0.92, 0.91, 0.9, 0.94, 0.97, 0.99, 0.97 ),\n  `tau_on_min [min]` = c( 0.775, 0.748333333333333, 0.845, 0.58, 0.915, 0.766666666666667, 0.641666666666667, 0.576666666666667, 0.676666666666667, 0.66, 0.78, 0.83, 0.483333333333333, 0.473333333333333, 0.6, 0.51, 0.635, 0.808333333333333, 0.505, 0.468333333333333, 0.61, 0.48, 0.723333333333333, 0.6, 0.718333333333333, 0.651666666666667, 0.71, 0.786666666666667, 0.695, 0.946666666666667, 0.473333333333333, 0.42, 0.503333333333333, 0.541666666666667, 0.573333333333333, 0.673333333333333, 0.598333333333333, 0.543333333333333, 0.7, 0.611666666666667, 0.856666666666667, 0.756666666666667, 0.331666666666667, 0.443333333333333, 0.656666666666667, 0.431666666666667, 0.415, 0.496666666666667, 0.405, 0.333333333333333, 0.351666666666667, 0.42, 0.471666666666667, 0.428333333333333 ),\n  `RQ_SS_avg` = c( 0.91, 0.91, 0.93, 0.91, 0.97, 0.92, 0.89, 0.92, 0.96, 0.96, 0.98, 0.97, 0.88, 0.91, 0.98, 0.96, 0.99, 1.02, 0.89, 0.92, 0.95, 0.96, 0.99, 0.95, 0.91, 0.94, 0.96, 0.97, 0.98, 0.97, 0.93, 0.9, 0.92, 0.96, 0.97, 0.99, 0.86, 0.9, 0.93, 0.91, 0.96, 0.94, 0.9, 0.9, 0.93, 0.94, 0.97, 0.92, 0.91, 0.9, 0.94, 0.97, 1, 0.98 ),\n  `HR_percent [%]` = c( 87.37, 85.07, 88.4, 90.93, 93.12, 93.78, 88.05, 88.16, 92.21, 91.97, 95.39, 93.58, 84.41, 84.65, 88.64, 89.98, 91.12, 94.04, 89.19, 89.26, 92.25, 92.32, 93.98, 94.9, 86.65, 87.88, 89.95, 91.14, 93.96, 94.27, 90.9, 86.55, 87.59, 91.62, 91.13, 95.12, 86.77, 87.49, 90.8, 89.74, 93.35, 94.18, 80.64, 81.03, 84.87, 88.21, 91.54, 92.47, 91.92, 88.36, 90.08, 92.49, 93.58, 93.31 ),\n  `t_delay [s]` = c( 19.9, 8.8, 19, 23.6, 22.7, 17.6, 17.1, 22.6, 24, 24.2, 16.2, 18.2, 17.2, 19, 15.7, 17.9, 13.2, 10.5, 22, 18.6, 13.7, 18.2, 10.7, 17.6, 14.2, 12, 15.1, 13.8, 15.1, 13.3, 14.3, 16.8, 18.9, 15.4, 20.3, 12.5, 21.5, 24.8, 20, 20.4, 21.8, 25.5, 19, 10.7, 4.3, 18, 19.8, 12.8, 14.2, 17.7, 18.1, 17.4, 21.7, 20.1 )\n  , check.names = FALSE\n)\n\n# UI Definition\nui &lt;- fluidPage(\n  titlePanel(\"VO2 Daten Analyse\"),\n  \n  sidebarLayout(\n    sidebarPanel(\n      width = 2,\n      style = \"height: 90vh; overflow-y: auto;\",\n      radioButtons(\"viewType\", \"Datenansicht:\",\n                   choices = c(\"Einzelwerte\" = \"individual\",\n                               \"Mittelwerte & BP\" = \"means\"),\n                   selected = \"means\"),\n      checkboxGroupInput(\"selectedBedingung\", \"Bedingungen:\",\n                         choices = unique(EPOC_data_df_VO2$Bedingung),\n                         selected = unique(EPOC_data_df_VO2$Bedingung)),\n      checkboxGroupInput(\"selectedIntensität\", \"Intensitäten:\",\n                         choices = unique(EPOC_data_df_VO2$Intensität),\n                         selected = unique(EPOC_data_df_VO2$Intensität)),\n      radioButtons(\"selectedVariable\", \"Variable für Boxplot:\",\n                   choices = c(\n                     \"VO2_Brutto_SS [l·min⁻¹]\" = \"VO2_Brutto_SS [l·min⁻¹]\",\n                     \"VO2_Netto_SS [l·min⁻¹]\" = \"VO2_Netto_SS [l·min⁻¹]\",\n                     \"VO2_on_Start [l·min⁻¹]\" = \"VO2_on_Start [l·min⁻¹]\",\n                     \"tau_on [s]\" = \"tau_on [s]\",\n                     \"t_delay [s]\" = \"t_delay [s]\",\n                     \"R2_on\" = \"R2_on\",\n                     \"delta_VO2 [l·min⁻¹]\" = \"delta_VO2 [l·min⁻¹]\",\n                     \"VO2_avg [l·min⁻¹]\" = \"VO2_avg [l·min⁻¹]\",\n                     \"VCO2_avg [l·min⁻¹]\" = \"VCO2_avg [l·min⁻¹]\",\n                     \"RQ_avg\" = \"RQ_avg\",\n                     \"VO2_Ruhe [l·min⁻¹]\" = \"VO2_Ruhe [l·min⁻¹]\",\n                     \"VO2_SS_percent [%]\" = \"VO2_SS_percent [%]\",\n                     \"HR_percent [%]\" = \"HR_percent [%]\"\n                   ),\n                   selected = \"VO2_Netto_SS [l·min⁻¹]\"),\n      checkboxGroupInput(\"selectedProband\", \"Probanden:\",\n                         choices = sort(unique(EPOC_data_df_VO2$Proband)),\n                         selected = sort(unique(EPOC_data_df_VO2$Proband)))\n    ),\n    mainPanel(\n      width = 10,\n      conditionalPanel(\n        condition = \"input.viewType == 'means'\",\n        plotlyOutput(\"boxplot\")\n      ),\n      DTOutput(\"epocTable\")\n    )\n  )\n)\n\n# Server-Logik\nserver &lt;- function(input, output, session) {\n  \n  # Hilfsfunktion für Nachkommastellen\n  get_digits_for_column &lt;- function(col_name) {\n    if(col_name %in% c(\"VO2_Ruhe [l·min⁻¹]\", \"VO2_Brutto_SS [l·min⁻¹]\", \"VO2_Netto_SS [l·min⁻¹]\",\n                       \"VO2_on_Start [l·min⁻¹]\", \"VO2_Referenz [l·min⁻¹]\", \"VO2_avg [l·min⁻¹]\",\n                       \"VO2_SS_avg [l·min⁻¹]\", \"VCO2_avg [l·min⁻¹]\", \"VCO2_SS_avg [l·min⁻¹]\")) {\n      return(3)\n    } else if(col_name %in% c(\"P_Tot_kg [W·kg⁻¹]\", \"R2_on\", \"delta_VO2_SS\", \n                              \"RQ_avg\", \"RQ_SS_avg\", \"tau_on_min\")) {\n      return(2)\n    } else if(col_name %in% c(\"P_Tot [W]\", \"tau_on [s]\", \"VO2_SS_percent [%]\",\"t_delay [s]\")) {\n      return(1)\n    } else if(col_name %in% c(\"Nr\", \"Masse [kg]\")) {\n      return(0)\n    }\n    return(2)\n  }\n  \n  # Reaktive gefilterte Daten für Tabelle\n  filtered_data &lt;- reactive({\n    data &lt;- EPOC_data_df_VO2\n    \n    if (length(input$selectedProband) &gt; 0) {\n      data &lt;- data %&gt;% filter(Proband %in% input$selectedProband)\n    }\n    \n    if (length(input$selectedBedingung) &gt; 0) {\n      data &lt;- data %&gt;% filter(Bedingung %in% input$selectedBedingung)\n    }\n    \n    if (length(input$selectedIntensität) &gt; 0) {\n      data &lt;- data %&gt;% filter(Intensität %in% input$selectedIntensität)\n    }\n    \n    if (input$viewType == \"means\") {\n      # Bestimme Gruppierungsvariablen basierend auf Auswahl\n      group_vars &lt;- c()\n      if (length(input$selectedBedingung) &gt; 0 && length(input$selectedIntensität) == 0) {\n        group_vars &lt;- \"Bedingung\"\n      } else if (length(input$selectedBedingung) == 0 && length(input$selectedIntensität) &gt; 0) {\n        group_vars &lt;- \"Intensität\"\n      } else if (length(input$selectedBedingung) &gt; 0 && length(input$selectedIntensität) &gt; 0) {\n        group_vars &lt;- c(\"Bedingung\", \"Intensität\")\n      }\n      \n      if (length(group_vars) == 0) {\n        grouped_data &lt;- data %&gt;%\n          summarise(across(where(is.numeric), \n                           list(mean = ~mean(., na.rm = TRUE),\n                                sd = ~sd(., na.rm = TRUE)))) %&gt;%\n          mutate(Gruppe = \"Gesamt\")\n        group_vars &lt;- \"Gruppe\"\n      } else {\n        grouped_data &lt;- data %&gt;%\n          group_by(across(all_of(group_vars))) %&gt;%\n          summarise(across(where(is.numeric), \n                           list(mean = ~mean(., na.rm = TRUE),\n                                sd = ~sd(., na.rm = TRUE)))) %&gt;%\n          ungroup()\n      }\n      \n      result_data &lt;- grouped_data %&gt;%\n        select(all_of(group_vars))\n      \n      numeric_cols &lt;- names(data)[sapply(data, is.numeric)]\n      for(col in numeric_cols) {\n        mean_col &lt;- paste0(col, \"_mean\")\n        sd_col &lt;- paste0(col, \"_sd\")\n        \n        if(mean_col %in% names(grouped_data) && sd_col %in% names(grouped_data)) {\n          digits &lt;- get_digits_for_column(col)\n          result_data[[col]] &lt;- paste0(\n            format(round(grouped_data[[mean_col]], digits), nsmall = digits),\n            \" ± \",\n            format(round(grouped_data[[sd_col]], digits), nsmall = digits)\n          )\n        }\n      }\n      \n      return(result_data)\n    }\n    \n    return(data)\n  })\n  \n  # Reaktive gefilterte Daten für Plots\n  filtered_data_plots &lt;- reactive({\n    data &lt;- EPOC_data_df_VO2 %&gt;%\n      filter(Proband %in% input$selectedProband)\n    \n    if (length(input$selectedBedingung) &gt; 0) {\n      data &lt;- data %&gt;% filter(Bedingung %in% input$selectedBedingung)\n    }\n    \n    if (length(input$selectedIntensität) &gt; 0) {\n      data &lt;- data %&gt;% filter(Intensität %in% input$selectedIntensität)\n    }\n    \n    # Gruppierung basierend auf Auswahl\n    if (length(input$selectedBedingung) &gt; 0 && length(input$selectedIntensität) == 0) {\n      data$Gruppe &lt;- data$Bedingung\n    } else if (length(input$selectedBedingung) == 0 && length(input$selectedIntensität) &gt; 0) {\n      data$Gruppe &lt;- data$Intensität\n    } else {\n      data$Gruppe &lt;- paste(data$Intensität, data$Bedingung, sep = \"_\")\n    }\n    \n    return(data)\n  })\n  \n  # Color Map\n  color_map &lt;- reactive({\n    c(\n      \"leicht_sitzen\" = \"#42BA97\", \"leicht_stehen\" = \"#62A39F\",\n      \"moderat_sitzen\" = \"#1CADE4\", \"moderat_stehen\" = \"#2683C6\",\n      \"schwer_sitzen\" = \"#EF5350\", \"schwer_stehen\" = \"#C8133B\"\n    )\n  })\n  \n  # Tabellen-Output\n  output$epocTable &lt;- renderDT({\n    data &lt;- filtered_data()\n    \n    if (input$viewType == \"individual\") {\n      columnDefs &lt;- lapply(seq_len(ncol(data)), function(i) {\n        list(\n          targets = i-1,\n          width = paste0(max(\n            nchar(names(data)[i]),\n            max(nchar(as.character(data[[i]])))\n          ) * 10, \"px\"),\n          className = \"dt-nowrap\"\n        )\n      })\n      \n      datatable(data,\n                options = list(\n                  pageLength = 10,\n                  scrollX = TRUE,\n                  scrollCollapse = TRUE,\n                  autoWidth = FALSE,\n                  columnDefs = columnDefs\n                )\n      ) %&gt;%\n        formatRound(\n          columns = c(\"VO2_Ruhe [l·min⁻¹]\", \"VO2_Brutto_SS [l·min⁻¹]\", \"VO2_Netto_SS [l·min⁻¹]\",\n                      \"VO2_on_Start [l·min⁻¹]\", \"VO2_Referenz [l·min⁻¹]\", \"VO2_avg [l·min⁻¹]\",\n                      \"VO2_SS_avg [l·min⁻¹]\", \"VCO2_avg [l·min⁻¹]\", \"VCO2_SS_avg [l·min⁻¹]\"),\n          digits = 3\n        ) %&gt;%\n        formatRound(\n          columns = c(\"P_Tot_kg [W·kg⁻¹]\", \"R2_on\", \"delta_VO2_SS\", \n                      \"RQ_avg\", \"RQ_SS_avg\"),\n          digits = 2\n        ) %&gt;%\n        formatRound(\n          columns = c(\"P_Tot [W]\", \"tau_on [s]\", \"VO2_SS_percent [%]\", \"t_delay [s]\"),\n          digits = 1\n        ) %&gt;%\n        formatRound(\n          columns = c(\"Nr\", \"Masse [kg]\"),\n          digits = 0\n        )\n    } else {\n      columnDefs &lt;- lapply(seq_len(ncol(data)), function(i) {\n        list(\n          targets = i-1,\n          width = paste0(max(\n            nchar(names(data)[i]),\n            max(nchar(as.character(data[[i]])))\n          ) * 10, \"px\"),\n          className = \"dt-nowrap\"\n        )\n      })\n      \n      datatable(data,\n                options = list(\n                  pageLength = 10,\n                  scrollX = TRUE,\n                  scrollCollapse = TRUE,\n                  autoWidth = FALSE,\n                  columnDefs = columnDefs\n                ),\n                escape = FALSE\n      )\n    }\n  })\n  \n  # Boxplot\n  output$boxplot &lt;- renderPlotly({\n    data &lt;- filtered_data_plots()\n    color_map_values &lt;- color_map()\n    \n    # Farben anpassen basierend auf Gruppierung\n    if (length(input$selectedBedingung) &gt; 0 && length(input$selectedIntensität) == 0) {\n      colors &lt;- c(\"sitzen\" = \"#42BA97\", \"stehen\" = \"#62A39F\")\n    } else if (length(input$selectedBedingung) == 0 && length(input$selectedIntensität) &gt; 0) {\n      colors &lt;- c(\"leicht\" = \"#42BA97\", \"moderat\" = \"#1CADE4\", \"schwer\" = \"#EF5350\")\n    } else {\n      colors &lt;- color_map_values\n    }\n    \n    p &lt;- plot_ly(data = data, \n                 x = ~Gruppe, \n                 y = as.formula(paste0(\"~`\", input$selectedVariable, \"`\")),\n                 type = \"box\",\n                 color = ~Gruppe,\n                 colors = colors[unique(data$Gruppe)],\n                 opacity = 0.8,\n                 line = list(color = \"black\", width = 0.9),\n                 boxpoints = \"outliers\",\n                 pointpos = 0,\n                 marker = list(color = \"black\", size = 4),\n                 boxmean = TRUE,\n                 hoverlabel = list(bgcolor = \"#F5F5F5\"),\n                 showlegend = FALSE\n    ) %&gt;%\n      layout(title = paste('Boxplot:', input$selectedVariable),\n             margin = list(t = 40),\n             xaxis = list(title = \"Gruppe\"),\n             yaxis = list(title = input$selectedVariable))\n    \n    return(p)\n  })\n}\n\n# App starten\nshinyApp(ui = ui, server = server)",
    "crumbs": [
      "Ergebnisse & Statistik",
      "Physiologische Belastungsparameter"
    ]
  },
  {
    "objectID": "Ergebnisse/VO2_Daten.html#messwerte-im-belastungszeitraum",
    "href": "Ergebnisse/VO2_Daten.html#messwerte-im-belastungszeitraum",
    "title": "Phyisologische Belastungsparameter",
    "section": "Messwerte im Belastungszeitraum",
    "text": "Messwerte im Belastungszeitraum\nDie folgenden Abbildungen visualisieren die gleitenden Mittelwerte der respiratorischen Parameter (\\(\\dot{V}O_{2}\\), \\(\\dot{V}CO_{2}\\)), der Atemrate (AR), Ventilation (VE) und der Herzfrequenz (HR) während eines standardisierten Belastungsprotokolls von 300 Sekunden, mit jeweils 2 Minuten Vorlauf- und 10 Minuten Nachbelastungsphase.\n\nMesswerte im Belastungszeitraum nach Bedingungen\nAbbildung 3 präsentiert die kardiorespiratorischen Parameter im Vergleich der Körperpositionen, wobei die sitzende Position durch durchgezogene und die stehende Position durch gestrichelte Linien dargestellt wird. Die Analyse der Verlaufskurven zeigt nur marginale Unterschiede zwischen den Körperpositionen, mit einer leichten Tendenz zu erhöhten Werten in der stehenden Position. Diese geringfügigen Differenzen bleiben über alle Intensitätsstufen hinweg konstant und manifestieren sich sowohl in den Steady-State-Phasen als auch in den Übergangsphasen der Belastung. In Abbildung 2 wird die respiratorische Dynamik anhand der Atemrate (AR) und des Atemminutenvolumens (VE) dargestellt. Beide Parameter zeigen einen charakteristischen, simultanen Anstieg während der Belastungsphase, wobei das Atemminutenvolumen eine deutlich ausgeprägtere Amplitudenzunahme aufweist als die Atemrate. In der Nachbelastungsphase ist eine differenzierte Regenerationskinetik zu beobachten: Das Atemminutenvolumen kehrt rapider zu den Ausgangswerten zurück als die Atemrate, die eine längere Erholungsphase aufweist. Die positionsspezifischen Unterschiede zwischen sitzender und stehender Position erweisen sich als minimal.\n\nVO2, VCO2 & HRAR und VE\n\n\n\n\n\n\n\n\n\n\nAbbildung 1: Zeitlicher Verlauf der gleitenden Mittelwerte des V̇O₂, V̇CO₂ und der HR für die Belastungen im Stehen und Sitzen\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 2: Zeitlicher Verlauf der gleitenden Mittelwerte der Atemrate und Ventilation für die Belastungen im Stehen und Sitzen",
    "crumbs": [
      "Ergebnisse & Statistik",
      "Physiologische Belastungsparameter"
    ]
  },
  {
    "objectID": "Ergebnisse/VO2_Daten.html#messwerte-im-belastungszeitraum-nach-intensitäten",
    "href": "Ergebnisse/VO2_Daten.html#messwerte-im-belastungszeitraum-nach-intensitäten",
    "title": "Phyisologische Belastungsparameter",
    "section": "Messwerte im Belastungszeitraum nach Intensitäten",
    "text": "Messwerte im Belastungszeitraum nach Intensitäten\nAbbildung 3 visualisiert die kardiorespiratorischen Parameter (\\(\\dot{V}O_{2}\\), \\(\\dot{V}CO_{2}\\), HR) im intensitätsabhängigen Vergleich. Die Analyse der Verlaufskurven demonstriert eine systematische Zunahme aller Parameter mit steigender Belastungsintensität, wobei sich Steady-State ähnliche Verläufe für die jeweiligen Intensitätsstufen unterschiedlich stark manifestieren. Die Kinetik der respiratorischen Parameter zeigt dabei charakteristische Anpassungsmuster mit einer initialen exponentiellen Komponente und folgender annähernder Plateaubildung oder einem leichten linearen Anstieg in der höheren Intensitätsstufe. Die Einzeldarstellungen (Abbildung 4, Abbildung 5, Abbildung 6) präsentieren den direkten Vergleich zwischen sitzender (durchgezogene Linien) und stehender Position (gestrichelte Linien) für die jeweiligen Intensitätsstufen. Bei leichter Intensität (Abbildung 4) etabliert sich ein nahezu vollständiges Steady-State auf niedrigem Niveau, während bei moderater Belastung (Abbildung 5) eine kontinuierliche leichte Steigerung aller Parameter zu beobachten ist. Die höchste Intensitätsstufe (Abbildung 6) induziert die ausgeprägteste kardiorespiratorische Reaktion mit den höchsten Werten und einem kontinuierlichen leichten Anstieg über die gesamte Belastungsphase. In allen Intensitätsbereichen zeigt sich eine bemerkenswerte Ähnlichkeit der Kurvenverläufe zwischen den Körperpositionen. Die marginalen Unterschiede zwischen sitzender und stehender Position manifestieren sich primär in geringfügig höheren Werten der Parameter im Stehen, wobei diese Differenzen über die gesamte Belastungsdauer weitgehend konstant bleiben. Die Nachbelastungsphase charakterisiert sich durch eine exponentiell verlaufende Regenerationskinetik, die unabhängig von der Körperposition vergleichbar ist.\n\nAlle IntensitätenLeichtModeratSchwer\n\n\n\n\n\n\n\n\n\n\nAbbildung 3: Zeitlicher Verlauf der gleitenden Mittelwerte des V̇O₂, V̇CO₂ und der HR für alle Intensitäten\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 4: Zeitlicher Verlauf der gleitenden Mittelwerte des V̇O₂, V̇CO₂ und der HR für die leichte Belastungsintensität\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 5: Zeitlicher Verlauf der gleitenden Mittelwerte des V̇O₂, V̇CO₂ und der HR für die moderate Belastungsintensität\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 6: Zeitlicher Verlauf der gleitenden Mittelwerte des V̇O₂, V̇CO₂ und der HR für die schwere Belastungsintensität",
    "crumbs": [
      "Ergebnisse & Statistik",
      "Physiologische Belastungsparameter"
    ]
  },
  {
    "objectID": "Ergebnisse/VO2_Daten.html#o2-cost-of-work",
    "href": "Ergebnisse/VO2_Daten.html#o2-cost-of-work",
    "title": "Phyisologische Belastungsparameter",
    "section": "O2 Cost of Work",
    "text": "O2 Cost of Work\nDie Bestimmung der O2 Cost of Work für die verschiedenen Belastungsintensitäten mittels linearer Regression. Diese analysiert die Beziehung zwischen der Änderung des Netto-Sauerstoffvolumenstroms (\\(\\dot{V}O_{2,net}\\)) und der Summe aus mechanischer und interner Leistungsänderung (ΔPTot). Die Steigung der Regressionslinie beträgt 11,77 [ml∙min-1∙Watt-1] bei einem Bestimmtheitsmaß von R2 = 1,00. Der mittlere O2 Cost of Work aller Probanden liegt bei 11,73 [ml∙min-1∙Watt-1]. Für eine Belastung von 50 Watt ergibt sich ein O2 Cost of Work von 588,69 [ml∙min-1∙Watt-1]. Diese Werte liegen etwas höher als die in der Literatur beschriebenen Referenzwerte für die Fahrradergometrie (8,5-11,0 [ml∙min-1∙Watt-1]), sind aber vergleichbar mit den von Heck et al. (2022) genannten 12 [ml∙min-1∙Watt-1]. Die ermittelten Werte entsprechen am ehesten den von Özyener et al. (2001) beschriebenen Werten für moderate Belastungen (11,52 [ml∙min-1∙Watt-1]) und liegen damit im oberen Bereich der in der Literatur dokumentierten Spanne.\n\n\n\n\n\n\nAbbildung 61: O₂ Cost of Work: Lineare Regression der Beziehung zwischen ΔVO2,net und ΔPTot für alle Probanden",
    "crumbs": [
      "Ergebnisse & Statistik",
      "Physiologische Belastungsparameter"
    ]
  },
  {
    "objectID": "Ergebnisse/EPOC_Daten.html",
    "href": "Ergebnisse/EPOC_Daten.html",
    "title": "Phyisologische Nachbelastungsparameter",
    "section": "",
    "text": "Interaktive Analyse der erfassten Nachbelastungsparameter\nDie folgende Shiny-App zeigt eine interaktive Tabellenübersicht der EPOC-Parameter sämtlicher Belastungsdurchgänge. Die Shiny-App ermöglicht einen flexiblen Wechsel zwischen der Darstellung aller individuellen Testdurchläufe und einer zusammengefassten Übersicht mit Mittelwerten sowie zugehörigen Standardabweichungen. Die Filterfunktion erlaubt eine gezielte Analyse der Daten nach verschiedenen Kombinationen von Intensität (leicht, moderat, schwer) und Bedingung (sitzend, stehend). Für die gefilterten Daten werden sowohl die entsprechenden Mittelwerte als auch die zugehörigen Boxplots mit den statistischen Kennwerten (Mittelwert, Median, erstes Quartil, drittes Quartil, Minimum und Maximum) visualisiert. Zusätzlich besteht die Option, einzelne Probanden in die Analyse ein- oder auszuschließen.  Die dargestellten Daten fungieren als zentrale Grundlage für alle weiteren Analysen der EPOC-basierten Parameter. Eine ausführliche Beschreibung der enthaltenen Parameter sowie deren Berechnungsmethoden findet sich im Kapitel “Energieumsatzberechnung”.\n#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| viewerHeight: 900\n\nlibrary(shiny)\nlibrary(plotly)\nlibrary(minpack.lm)\nlibrary(dplyr)\nlibrary(shinyjs)\nlibrary(shinylive)\nlibrary(DT)\nlibrary(dplyr)\n\nEPOC_data_df_short &lt;- data.frame(\n  `Proband` = c( \"20\", \"23\", \"20\", \"10\", \"01\", \"20\", \"19\", \"15\", \"20\", \"15\", \"19\", \"23\", \"23\", \"22\", \"19\", \"01\", \"23\", \"15\", \"01\", \"20\", \"22\", \"06\", \"06\", \"13\", \"20\", \"06\", \"01\", \"06\", \"22\", \"01\", \"23\", \"15\", \"23\", \"19\", \"01\", \"22\", \"06\", \"19\", \"15\", \"10\", \"19\", \"10\", \"10\", \"06\", \"15\", \"10\", \"13\", \"13\", \"13\", \"10\", \"13\", \"13\", \"22\", \"22\" ),\n  `Nr` = c( 2, 2, 5, 1, 1, 3, 2, 2, 1, 4, 4, 1, 3, 3, 1, 6, 4, 1, 3, 4, 4, 3, 6, 1, 6, 2, 2, 1, 2, 5, 6, 3, 5, 3, 4, 1, 5, 6, 6, 4, 5, 2, 6, 4, 5, 3, 2, 3, 6, 5, 4, 5, 5, 6 ),\n  `Bedingung` = c( \"stehen\", \"sitzen\", \"stehen\", \"stehen\", \"stehen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"stehen\", \"stehen\", \"sitzen\", \"stehen\", \"stehen\", \"stehen\", \"stehen\", \"sitzen\", \"sitzen\", \"sitzen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"sitzen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"sitzen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"stehen\", \"stehen\", \"sitzen\", \"stehen\", \"sitzen\", \"sitzen\", \"sitzen\", \"sitzen\", \"stehen\", \"sitzen\", \"sitzen\", \"stehen\", \"stehen\", \"stehen\", \"sitzen\", \"sitzen\", \"sitzen\", \"stehen\" ),\n  `Intensität` = c( \"leicht\", \"leicht\", \"schwer\", \"leicht\", \"leicht\", \"moderat\", \"leicht\", \"leicht\", \"leicht\", \"moderat\", \"moderat\", \"leicht\", \"moderat\", \"moderat\", \"leicht\", \"schwer\", \"moderat\", \"leicht\", \"moderat\", \"moderat\", \"moderat\", \"moderat\", \"schwer\", \"leicht\", \"schwer\", \"leicht\", \"leicht\", \"leicht\", \"leicht\", \"schwer\", \"schwer\", \"moderat\", \"schwer\", \"moderat\", \"moderat\", \"leicht\", \"schwer\", \"schwer\", \"schwer\", \"moderat\", \"schwer\", \"leicht\", \"schwer\", \"moderat\", \"schwer\", \"moderat\", \"leicht\", \"moderat\", \"schwer\", \"schwer\", \"moderat\", \"schwer\", \"schwer\", \"schwer\" ),\n  `P_Tot` = c( 262.464492841036, 204.303811710974, 332.282195549595, 342.780201343152, 315.087785382455, 297.033969571712, 247.499507416179, 278.360889376064, 297.677841174368, 330.104243714921, 272.461438312168, 199.166908885976, 230.539973534982, 265.6271457606, 255.677641947778, 377.269342767856, 223.28140151954, 317.381745748518, 343.249556933665, 313.722436973434, 278.279940401837, 319.563716705383, 334.696918549422, 328.689199107333, 347.559610294167, 296.008730999173, 315.356007475201, 291.340972880708, 236.218071887388, 376.01429973294, 255.967028389931, 350.889509890097, 248.864184197347, 267.481373216035, 345.621870862815, 245.195285695477, 342.797408580074, 306.49260579391, 400.223676014955, 400.467853364667, 297.602794954409, 364.604429952782, 452.463577903494, 320.346360885814, 363.61916212901, 419.799963753223, 348.476140134227, 357.035734534098, 383.031683804794, 431.054304415492, 375.551234669824, 395.659416230325, 297.955305580942, 291.810409732378 ),\n  `P_Tot_kg` = c( 3.28080616051295, 3.40506352851623, 4.15352744436994, 4.18024635784332, 4.14589191292704, 3.7129246196464, 3.80768472947968, 3.662643281264, 3.7209730146796, 4.34347689098581, 4.19171443557181, 3.31944848143294, 3.84233289224969, 5.53389887001251, 3.93350218381197, 4.96407029957705, 3.72135669199234, 4.17607560195419, 4.51644153860085, 3.92153046216792, 5.79749875837161, 4.37758516034771, 4.58488929519755, 4.56512776537963, 4.34449512867708, 4.05491412327634, 4.14942115098949, 3.99097223124258, 4.92120983098725, 4.94755657543343, 4.26611713983218, 4.61696723539601, 4.14773640328911, 4.11509804947746, 4.54765619556336, 5.10823511865578, 4.69585491205581, 4.71527085836785, 5.26610100019677, 4.88375430932521, 4.57850453776014, 4.44639548722904, 5.51784851101822, 4.3883063135043, 4.78446265959224, 5.11951175308808, 4.83994639075315, 4.95882964630691, 5.31988449728881, 5.25675980994502, 5.21598937041422, 5.49526966986562, 6.20740219960296, 6.07938353609121 ),\n  `VO2_fast [l]` = c( 0.96, 0.607, 1.639, 1.313, 1.514, 1.457, 1.024, 1.461, 1.338, 1.746, 1.315, 0.978, 0.843, 0.866, 1.335, 1.894, 1.03, 1.585, 1.798, 1.599, 0.77, 1.767, 1.72, 1.702, 1.841, 1.516, 1.741, 1.873, 0.976, 2.102, 1.056, 1.844, 1.272, 1.494, 2.065, 0.92, 2.238, 1.9, 2.305, 2.355, 1.633, 2.095, 2.443, 1.965, 2.513, 2.24, 1.977, 2.403, 2.416, 2.896, 2.168, 2.599, 1.323, 1.592 ),\n  `VO2_fast [ml·kg⁻¹]` = c( 12, 10.117, 20.487, 16.012, 19.921, 18.212, 15.754, 19.224, 16.725, 22.974, 20.231, 16.3, 14.05, 18.042, 20.538, 24.921, 17.167, 20.855, 23.658, 19.987, 16.042, 24.205, 23.562, 23.639, 23.012, 20.767, 22.908, 25.658, 20.333, 27.658, 17.6, 24.263, 21.2, 22.985, 27.171, 19.167, 30.658, 29.231, 30.329, 28.72, 25.123, 25.549, 29.793, 26.918, 33.066, 27.317, 27.458, 33.375, 33.556, 35.317, 30.111, 36.097, 27.562, 33.167 ),\n  `VO2_PCr [l]` = c( 0.881326683453614, 0.567338622471479, 1.15500720981244, 1.22451023492507, 1.15307272417817, 1.23315671063888, 0.964418082656628, 1.29422084745126, 1.24444000990949, 1.36171294296438, 1.22784075003155, 0.931329655998791, 0.802097969151435, 0.743007413702281, 1.26437551550286, 1.48599981658848, 0.982361782175615, 1.37204600026034, 1.39505990474171, 1.48790829698463, 0.71704802991477, 1.54792848799749, 1.34214076446633, 1.60102567518758, 1.52556580915843, 1.42768633866492, 1.4931441828057, 1.69904560080879, 0.921586275014691, 1.53638486734834, 0.99509187848723, 1.60320999309521, 1.20125384268526, 1.43295281180786, 1.94654853975589, 0.871225883946091, 1.87236234958019, 1.68759701085331, 1.7407037064195, 2.23416989337053, 1.55385504638769, 2.01836015147108, 1.97142270283645, 1.78994937144439, 2.23229153460507, 2.0972263033792, 1.89052275302542, 2.24751004799388, 2.26820091796984, 2.66918403146221, 2.07867959407358, 2.32095777423171, 1.26672486296133, 1.53034784844715 ),\n  `VO2_PCr [ml·kg⁻¹]` = c( 11.017, 9.456, 14.438, 14.933, 15.172, 15.414, 14.837, 17.029, 15.556, 17.917, 18.89, 15.522, 13.368, 15.479, 19.452, 19.553, 16.373, 18.053, 18.356, 18.599, 14.939, 21.204, 18.385, 22.236, 19.07, 19.557, 19.647, 23.275, 19.2, 20.216, 16.585, 21.095, 20.021, 22.045, 25.612, 18.151, 25.649, 25.963, 22.904, 27.246, 23.905, 24.614, 24.042, 24.52, 29.372, 25.576, 26.257, 31.215, 31.503, 32.551, 28.871, 32.236, 26.39, 31.882 ),\n  `A` = c( 1.96853805933122, 1.400589497508, 2.64956241342874, 2.1604045494099, 2.87441032426097, 2.52056056179226, 1.84393479865602, 2.44400592564149, 2.35721347694176, 2.61200132804692, 2.33907547765617, 1.45623167578483, 1.52610340341567, 1.92442867545319, 2.15729308369842, 3.28672166918179, 1.77547266918707, 2.02161277769517, 2.94946999571547, 2.33826139487561, 1.66377713661249, 2.63576748670546, 2.6898256424256, 2.83783959306843, 2.97463977879735, 2.31361109383699, 2.76500010776138, 2.54284955135887, 1.92514014807071, 3.3831224524058, 1.75779224715248, 2.536340372703, 1.87722056044015, 2.30027466338024, 2.93296787077607, 1.83466639173281, 3.13730149771854, 2.5749084352138, 3.01427080108144, 3.4367410423055, 2.58222111832511, 2.90762708381452, 3.93483763701336, 2.66278308419996, 3.21398643843765, 3.35472612896959, 2.84892292389244, 3.42284186664568, 3.13532276045424, 3.98654223896197, 3.37592659893924, 3.28766170250584, 1.96336563198873, 2.2675550123827 ),\n  `TauA` = c( 29.2545927061767, 25.9920107264182, 37.1074331285121, 36.4737962580314, 31.6012601281756, 34.6933353737479, 33.3206938276531, 35.8686768539494, 34.0630483674912, 40.10183399704, 33.739940633961, 40.3137798230143, 33.15942547369, 27.012411971033, 37.1300689845286, 34.5736549488844, 34.8072866603377, 47.0432664555503, 36.5835239565148, 41.042216324616, 27.7635494258752, 40.2260569315626, 38.3636004846602, 35.9872471526475, 37.1408355941758, 39.3186371598837, 37.7702403007247, 44.1997111713008, 30.405623103155, 37.2737107840821, 36.0427130957334, 43.6136250047317, 40.6547866873092, 38.9752350039479, 42.2375049354042, 30.0736281615138, 42.8062897598595, 44.2796748810132, 45.877887277618, 41.1214641290446, 37.9526301895619, 43.2377208503524, 37.2542992500825, 44.2670311551895, 46.9201530673052, 40.0580018570513, 41.6394955172716, 42.1212198785951, 46.2372897481545, 43.5878225276321, 38.5312556992918, 47.428331077384, 40.419169558325, 42.1143294568839 ),\n  `B` = c( 0.762259540563672, 0.537883018246354, 1.09316491761365, 1.37822185770486, 0.795731063729053, 0.938273823934112, 0.665338286994262, 0.821847270460427, 0.57609247617268, 1.18810164912192, 0.730775735565554, 0.448307134173176, 0.61159596500095, 0.586915330737221, 0.671651825049121, 1.04030359237589, 0.459351426171045, 1.0370431256474, 0.875745662343808, 0.924892078140441, 0.983154891537892, 0.451328584090035, 0.910094626261335, 0.663250982791973, 1.31391742678641, 0.73739419634572, 0.647681269919138, 0.599321855848691, 0.322987737768159, 1.46874332263873, 0.701439923346846, 0.753359701830418, 0.562698672596687, 0.683228892018821, 0.921711971809909, 0.507653219994727, 0.672427145029958, 1.018922918844, 1.28618786527952, 0.915113293042382, 0.823208458737991, 0.666781348748074, 1.4027355837968, 0.557099443619083, 1.02003249636885, 1.20897273431467, 0.500695429626246, 0.506855960337451, 0.819433680519768, 0.992243105750508, 0.62853716767691, 0.757848973803961, 1.17274918165575, 0.786628343185306 ),\n  `TauB` = c( 978.549732238889, 1033.37134749511, 979.866669108872, 376.698914471902, 642.486126510751, 935.868524224663, 912.615095274944, 1068.63734181218, 1216.53830498368, 900.001541606669, 939.839771015159, 1079.67902040564, 1026.07797543504, 1118.65077790939, 955.518078242896, 464.856516087109, 941.671374496368, 797.04612318404, 937.494722939042, 939.563355925206, 257.709297342, 952.160916696907, 454.843319979365, 425.66397977872, 830.450630792729, 409.014761536618, 982.179972933037, 888.618834493456, 285.334132658871, 337.822194038772, 830.202297009071, 958.976358636518, 894.103850882136, 1052.46042079465, 637.152727770957, 1011.72294131538, 1049.83611433569, 541.763773221628, 570.378813714513, 805.171015041267, 931.203505083548, 959.200496054509, 503.503530902522, 870.217310858426, 1046.39502374293, 542.920399342471, 795.469811615834, 886.615196374702, 338.141381536082, 763.618286671796, 658.85499476351, 845.932476284739, 401.292774098876, 626.49406981245 ),\n  `R_squared_off` = c( 0.909975993532463, 0.837803651480948, 0.928785461219863, 0.94514485156876, 0.9386805110079, 0.9304466606446, 0.949202308636193, 0.800448885953364, 0.861734193461481, 0.89074392140538, 0.915726200208509, 0.86794375908347, 0.846006002851208, 0.864357081140998, 0.947386410034897, 0.96869209449461, 0.930828843368122, 0.909618544019569, 0.937082261803184, 0.912572376081985, 0.936246164295534, 0.958716641799683, 0.974323356725068, 0.958463195370036, 0.959878170734752, 0.965537194559105, 0.943003670627289, 0.967315861778594, 0.948160006922003, 0.974851225749369, 0.929205964904726, 0.897566320213485, 0.950361690002179, 0.911379764665711, 0.966717779448989, 0.922618306009658, 0.954756593441938, 0.975207568614983, 0.970935741347775, 0.949752719051438, 0.95018957051212, 0.960892510659637, 0.971760751278341, 0.967672233674131, 0.922266293215431, 0.970960636012716, 0.962258679351103, 0.953582930773798, 0.965871305732817, 0.970935608195162, 0.965619411114026, 0.932952536370353, 0.96873257727345, 0.941307071143409 ),\n  `Masse` = c( 80, 60, 80, 82, 76, 80, 65, 76, 80, 76, 65, 60, 60, 48, 65, 76, 60, 76, 76, 80, 48, 73, 73, 72, 80, 73, 76, 73, 48, 76, 60, 76, 60, 65, 76, 48, 73, 65, 76, 82, 65, 82, 82, 73, 76, 82, 72, 72, 72, 82, 72, 72, 48, 48 ),\n  `aktive_Muskelmasse` = c( 25.2, 13.26, 25.2, 25.83, 23.94, 25.2, 17.745, 23.94, 21.84, 23.94, 20.475, 15.3, 13.26, 12.24, 20.475, 23.94, 15.3, 20.748, 20.748, 21.84, 10.608, 22.995, 19.929, 22.68, 21.84, 19.929, 20.748, 22.995, 12.24, 20.748, 13.26, 20.748, 15.3, 17.745, 23.94, 10.608, 22.995, 20.475, 20.748, 25.83, 17.745, 22.386, 22.386, 19.929, 23.94, 22.386, 19.656, 22.68, 22.68, 25.83, 19.656, 19.656, 10.608, 12.24 ),\n  `VO2_Referenz` = c( 0.852692307692308, 0.896472222222222, 0.852692307692308, 0.9478, 0.997235294117647, 0.852692307692308, 0.769533333333333, 0.898278038452436, 0.852692307692308, 0.898278038452436, 0.769533333333333, 0.896472222222222, 0.896472222222222, 0.772045454545454, 0.769533333333333, 0.997235294117647, 0.896472222222222, 0.898278038452436, 0.997235294117647, 0.852692307692308, 0.772045454545454, 0.934166666666667, 0.934166666666667, 0.999544642857143, 0.852692307692308, 0.934166666666667, 0.997235294117647, 0.934166666666667, 0.772045454545454, 0.997235294117647, 0.896472222222222, 0.898278038452436, 0.896472222222222, 0.769533333333333, 0.997235294117647, 0.772045454545454, 0.934166666666667, 0.769533333333333, 0.898278038452436, 0.9478, 0.769533333333333, 0.9478, 0.9478, 0.934166666666667, 0.898278038452436, 0.9478, 0.999544642857143, 0.999544642857143, 0.999544642857143, 0.9478, 0.999544642857143, 0.999544642857143, 0.772045454545454, 0.772045454545454 ),\n  `VO2_Ruhe` = c( 0.415642091286353, 0.320312513138994, 0.415642091286353, 0.398544621667437, 0.409079599507683, 0.415642091286353, 0.352584633817119, 0.398278038452436, 0.415642091286353, 0.398278038452436, 0.352584633817119, 0.320312513138994, 0.320312513138994, 0.293734941358178, 0.352584633817119, 0.409079599507683, 0.320312513138994, 0.398278038452436, 0.409079599507683, 0.415642091286353, 0.293734941358178, 0.390487656996456, 0.390487656996456, 0.378852606093004, 0.415642091286353, 0.390487656996456, 0.409079599507683, 0.390487656996456, 0.293734941358178, 0.409079599507683, 0.320312513138994, 0.398278038452436, 0.320312513138994, 0.352584633817119, 0.409079599507683, 0.293734941358178, 0.390487656996456, 0.352584633817119, 0.398278038452436, 0.398544621667437, 0.352584633817119, 0.398544621667437, 0.398544621667437, 0.390487656996456, 0.398278038452436, 0.398544621667437, 0.378852606093004, 0.378852606093004, 0.378852606093004, 0.398544621667437, 0.378852606093004, 0.378852606093004, 0.293734941358178, 0.293734941358178 ),\n  `VO2_gross_SS` = c( 3.343, 2.589, 4.515, 4.49, 4.413, 3.87, 3.107, 3.864, 3.632, 4.499, 3.667, 2.762, 2.871, 3.234, 3.452, 5.227, 2.969, 3.985, 4.576, 3.996, 3.415, 4.042, 4.482, 4.297, 4.676, 3.884, 4.121, 3.899, 2.917, 5.395, 3.162, 4.362, 3.19, 3.415, 4.685, 3.048, 4.404, 4.049, 4.97, 5.082, 3.866, 4.475, 6.024, 4.095, 4.804, 5.224, 4.185, 4.659, 4.975, 5.556, 4.504, 4.918, 3.74, 3.46 ),\n  `VO2_net_SS` = c( 2.99, 2.211, 4.162, 4.042, 4.004, 3.517, 2.837, 3.466, 3.279, 4.101, 3.397, 2.384, 2.493, 2.962, 3.182, 4.818, 2.591, 3.587, 4.167, 3.643, 3.143, 3.652, 4.092, 3.858, 4.323, 3.494, 3.712, 3.509, 2.645, 4.986, 2.784, 3.964, 2.812, 3.145, 4.276, 2.776, 4.014, 3.779, 4.572, 4.634, 3.596, 4.027, 5.576, 3.705, 4.406, 4.776, 3.746, 4.22, 4.536, 5.108, 4.065, 4.479, 3.468, 3.188 ),\n  `O2_Speicher` = c( 0.078673316546386, 0.0396613775285205, 0.483992790187561, 0.0884897650749257, 0.360927275821829, 0.223843289361119, 0.059581917343372, 0.166779152548743, 0.0935599900905114, 0.384287057035625, 0.0871592499684474, 0.0466703440012086, 0.0409020308485652, 0.122992586297719, 0.0706244844971358, 0.408000183411516, 0.0476382178243846, 0.212953999739657, 0.402940095258288, 0.111091703015365, 0.05295197008523, 0.219071512002509, 0.377859235533666, 0.100974324812419, 0.315434190841573, 0.0883136613350763, 0.247855817194301, 0.173954399191212, 0.0544137249853085, 0.565615132651657, 0.0609081215127698, 0.240790006904785, 0.0707461573147371, 0.0610471881921419, 0.118451460244106, 0.048774116053909, 0.365637650419813, 0.212402989146693, 0.564296293580497, 0.120830106629472, 0.0791449536123128, 0.0766398485289226, 0.471577297163552, 0.175050628555612, 0.28070846539493, 0.142773696620804, 0.0864772469745804, 0.155489952006121, 0.14779908203016, 0.226815968537793, 0.0893204059264171, 0.278042225768293, 0.0562751370386684, 0.0616521515528528 ),\n  `WPCR [kJ]` = c( 20.0850465423653, 12.6965495989553, 34.2902015925505, 27.4821699879124, 31.6802161112372, 30.4984776431253, 21.4286379386612, 30.5740225524332, 28.0038277225803, 36.5319284929076, 27.5247587171684, 20.4747667848941, 17.6492367465268, 18.1300981323392, 27.9363638122276, 39.6317447397119, 21.553565910973, 33.1688499686331, 37.6326230455095, 33.4702406668707, 16.1103549922823, 36.9785204851612, 35.9897193229997, 35.6181567424239, 38.5319530264023, 31.7266183846898, 36.4233486561016, 39.1990072033563, 20.4150867446054, 43.9800095256712, 22.096322000744, 38.5802191673912, 26.6171749722825, 31.2682379997246, 43.2056488523188, 19.2432269438889, 46.8380509157804, 39.7650180588991, 48.2303759489023, 49.2890388398866, 34.1798598741031, 43.8466552246499, 51.1255727272009, 41.1103482929047, 52.5942699027425, 46.8685291216685, 41.3733921483723, 50.2831812671132, 50.5602945386413, 60.6033336725209, 45.3671114664453, 54.3825961144162, 27.6772885508452, 33.3060165093306 ),\n  `WPCR_corrected_calc` = c( 18.4426421779503, 11.8721280138382, 24.1696808725351, 25.6241011760421, 24.1291998261524, 25.8050373268292, 20.1814127976726, 27.082865453765, 26.041151647366, 28.4952050444725, 25.6937955351603, 19.4890043814307, 16.7847021024629, 15.5481731391339, 26.4583220374129, 31.0960321619306, 20.5569026538069, 28.7114346014479, 29.1930235666251, 31.1359690227005, 15.0049470739965, 32.3919515398355, 28.0856376372225, 33.5030632789753, 31.9239901224492, 29.8757643229022, 31.245535169392, 35.5542282425247, 19.2851143909574, 32.1503897341314, 20.8232926492238, 33.5487723155105, 25.1374379120318, 29.9859705398912, 40.7334747429318, 18.2312728474559, 39.181054527315, 35.3146550491163, 36.4259657605345, 46.7522391886717, 32.5159707007087, 42.2362045296838, 41.2539914795555, 37.4564805468453, 46.7129326531457, 43.8865576245131, 39.5610791298099, 47.0313952643199, 47.4643724094369, 55.8553450423781, 43.4984491855838, 48.5683623835727, 26.5074844823288, 32.024059076605 ),\n  `PCr_used` = c( 7.60356602256785, 9.30207354098021, 10.1243191506377, 10.251658470869, 10.4995638504036, 10.7241466350026, 11.8159946024478, 11.878944032617, 12.2557560826791, 12.5974495577602, 13.2464591643906, 13.2693823244692, 13.2916067528663, 13.3032190777621, 13.5330965585286, 13.5671304414631, 14.2200536921488, 14.4155474091979, 14.735389883485, 14.8512236193746, 14.852799787393, 14.8695954062443, 14.9153609880197, 15.306480112249, 15.3487108203284, 15.6581585926993, 15.6878783597047, 16.0210769482657, 16.3695041116711, 16.4000431343536, 16.6639295262184, 17.0685191813564, 17.5252953239563, 17.650185581983, 17.7247369160029, 17.8557543111729, 18.0806586967894, 18.3500049998374, 18.5810316647284, 19.1061622566461, 19.3934782562727, 19.6544488496343, 19.7595804944576, 19.8397827687998, 20.705443096442, 20.8030282658488, 21.0222964425904, 21.8322115277183, 22.033201708123, 23.0062302363358, 23.3600668813323, 26.2883571085472, 26.4466088815684, 27.3276401508419 )\n  , check.names = FALSE\n)\n\n# Spaltennamen ändern\nnames(EPOC_data_df_short)[names(EPOC_data_df_short) == \"R_squared_off\"] &lt;- \"R2_off\"\nnames(EPOC_data_df_short)[names(EPOC_data_df_short) == \"aktive_Muskelmasse\"] &lt;- \"MM_akt [kg]\"\nnames(EPOC_data_df_short)[names(EPOC_data_df_short) == \"WPCR_corrected_calc\"] &lt;- \"WPCR_corrected [kJ]\"\nnames(EPOC_data_df_short)[names(EPOC_data_df_short) == \"P_Tot\"] &lt;- \"P_Tot [W]\"\nnames(EPOC_data_df_short)[names(EPOC_data_df_short) == \"P_Tot_kg\"] &lt;- \"P_Tot_kg [W·kg⁻¹]\"\nnames(EPOC_data_df_short)[names(EPOC_data_df_short) == \"A\"] &lt;- \"A [l·min⁻¹]\"\nnames(EPOC_data_df_short)[names(EPOC_data_df_short) == \"TauA\"] &lt;- \"TauA [s]\"\nnames(EPOC_data_df_short)[names(EPOC_data_df_short) == \"B\"] &lt;- \"B [l·min⁻¹]\"\nnames(EPOC_data_df_short)[names(EPOC_data_df_short) == \"TauB\"] &lt;- \"TauB [s]\"\nnames(EPOC_data_df_short)[names(EPOC_data_df_short) == \"VO2_Referenz\"] &lt;- \"VO2_Referenz [l·min⁻¹]\"\nnames(EPOC_data_df_short)[names(EPOC_data_df_short) == \"Masse\"] &lt;- \"Masse [kg]\"\nnames(EPOC_data_df_short)[names(EPOC_data_df_short) == \"VO2_Ruhe\"] &lt;- \"VO2_Ruhe [l·min⁻¹]\"\nnames(EPOC_data_df_short)[names(EPOC_data_df_short) == \"VO2_gross_SS\"] &lt;- \"VO2_gross_SS [l·min⁻¹]\"\nnames(EPOC_data_df_short)[names(EPOC_data_df_short) == \"VO2_net_SS\"] &lt;- \"VO2_net_SS [l·min⁻¹]\"\nnames(EPOC_data_df_short)[names(EPOC_data_df_short) == \"O2_Speicher\"] &lt;- \"O2_Speicher [l]\"\nnames(EPOC_data_df_short)[names(EPOC_data_df_short) == \"PCr_used\"] &lt;- \"PCr_used [mmol·kg⁻¹]\"\nnames(EPOC_data_df_short)[names(EPOC_data_df_short) == \"VO2_fast [l]\"] &lt;- \"EPOC_fast [l]\"\nnames(EPOC_data_df_short)[names(EPOC_data_df_short) == \"VO2_fast [ml·kg⁻¹]\"] &lt;- \"EPOC_fast [ml·kg⁻¹]\"\nnames(EPOC_data_df_short)[names(EPOC_data_df_short) == \"VO2_PCr [l]\"] &lt;- \"EPOC_PCr [l]\"\nnames(EPOC_data_df_short)[names(EPOC_data_df_short) == \"VO2_PCr [ml·kg⁻¹]\"] &lt;- \"EPOC_PCr [ml·kg⁻¹]\"\n\n# UI Definition\nui &lt;- fluidPage(\n  titlePanel(\"Interaktive Übersicht der EPOC-Parameter\"),\n  \n  sidebarLayout(\n    sidebarPanel(\n      width = 2,\n      style = \"height: 90vh; overflow-y: auto;\",\n      radioButtons(\"viewType\", \"Datenansicht:\",\n                   choices = c(\"Einzelwerte\" = \"individual\",\n                               \"Mittelwerte & BP\" = \"means\"),\n                   selected = \"means\"),\n      checkboxGroupInput(\"selectedBedingung\", \"Bedingungen:\",\n                         choices = unique(EPOC_data_df_short$Bedingung),\n                         selected = unique(EPOC_data_df_short$Bedingung)),\n      checkboxGroupInput(\"selectedIntensität\", \"Intensitäten:\",\n                         choices = unique(EPOC_data_df_short$Intensität),\n                         selected = unique(EPOC_data_df_short$Intensität)),\n      radioButtons(\"selectedVariable\", \"Variable für Boxplot:\",\n                   choices = c(\n                     \"A [l·min⁻¹]\" = \"A [l·min⁻¹]\",\n                     \"TauA [s]\" = \"TauA [s]\",            \n                     \"B [l·min⁻¹]\" = \"B [l·min⁻¹]\",\n                     \"TauB [s]\" = \"TauB [s]\",            \n                     \"R² off\" = \"R2_off\",\n                     \"O2 Speicher [l]\" = \"O2_Speicher [l]\",\n                     \"EPOC fast [l]\" = \"EPOC_fast [l]\",\n                     \"EPOC fast [ml·kg⁻¹]\" = \"EPOC_fast [ml·kg⁻¹]\",\n                     \"EPOC PCr [l]\" = \"EPOC_PCr [l]\",\n                     \"EPOC PCr [ml·kg⁻¹]\" = \"EPOC_PCr [ml·kg⁻¹]\",\n                     \"WPCR [kJ]\" = \"WPCR [kJ]\",\n                     \"WPCR corrected [kJ]\" = \"WPCR_corrected [kJ]\",\n                     \"PCr used [mmol·kg⁻¹]\" = \"PCr_used [mmol·kg⁻¹]\"\n                   ),\n                   selected = \"EPOC_fast [l]\"),\n      checkboxGroupInput(\"selectedProband\", \"Probanden:\",\n                         choices = sort(unique(EPOC_data_df_short$Proband)),\n                         selected = sort(unique(EPOC_data_df_short$Proband)))\n    ),\n    mainPanel(\n      width = 10,\n      conditionalPanel(\n        condition = \"input.viewType == 'means'\",\n        plotlyOutput(\"boxplot\")\n      ),\n      DTOutput(\"epocTable\")\n    )\n  )\n)\n\n# Server-Logik\nserver &lt;- function(input, output, session) {\n  \n  # Hilfsfunktion für Nachkommastellen\n  get_digits_for_column &lt;- function(col_name) {\n    if(col_name %in% c(\"VO2_gross_SS [l·min⁻¹]\", \"EPOC_fast [l]\", \"VO2_net_SS [l·min⁻¹]\", \n                       \"O2_Speicher [l]\", \"VO2_Referenz [l·min⁻¹]\", \"VO2_Ruhe [l·min⁻¹]\",\n                       \"EPOC_fast [ml·kg⁻¹]\", \"EPOC_PCr [l]\", \"EPOC_PCr [ml·kg⁻¹]\")) {\n      return(3)\n    } else if(col_name %in% c(\"P_Tot_kg [W·kg⁻¹]\", \"A [l·min⁻¹]\", \"B [l·min⁻¹]\", \n                              \"MM_akt [kg]\", \"R2_off\", \"WPCR [kJ]\" , \"WPCR_corrected [kJ]\", \n                              \"PCr_used [mmol·kg⁻¹]\")) {\n      return(2)\n    } else if(col_name %in% c(\"P_Tot [W]\", \"TauA [s]\", \"TauB [s]\")) {\n      return(1)\n    } else if(col_name %in% c(\"Nr\", \"Masse [kg]\")) {\n      return(0)\n    }\n    return(2)\n  }\n  \n  # Reaktive gefilterte Daten für Tabelle\n  filtered_data &lt;- reactive({\n    data &lt;- EPOC_data_df_short\n    \n    if (length(input$selectedProband) &gt; 0) {\n      data &lt;- data %&gt;% filter(Proband %in% input$selectedProband)\n    }\n    \n    if (length(input$selectedBedingung) &gt; 0) {\n      data &lt;- data %&gt;% filter(Bedingung %in% input$selectedBedingung)\n    }\n    \n    if (length(input$selectedIntensität) &gt; 0) {\n      data &lt;- data %&gt;% filter(Intensität %in% input$selectedIntensität)\n    }\n    \n    if (input$viewType == \"means\") {\n      # Bestimme Gruppierungsvariablen basierend auf Auswahl\n      group_vars &lt;- c()\n      if (length(input$selectedBedingung) &gt; 0 && length(input$selectedIntensität) == 0) {\n        group_vars &lt;- \"Bedingung\"\n      } else if (length(input$selectedBedingung) == 0 && length(input$selectedIntensität) &gt; 0) {\n        group_vars &lt;- \"Intensität\"\n      } else if (length(input$selectedBedingung) &gt; 0 && length(input$selectedIntensität) &gt; 0) {\n        group_vars &lt;- c(\"Bedingung\", \"Intensität\")\n      }\n      \n      if (length(group_vars) == 0) {\n        grouped_data &lt;- data %&gt;%\n          summarise(across(where(is.numeric), \n                           list(mean = ~mean(., na.rm = TRUE),\n                                sd = ~sd(., na.rm = TRUE)))) %&gt;%\n          mutate(Gruppe = \"Gesamt\")\n        group_vars &lt;- \"Gruppe\"\n      } else {\n        grouped_data &lt;- data %&gt;%\n          group_by(across(all_of(group_vars))) %&gt;%\n          summarise(across(where(is.numeric), \n                           list(mean = ~mean(., na.rm = TRUE),\n                                sd = ~sd(., na.rm = TRUE)))) %&gt;%\n          ungroup()\n      }\n      \n      result_data &lt;- grouped_data %&gt;%\n        select(all_of(group_vars))\n      \n      numeric_cols &lt;- names(data)[sapply(data, is.numeric)]\n      for(col in numeric_cols) {\n        mean_col &lt;- paste0(col, \"_mean\")\n        sd_col &lt;- paste0(col, \"_sd\")\n        \n        if(mean_col %in% names(grouped_data) && sd_col %in% names(grouped_data)) {\n          digits &lt;- get_digits_for_column(col)\n          result_data[[col]] &lt;- paste0(\n            format(round(grouped_data[[mean_col]], digits), nsmall = digits),\n            \" ± \",\n            format(round(grouped_data[[sd_col]], digits), nsmall = digits)\n          )\n        }\n      }\n      \n      return(result_data)\n    }\n    \n    return(data)\n  })\n  \n  # Reaktive gefilterte Daten für Plots\n  filtered_data_plots &lt;- reactive({\n    data &lt;- EPOC_data_df_short %&gt;%\n      filter(Proband %in% input$selectedProband)\n    \n    if (length(input$selectedBedingung) &gt; 0) {\n      data &lt;- data %&gt;% filter(Bedingung %in% input$selectedBedingung)\n    }\n    \n    if (length(input$selectedIntensität) &gt; 0) {\n      data &lt;- data %&gt;% filter(Intensität %in% input$selectedIntensität)\n    }\n    \n    # Gruppierung basierend auf Auswahl\n    if (length(input$selectedBedingung) &gt; 0 && length(input$selectedIntensität) == 0) {\n      data$Gruppe &lt;- data$Bedingung\n    } else if (length(input$selectedBedingung) == 0 && length(input$selectedIntensität) &gt; 0) {\n      data$Gruppe &lt;- data$Intensität\n    } else {\n      data$Gruppe &lt;- paste(data$Intensität, data$Bedingung, sep = \"_\")\n    }\n    \n    return(data)\n  })\n  \n  # Color Map\n  color_map &lt;- reactive({\n    c(\n      \"leicht_sitzen\" = \"#42BA97\", \"leicht_stehen\" = \"#62A39F\",\n      \"moderat_sitzen\" = \"#1CADE4\", \"moderat_stehen\" = \"#2683C6\",\n      \"schwer_sitzen\" = \"#EF5350\", \"schwer_stehen\" = \"#C8133B\"\n    )\n  })\n  \n  # Tabellen-Output\n  output$epocTable &lt;- renderDT({\n    data &lt;- filtered_data()\n    \n    if (input$viewType == \"individual\") {\n      columnDefs &lt;- lapply(seq_len(ncol(data)), function(i) {\n        list(\n          targets = i-1,\n          width = paste0(max(\n            nchar(names(data)[i]),\n            max(nchar(as.character(data[[i]])))\n          ) * 10, \"px\"),\n          className = \"dt-nowrap\"\n        )\n      })\n      \n      datatable(data,\n                options = list(\n                  pageLength = 10,\n                  scrollX = TRUE,\n                  scrollCollapse = TRUE,\n                  autoWidth = FALSE,\n                  columnDefs = columnDefs\n                )\n      ) %&gt;%\n        formatRound(\n          columns = c(\"VO2_gross_SS [l·min⁻¹]\", \"EPOC_fast [l]\", \"VO2_net_SS [l·min⁻¹]\", \n                      \"O2_Speicher [l]\", \"VO2_Referenz [l·min⁻¹]\", \"VO2_Ruhe [l·min⁻¹]\",\n                      \"EPOC_fast [ml·kg⁻¹]\", \"EPOC_PCr [l]\", \"EPOC_PCr [ml·kg⁻¹]\"),\n          digits = 3\n        ) %&gt;%\n        formatRound(\n          columns = c(\"P_Tot_kg [W·kg⁻¹]\", \"A [l·min⁻¹]\", \"B [l·min⁻¹]\", \n                      \"MM_akt [kg]\", \"R2_off\", \"WPCR_corrected [kJ]\", \n                      \"PCr_used [mmol·kg⁻¹]\"),\n          digits = 2\n        ) %&gt;%\n        formatRound(\n          columns = c(\"P_Tot [W]\", \"TauA [s]\", \"TauB [s]\"),\n          digits = 1\n        ) %&gt;%\n        formatRound(\n          columns = c(\"Nr\", \"Masse [kg]\"),\n          digits = 0\n        )\n    } else {\n      columnDefs &lt;- lapply(seq_len(ncol(data)), function(i) {\n        list(\n          targets = i-1,\n          width = paste0(max(\n            nchar(names(data)[i]),\n            max(nchar(as.character(data[[i]])))\n          ) * 10, \"px\"),\n          className = \"dt-nowrap\"\n        )\n      })\n      \n      datatable(data,\n                options = list(\n                  pageLength = 10,\n                  scrollX = TRUE,\n                  scrollCollapse = TRUE,\n                  autoWidth = FALSE,\n                  columnDefs = columnDefs\n                ),\n                escape = FALSE\n      )\n    }\n  })\n  \n  # Boxplot\n  output$boxplot &lt;- renderPlotly({\n    data &lt;- filtered_data_plots()\n    color_map_values &lt;- color_map()\n    \n    # Farben anpassen basierend auf Gruppierung\n    if (length(input$selectedBedingung) &gt; 0 && length(input$selectedIntensität) == 0) {\n      colors &lt;- c(\"sitzen\" = \"#42BA97\", \"stehen\" = \"#62A39F\")\n    } else if (length(input$selectedBedingung) == 0 && length(input$selectedIntensität) &gt; 0) {\n      colors &lt;- c(\"leicht\" = \"#42BA97\", \"moderat\" = \"#1CADE4\", \"schwer\" = \"#EF5350\")\n    } else {\n      colors &lt;- color_map_values\n    }\n    \n    p &lt;- plot_ly(data = data, \n                 x = ~Gruppe, \n                 y = as.formula(paste0(\"~`\", input$selectedVariable, \"`\")),\n                 type = \"box\",\n                 color = ~Gruppe,\n                 colors = colors[unique(data$Gruppe)],\n                 opacity = 0.8,\n                 line = list(color = \"black\", width = 0.9),\n                 boxpoints = \"outliers\",\n                 pointpos = 0,\n                 marker = list(color = \"black\", size = 4),\n                 boxmean = TRUE,\n                 hoverlabel = list(bgcolor = \"#F5F5F5\"),\n                 showlegend = FALSE\n    ) %&gt;%\n      layout(title = paste('Boxplot:', input$selectedVariable),\n             margin = list(t = 40),\n             xaxis = list(title = \"Gruppe\"),\n             yaxis = list(title = input$selectedVariable))\n    \n    return(p)\n  })\n}\n\n# App starten\nshinyApp(ui = ui, server = server)\n\n\nDeskriptive Analyse der EPOC-Modellparameter und WPCr-Komponenten\nDie folgenden Tabellen präsentieren eine umfassende deskriptive Analyse der EPOC-Modellparameter und der WPCr-Komponenten. Die Werte werden als Mittelwert ± Standardabweichung dargestellt, ergänzt durch minimale und maximale Messwerte (Tabelle 1). Die weiteren Tabellen differenzieren die Daten nach den experimentellen Bedingungen (Sitzen vs. Stehen; Tabelle 2), den Belastungsintensitäten (leicht, moderat, schwer; Tabelle 3) sowie nach der Kombination beider Faktoren (Tabelle 4). Die analysierten Parameter umfassen die Amplituden (A, B) und Zeitkonstanten (τA, τB) der schnellen und langsamen EPOC-Komponenten, den Sauerstoffvolumenstrom während der Referenzphase (\\(\\dot{V}O_{2,Referenz}\\)) sowie das Bestimmtheitsmaß (Roff2) der EPOC-Modellanpassung. Zusätzlich werden die absolute und körpermassennormierte EPOC für die gesamte PCr-Rephosphorylierung (EPOCfast) sowie die um den Sauerstoffspeicher korrigierte EPOC (EPOCPCr) dargestellt. Ergänzend werden der Sauerstoffspeicher (O2-Speicher), die berechnete anaerobe-alaktazide Energiekomponente (WPCr), deren um die O2-Speicher korrigierter Wert (WPCr,corrected) und die umgesetzte PCr-Menge pro kg Muskelfeuchmasse (PCrused) ausgewiesen.\n\nGesamtdatenBedingungenIntensitätenBedingungen & Intensitäten\n\n\n\n\n\n\nTabelle 1: Gesamtdaten: Parameter der EPOC-Modellanpassung und der WPCr: MW ± SD, Min & Max\n\n\n\nParameterMittelwert ± SDMinMaxA [l·min⁻¹]2.53 ± 0.621.363.94τA [min]0.63 ± 0.090.410.78B [l·min⁻¹]0.85 ± 0.270.321.47τB [min]10.93 ± 2.624.3014.75V̇O2,Referenz [l·min⁻¹]0.896 ± 0.0810.7701.000R2,off0.93 ± 0.040.780.98EPOCfast [l]1.610 ± 0.5280.5622.821EPOCfast [ml·kg⁻¹]22.74 ± 6.159.3734.97EPOCPCr [l]1.427 ± 0.4710.5222.594EPOCPCr [ml·kg⁻¹]20.23 ± 5.748.7131.64O2-Speicher [l]0.184 ± 0.1440.0400.566WPCr [kJ]33.70 ± 11.0511.7659.04WPCr,corrected [kJ]29.86 ± 9.8510.9354.29PCrused [mmol·kg⁻¹]15.88 ± 4.497.0427.01A [l·min⁻¹]: Amplitude der schnellen EPOC-Komponente; τA [min]: Zeitkonstante der schnellen EPOC-Komponente; B [l·min⁻¹]: Amplitude der langsamen EPOC-Komponente; τB [min]: Zeitkonstante der langsamen EPOC-Komponente; V̇O2,Referenz [l·min⁻¹]: Sauerstoffvolumenstrom während der Referenzphase; R2,off: Bestimmtheitsmaß der EPOC-Modellanpassungen; EPOCfast [l]: EPOC die der Rephosphorylierung von PCr zuzuordnen ist; EPOCfast [ml·kg⁻¹]: auf Körpermasse normierte EPOC die der Rephosphorylierung von PCr zuzuordnen ist; EPOCPCr [l]: EPOC die der Rephosphorylierung von PCr zuzuordnen ist, abzüglich der Sauerstoffspeicher; EPOCPCr [ml·kg⁻¹]: auf Körpermasse normierte EPOC die der Rephosphorylierung von PCr zuzuordnen ist, abzüglich der Sauerstoffspeicher; O2-Speicher [l]: Sauerstoffspeicher; WPCr [kJ]: Berechnete anaerobe- alaktazide Energiekomponente; WPCr,corrected [kJ]: Berechnete anaerobe- alaktazide Energiekomponente abzüglich der Sauerstoffspeicher; PCrused [mmol·kg⁻¹]: Umgesetzte PCr-Menge pro kg Muskelfeuchmasse \n\n\n\n\n\n\n\n\n\n\n\nTabelle 2: Parameter der EPOC-Modellanpassung und der WPCr: MW ± SD nach Bedingungen\n\n\n\nParameterSitzen (MW ± SD)Stehen (MW ± SD)A [l·min⁻¹]2.50 ± 0.662.56 ± 0.60τA [min]37.50 ± 5.3537.58 ± 5.29B [l·min⁻¹]0.89 ± 0.280.82 ± 0.26τB [min]651.23 ± 161.27660.97 ± 155.86V̇O2,Referenz [l·min⁻¹]0.896 ± 0.0820.896 ± 0.082R2,off0.93 ± 0.040.93 ± 0.04EPOCfast [l]1.594 ± 0.5331.626 ± 0.533EPOCfast [ml·kg⁻¹]22.38 ± 5.9623.09 ± 6.43EPOCPCr [l]1.408 ± 0.4491.446 ± 0.499EPOCPCr [ml·kg⁻¹]19.86 ± 5.1920.61 ± 6.31O2-Speicher [l]0.187 ± 0.1640.181 ± 0.125WPCr [kJ]33.36 ± 11.1634.04 ± 11.15WPCr,corrected [kJ]29.46 ± 9.3930.25 ± 10.45PCrused [mmol·kg⁻¹]16.68 ± 4.2115.08 ± 4.69A [l·min⁻¹]: Amplitude der schnellen EPOC-Komponente; τA [min]: Zeitkonstante der schnellen EPOC-Komponente; B [l·min⁻¹]: Amplitude der langsamen EPOC-Komponente; τB [min]: Zeitkonstante der langsamen EPOC-Komponente; V̇O2,Referenz [l·min⁻¹]: Sauerstoffvolumenstrom während der Referenzphase; R2,off: Bestimmtheitsmaß der EPOC-Modellanpassungen; EPOCfast [l]: EPOC die der Rephosphorylierung von PCr zuzuordnen ist; EPOCfast [ml·kg⁻¹]: auf Körpermasse normierte EPOC die der Rephosphorylierung von PCr zuzuordnen ist; EPOCPCr [l]: EPOC die der Rephosphorylierung von PCr zuzuordnen ist, abzüglich der Sauerstoffspeicher; EPOCPCr [ml·kg⁻¹]: auf Körpermasse normierte EPOC die der Rephosphorylierung von PCr zuzuordnen ist, abzüglich der Sauerstoffspeicher; O2-Speicher [l]: Sauerstoffspeicher; WPCr [kJ]: Berechnete anaerobe- alaktazide Energiekomponente; WPCr,corrected [kJ]: Berechnete anaerobe- alaktazide Energiekomponente abzüglich der Sauerstoffspeicher; PCrused [mmol·kg⁻¹]: Umgesetzte PCr-Menge pro kg Muskelfeuchmasse \n\n\n\n\n\n\n\n\n\n\n\nTabelle 3: Parameter der EPOC-Modellanpassung und der WPCr: MW ± SD nach Intensitäten\n\n\n\nParameterLeicht (MW ± SD)Moderat (MW ± SD)Schwer (MW ± SD)A [l·min⁻¹]2.22 ± 0.482.53 ± 0.612.84 ± 0.64τA [min]35.48 ± 5.5536.85 ± 5.0340.28 ± 4.19B [l·min⁻¹]0.72 ± 0.240.82 ± 0.241.02 ± 0.26τB [min]669.28 ± 174.71696.84 ± 130.54602.18 ± 156.26V̇O2,Referenz [l·min⁻¹]0.896 ± 0.0830.896 ± 0.0830.896 ± 0.083R2,off0.92 ± 0.050.92 ± 0.040.95 ± 0.02EPOCfast [l]1.332 ± 0.4051.585 ± 0.5211.915 ± 0.503EPOCfast [ml·kg⁻¹]18.87 ± 4.6222.15 ± 5.4027.20 ± 5.49EPOCPCr [l]1.215 ± 0.3771.429 ± 0.5011.636 ± 0.451EPOCPCr [ml·kg⁻¹]17.26 ± 4.4220.00 ± 5.4223.45 ± 5.77O2-Speicher [l]0.116 ± 0.0850.155 ± 0.1050.279 ± 0.177WPCr [kJ]27.87 ± 8.4833.16 ± 10.9140.07 ± 10.52WPCr,corrected [kJ]25.43 ± 7.8829.91 ± 10.4834.23 ± 9.45PCrused [mmol·kg⁻¹]13.44 ± 3.5515.61 ± 3.7318.59 ± 4.70A [l·min⁻¹]: Amplitude der schnellen EPOC-Komponente; τA [min]: Zeitkonstante der schnellen EPOC-Komponente; B [l·min⁻¹]: Amplitude der langsamen EPOC-Komponente; τB [min]: Zeitkonstante der langsamen EPOC-Komponente; V̇O2,Referenz [l·min⁻¹]: Sauerstoffvolumenstrom während der Referenzphase; R2,off: Bestimmtheitsmaß der EPOC-Modellanpassungen; EPOCfast [l]: EPOC die der Rephosphorylierung von PCr zuzuordnen ist; EPOCfast [ml·kg⁻¹]: auf Körpermasse normierte EPOC die der Rephosphorylierung von PCr zuzuordnen ist; EPOCPCr [l]: EPOC die der Rephosphorylierung von PCr zuzuordnen ist, abzüglich der Sauerstoffspeicher; EPOCPCr [ml·kg⁻¹]: auf Körpermasse normierte EPOC die der Rephosphorylierung von PCr zuzuordnen ist, abzüglich der Sauerstoffspeicher; O2-Speicher [l]: Sauerstoffspeicher; WPCr [kJ]: Berechnete anaerobe- alaktazide Energiekomponente; WPCr,corrected [kJ]: Berechnete anaerobe- alaktazide Energiekomponente abzüglich der Sauerstoffspeicher; PCrused [mmol·kg⁻¹]: Umgesetzte PCr-Menge pro kg Muskelfeuchmasse \n\n\n\n\n\n\n\n\n\n\n\nTabelle 4: Parameter der EPOC-Modellanpassung und der WPCr: MW ± SD nach Bedingungen und Intensitäten\n\n\n\nSitzen (MW ± SD)Stehen (MW ± SD)ParameterLeichtModeratSchwerLeichtModeratSchwerA [l·min⁻¹]2.21 ± 0.522.48 ± 0.662.81 ± 0.692.23 ± 0.472.57 ± 0.582.86 ± 0.62τA [min]35.96 ± 6.6037.30 ± 5.0539.23 ± 4.2135.01 ± 4.6336.40 ± 5.2741.34 ± 4.12B [l·min⁻¹]0.70 ± 0.180.84 ± 0.211.12 ± 0.290.75 ± 0.290.79 ± 0.280.93 ± 0.20τB [min]720.88 ± 133.30662.89 ± 172.99569.92 ± 154.21617.68 ± 202.75730.79 ± 60.79634.44 ± 160.51V̇O2,Referenz [l·min⁻¹]0.896 ± 0.0850.896 ± 0.0850.896 ± 0.0850.896 ± 0.0850.896 ± 0.0850.896 ± 0.085R2,off0.92 ± 0.050.92 ± 0.050.96 ± 0.020.91 ± 0.060.92 ± 0.040.95 ± 0.02EPOCfast [l]1.361 ± 0.4881.573 ± 0.5291.850 ± 0.5201.303 ± 0.3301.597 ± 0.5461.980 ± 0.507EPOCfast [ml·kg⁻¹]19.04 ± 5.2721.94 ± 5.4426.16 ± 5.3918.69 ± 4.1822.35 ± 5.6828.25 ± 5.70EPOCPCr [l]1.255 ± 0.4621.426 ± 0.4931.542 ± 0.3871.176 ± 0.2901.432 ± 0.5391.729 ± 0.513EPOCPCr [ml·kg⁻¹]17.58 ± 5.0819.95 ± 5.2622.05 ± 4.7716.93 ± 3.9420.05 ± 5.9024.84 ± 6.60O2-Speicher [l]0.106 ± 0.0730.146 ± 0.1160.308 ± 0.2070.127 ± 0.0990.164 ± 0.1000.251 ± 0.147WPCr [kJ]28.47 ± 10.2232.91 ± 11.0738.71 ± 10.8927.26 ± 6.9033.41 ± 11.4241.43 ± 10.61WPCr,corrected [kJ]26.25 ± 9.6729.85 ± 10.3132.28 ± 8.1124.61 ± 6.0829.97 ± 11.2736.18 ± 10.74PCrused [mmol·kg⁻¹]14.56 ± 3.8616.66 ± 3.6518.82 ± 4.3912.31 ± 3.0114.56 ± 3.7218.37 ± 5.24A [l·min⁻¹]: Amplitude der schnellen EPOC-Komponente; τA [min]: Zeitkonstante der schnellen EPOC-Komponente; B [l·min⁻¹]: Amplitude der langsamen EPOC-Komponente; τB [min]: Zeitkonstante der langsamen EPOC-Komponente; V̇O2,Referenz [l·min⁻¹]: Sauerstoffvolumenstrom während der Referenzphase; R2,off: Bestimmtheitsmaß der EPOC-Modellanpassungen; EPOCfast [l]: EPOC die der Rephosphorylierung von PCr zuzuordnen ist; EPOCfast [ml·kg⁻¹]: auf Körpermasse normierte EPOC die der Rephosphorylierung von PCr zuzuordnen ist; EPOCPCr [l]: EPOC die der Rephosphorylierung von PCr zuzuordnen ist, abzüglich der Sauerstoffspeicher; EPOCPCr [ml·kg⁻¹]: auf Körpermasse normierte EPOC die der Rephosphorylierung von PCr zuzuordnen ist, abzüglich der Sauerstoffspeicher; O2-Speicher [l]: Sauerstoffspeicher; WPCr [kJ]: Berechnete anaerobe- alaktazide Energiekomponente; WPCr,corrected [kJ]: Berechnete anaerobe- alaktazide Energiekomponente abzüglich der Sauerstoffspeicher; PCrused [mmol·kg⁻¹]: Umgesetzte PCr-Menge pro kg Muskelfeuchmasse \n\n\n\n\n\n\n\n\n\nModellparameter der EPOC-Kinetik\nDie EPOC-Kinetik wurde mittels eines bi-exponentiellen Modells charakterisiert. Die Modellgüte erwies sich mit einer Varianzaufklärung von 94% über alle Messungen (R2off = 0.93 ± 0.04) als robust. Selbst der niedrigste beobachtete R2-Wert von 0.78 weist auf eine ausgeprägte Modellgüte hin. Die ermittelten Modellparameter des bi-exponentiellen Modells zeigen eine gute Übereinstimmung mit ausgewählten Referenzwerten aus der Literatur (nachfolgend als Literaturmittel bezeichnet, welches die Mittelwerte sowie Minima und Maxima der auf starke Ausreißer bereinigten Literaturstichprobe umfasst; Tabelle 5 & Tabelle 6). Die mittlere Amplitude der schnellen Komponente A liegt mit 2.53 [l·min-1] sehr nahe am Literaturmittel von 2.64 [l·min-1] (Range (R): 1.99-3.03 [l·min-1]). Die schnelle Zeitkonstante τA von 0.63 [min] ist etwas niedriger als das Literaturmittel von 0.81 [min] (R: 0.48-1.31 [min]), liegt aber im Normbereich. Die Amplitude der langsamen Komponente B fällt mit 0.85 [l·min-1] höher aus als der Literaturmittelwert von 0.70 [l·min-1] (R: 0.20-1.44 [l·min-1]), bleibt aber innerhalb des in der Literatur dokumentierten Wertebereichs. Die langsame Zeitkonstante τB von 10.93 [min] entspricht gut dem Literaturmittel von 12.85 [min] (R: 5.65-28.90 [min]). Bei der Betrachtung der Intensitätsabstufungen zeigen die Modellparameter A und B sowie die Zeitkonstante τA bei höheren Intensitäten größere Werte als bei niedrigeren Intensitäten. Die Zeitkonstante τB weist hingegen in der schweren Belastungsstufe niedrigere Werte auf als in den leichten und moderaten Intensitätsbereichen. Der mittlere erhobene Referenz-Sauerstoffvolumenstrom \\(\\dot{V}\\text{O}_{2,\\text{Referenz}}\\) betrug 0.90 ± 0.08 [l·min-1] (R: 0.77-1.00).\n\n\nEPOC-Werte\nDer absolute EPOCfast-Wert betrug 1.610 ± 0.528 [l] (R: 0.562-2.821) und liegt damit unter dem Literaturmittelwert von 2.23 ± 0.42 [l] (R: 1.44-2.79). Die auf Körpergewicht normierte EPOCfast-Menge betrug 22.74 ± 6.15 [ml·kg-1] (R: 9.37-34.97) und liegt entsprechend unter dem Literaturmittelwert von 28.93 ± 8.47 [ml·kg-1] (R: 11.72-45.0). Die Referenzwerte von Langley et al. (2024) wurden aufgrund ihrer deutlich höheren Ausprägung nicht in die Berechnung des Literaturmittels einbezogen, wobei die methodischen Unterschiede aufgrund unzureichender Dokumentation nicht nachvollzogen werden können. Die abzüglich der O2-Speicher berechnete EPOCPCr liegt mit 1.427 ± 0.471 [l] (R: 0.522-2.594) deutlich unter dem Literaturmittelwert für EPOCfast von 2.23 ± 0.42 [l]. Entsprechend ist auch der körpergewichtsbezogene EPOCPCr-Wert von 20.23 ± 5.74 [ml·kg-1] niedriger als der EPOCfast-Literaturmittelwert von 28.93 ± 8.47 [ml·kg-1], liegt jedoch noch im unteren Bereich der dokumentierten Referenzwerte.\n\n\nKörpereigene Sauerstoffspeicher\nDie berechneten O2-Speicher betrugen 0.184 ± 0.144 [l] (R: 0.040-0.566) und liegen damit deutlich unter den in der Literatur dokumentierten Werten zwischen 0.400 Liter (Beneke et al., 2002), bis 0.550 Liter (Di Prampero et al., 1970; Margaria, 1976, S. 33). Lediglich die höheren Werte des gemessenen Wertebereichs erreichen die in der Literatur angegebenen Referenzwerte. Da die Belastung aus einer standardisierten Referenzphase bei 50 Watt und nicht aus vollständiger körperlicher Ruhe gestartet wurde, resultierte erwartungsgemäß eine geringere Mobilisierung der O2-Speicher im Vergleich zu einem Belastungsbeginn aus dem Ruhezustand, was die gegenüber den Referenzwerten geringeren Werte erklären könnte.\n\n\nAnaerobe-alaktazide Energiekomponente\nDie berechnete mittlere WPCr betrug 33.70 ± 11.05 [kJ] (R: 11.76-59.04) und liegt damit unter dem aggregierten Literaturmittelwert aus Beneke et al. (2002), Dunst, Hesse, et al. (2023) und Dunst, Manunzio, et al. (2023) von 44.75 ± 9.71 [kJ] (R: 30.10-53.73). Die um die O2-Speicher korrigierte WPCr,corrected liegt mit 29.86 ± 9.85 [kJ] (R: 10.93-54.29) entsprechend noch deutlicher unter diesem Mittelwert. Da WPCr aus den absoluten EPOCfast oder EPOCPCr-Werten bestimmt wird und die mittlere Körpermasse der Gesamtstichprobe der drei zitierten Studien mit 85.7 ± 8.7 kg deutlich über der mittleren Masse der Probanden dieser Studie von 70.4 ± 10.4 kg lag, sind diese durchschnittlich niedrigeren absoluten Werte physiologisch erklärbar. Zudem wurden in den Referenzstudien ausschließlich maximale Sprinttests durchgeführt, die typischerweise zu einer höheren Erschöpfung der PCr-Speicher führen als die Belastungen der vorliegenden Untersuchung. Die WPCr-Werte aus Langley et al. (2024) liegen wieder deutlich über dem Literaturmittelwert und auch über dem erwarteten physiologischen Bereich auf Basis der PCr-Konzentration der Muskelfeuchtmasse. Wie in Abbildung 1 ersichtlich, liegt die Mehrheit der bestimmten PCrused-Werte sowie der Mittelwert von 15.88 ± 4.49 [mmol·kg-1] (R: 7.04-27.01) unter dem aus Tabelle 7 ermittelten Literatur-Normwert der Kreatinphosphatspeicher (PCr) im Trockenmuskel von 20.34 [mmol·kg-1]. Auch die höchsten berechneten PCrused-Werte befinden sich innerhalb des dokumentierten physiologischen Referenzbereichs von 15.7 [mmol·kg-1] bis 37.7 [mmol·kg-1]. Bei der Betrachtung zwischen den Intensitätsstufen zeigen die Parameter EPOCfast, EPOCPCr sowie die daraus abgeleiteten Größen WPCr, WPCr,corrected und PCrused wie zu erwarten bei höheren Intensitäten größere Werte als bei niedrigeren Intensitäten. Die O2-Speicher weisen ebenfalls bei höheren Intensitäten größere Werte auf.\n\n\n\n\n\n\nAbbildung 1: Validität der PCr_used Werte im Vergleich zu den Normwerten\n\n\n\n\n\n\n\n\n\nTabelle 3 & 4: Literaturübersicht zu Modellparametern und Mengen der EPOC\n\n\n\n\n\n\n\n\n\nTabelle 5: Literaturbasierte EPOC-Modellparameter der Bi-Exponentialfunktion\n\n\n\nQuelleA [ml·min⁻¹]τA [min]B [ml·min⁻¹]τB [min]WPCr [kJ]Margaria et al. (1933)-≈ 0.60-≈ 50.00-Berg (1947)-0.75---Henry & DeMoor (1950)-0.90 - 0.94-6.94 - 8.00-Henry & Berg (1950)-0.66 - 0.71---Henry et al. (1951)-1.08 - 1.16---DeMoor (1954)-0.88-5.65-Henry & DeMoor (1956)-1.04-5.92-Royce (1969)-1.31-23.81-Katch et al. (1972)-0.66-14.71-Di Prampero et al. (1973)-≈ 0.72-21.70 - 28.90...Katch (1973)2.800.691.44316.94-Roberts & Morton (1978)2.3300.660.3676.87-Di Prampero (1981)-0.60 - 0.72-21.65...Özyener et al. (2001)-M: 0.48 ± 0.10H: 0.70 ± 0.18VH: 0.55 ± 0.08S: 0.58 ± 0.18-VH: 7.67 ± 2.05S: 8.98 ± 6.32-Beneke et al. (2002)2.777 ± 0.4450.70 ± 0.200.675 ± 0.25714.10 ± 13.5040.2 ± 10.6Dunst et al. (2023a)2.49 ± 0.620.84 ± 0.130.51 ± 0.347.34 ± 3.673s: 30.10 ± 7.328s: 42.64 ± 9.6112s: 47.23 ± 9.8260s: 53.30 ± 11.91Dunst et al. (2023b)3s: 1.99 ± 0.448s: 2.74 ± 0.3812s: 2.88 ± 0.5060s: 3.03 ± 0.453s: 0.82 ± 0.148s: 0.84 ± 0.1212s: 0.84 ± 0.1360s: 0.85 ± 0.133s: 0.20 ± 0.178s: 0.42 ± 0.1312s: 0.58 ± 0.1260s: 0.98 ± 0.303s: 5.72 ± 2.528s: 6.46 ± 3.3812s: 8.03 ± 3.1060s: 9.36 ± 5.113s: 31.83 ± 6.988s: 46.50 ± 3.7912s: 51.24 ± 9.5260s: 53.73 ± 9.96Langley et al. (2024)----10s: 102.93 ± 25.9115s: 109.83 ± 28.3030s: 126.39 ± 24.25A [ml·min⁻¹]: Amplitude der schnellen EPOC-Komponente; τA [min]: Zeitkonstante der schnellen EPOC-Komponente; B [ml·min⁻¹]: Amplitude der langsamen EPOC-Komponente; τB [min]: Zeitkonstante der langsamen EPOC-Komponente; W~PCr [kJ]: Berechnete anaerobe- alaktazide Energiekomponente; Zeitangaben (3s, 8s, 10s, 12s, 15s, 30s, 60s): Dauer maximaler Sprints auf dem Radergometer; Intensitätsangaben: M: moderate, H: heavy, VH: very heavy, S: severe exercise intensities\n\n\n\n\n\n\n\n\n\nTabelle 6: Gesamt-EPOC-Mengen & EPOC-Mengen der schnellen Komponente aus der Fachliteratur\n\n\n\nQuelleEPOCfast [ml·kg⁻¹]EPOCfast [l]EPOCges [ml·kg⁻¹]EPOCges [l]Hill et al. (1924)---7.5Margaria et al. (1933)36.82.50--Margaria et al. (1963)--75.04.65Margaria et al. (1964)-2.77--Di Prampero (1971)45.0---Margaria (1972)40.0---Di Prampero et al. (1973)32.0---Shephard (1972)--67.05.00Katch (1973)--68.04.89Roberts & Morton (1978)37.452.7970.04.93Beneke et al. (2002)-1.904 ± 0.563--Beneke et al. (2004)32.13 ± 2.592.48 ± 0.20--Francescato et al. (2003)Sehr Leicht: 11.72 ± 2.4Leicht: 20.72 ± 3.4Moderat: 32.73 ± 3.5-Sehr Leicht: 29.2 ± 5.9Leicht: 51.6 ± 8.4Moderat: 81.5 ± 8.8-Dunst et al. (2023a)3s: 18.77 ± 4.568s: 26.60 ± 6.0012s: 29.47 ± 6.1360s: 33.25 ± 7.433s: 1.44 ± 0.358s: 2.04 ± 0.4612s: 2.26 ± 0.4760s: 2.55 ± 0.57--Dunst et al. (2023b)3s: 16.96 ± 3.688s: 24.78 ± 2.0112s: 27.34 ± 5.1360s: 28.68 ± 5.363s: 1.52 ± 0.338s: 2.22 ± 0.1812s: 2.45 ± 0.4660s: 2.57 ± 0.48--Langley (2024)10s: 63.71 ± 16.0615s: 68.00 ± 17.4830s: 78.34 ± 15.0210s: 4.92 ± 1.2415s: 5.25 ± 1.3530s: 6.05 ± 1.16--EPOCges [ml·kg⁻¹]: auf Körpermasse normierte EPOC-Werte; EPOCges [l]: EPOC der gesamten Nachbelstung; EPOCfast [ml·kg⁻¹]: auf Körpermasse normierte EPOC die der Rephosphorylierung von PCr zuzuordnen ist; EPOCfast [l]: EPOC die der Rephosphorylierung von PCr zuzuordnen ist; Zeitangaben (3s, 8s, 10s, 12s, 15s, 30s, 60s): Dauer maximaler Sprints auf dem Radergometer; Intensitätsangaben: Belastungsintensitäten (sehr leicht, leicht, moderat)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTabelle 5: Literaturübersicht zu PCr-Konzentrationen\n\n\n\n\n\n\n\n\n\n\nAutorenPCr-Konzentration [mmol·kg⁻¹ Trockenmuskelmasse]Bestimmungsmethode / DatenbasisHultman et al. (1967)16.07 ± 1.66 ≙ (67.8 ± 7.0*)MuskelbiopsieKarlsson et al. (1971)15.7 ± 2.15MuskelbiopsieKeul et al. (1972)10 - 30LiteraturangabeKnuttgen et al. (1973)17.9 ± 1.84MuskelbiopsieHarris et al. (1974)17.89 ± 1.81 ≙ (75.5 ± 7.63*)MuskelbiopsieStegemann (1991)16.6 - 21.3 ≙ (70-90*)LiteraturangabeGaitanos et al. (1993)18.13 ± 1.71 ≙ (76.5 ± 7.2*)MuskelbiopsieBangsbo et al. (1993)17.5 - 20.3P-MRSMcCann et al. (1995)23.6 ± 0.98P-MRSBogdanis et al. (1996)17.82 ± 1.04 ≙ (75.2 ± 4.4*)MuskelbiopsiePutman et al. (1998)20.52 ± 0.81 ≙ (86.6 ± 3.4*)MuskelbiopsieWalter et al. (1999)37.7 ± 2.8P-MRSParolin et al. (1999)20.9 ± 1.1 ≙ (88.2 ± 4.7*)MuskelbiopsieParolin et al. (2000)ca. 19 ≙ (ca. 80*)Muskelbiopsiede Marées (2003); Heck (2006)15 - 20LiteraturangabeBrooks et al. (2004)28LiteraturangabeNelson & Cox (2012)30LiteraturangabeHeck et al. (2022)20 - 25Literaturangabe*Werte in Klammern zeigen die tatsächlich in der Studie gemessene PCr-Konzentration im Feuchtmuskel. Die Werte außerhalb der Klammern sind auf die Trockenmuskelmasse umgerechnet. Für die Umrechnung wurde nach Putman et al. (1998) ein Verhältnis von 1:4.22 verwendet.\n\n\n\nTabelle 7: Angaben zu PCr-Konzentrationen in der Fachliteratur\n\n\n\n\n\n\n\n\n\n\nEPOC-Modellfunktionen aller Testdurchläufe\nDie folgenden Abbildungen zeigen den dreischrittigen Modellierungsprozess der individuellen EPOC-Kinetik für die Testdurchläufe aller Probanden. Für jeden Durchgang ist die sequentielle Anpassung der EPOC-Komponenten dargestellt: Im ersten Schritt die Modellierung der Zeitkonstante τ. Im zweiten Schritt die Anpassung der EPOCslow und im dritten Schritt die Modellierung der EPOCfast und die Integration beider Komponenten im bi-exponentiellen Gesamtmodell. Für jede Modellanpassung sind die entsprechenden Modellfunktionen, Bestimmtheitsmaße (R2) und verschiedene Zeitkonstanten angegeben. Die Visualisierung ermöglicht einen direkten Vergleich der individuellen EPOC-Charakteristiken und der Modellierungsgüte zwischen den verschiedenen Testdurchläufen.\n\nProband 01Proband 06Proband 10Proband 13Proband 15Proband 19Proband 20Proband 22Proband 23\n\n\n\nTest 1Test 2Test 3Test 4Test 5Test 6\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n\nTest 1Test 2Test 3Test 4Test 5Test 6\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n\nTest 1Test 2Test 3Test 4Test 5Test 6\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n\nTest 1Test 2Test 3Test 4Test 5Test 6\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n\nTest 1Test 2Test 3Test 4Test 5Test 6\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n\nTest 1Test 2Test 3Test 4Test 5Test 6\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n\nTest 1Test 2Test 3Test 4Test 5Test 6\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n\nTest 1Test 2Test 3Test 4Test 5Test 6\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n\nTest 1Test 2Test 3Test 4Test 5Test 6\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n\n\n\nQuellenverzeichnis\n\n\nBangsbo, J., Johansen, L., Quistorff, B., & Saltin, B. (1993). NMR and analytic biochemical evaluation of CrP and nucleotides in the human calf during muscle contraction. Journal of Applied Physiology, 74(4), 2034–2039. https://doi.org/10.1152/jappl.1993.74.4.2034\n\n\nBeneke, R., Beyer, T., Jachner, C., Erasmus, J., & Hütler, M. (2004). Energetics of karate kumite. European journal of applied physiology, 92(4-5), 518–523. https://doi.org/10.1007/s00421-004-1073-x\n\n\nBeneke, R., Pollmann, C., Bleif, I., Leithäuser, R. M., & Hütler, M. (2002). How anaerobic is the Wingate Anaerobic Test for humans ? European Journal of Applied Physiology, 87, 388–392. https://doi.org/10.1007/s00421-002-0622-4\n\n\nBerg, W. E. (1947). Individual differences in respiratory gas exchange during recovery from moderate exercise. The American journal of physiology, 149(3), 597–610. https://doi.org/10.1152/ajplegacy.1947.149.3.597\n\n\nBogdanis, G. C., Nevill, M. E., Boobis, L. H., & Lakomy, H. K. (1996). Contribution of phosphocreatine and aerobic metabolism to energy supply during repeated sprint exercise. Journal of applied physiology (Bethesda, Md. : 1985), 80(3), 876–884. https://doi.org/10.1152/jappl.1996.80.3.876\n\n\nBrooks, G. A., Fahey, T. D., & Baldwin, K. M. (2004). Exercise Physiology: Human Bioenergetics and Its Applications (4. Edition, S. 928). McGraw-Hill Education Ltd.\n\n\nDeMoor, J. C. (1954). Individual differences in oxygen debt curves related to mechanical efficiency and sex. Journal of applied physiology, 6(8), 460–466. https://doi.org/10.1152/jappl.1954.6.8.460\n\n\nDi Prampero, P. E. (1971). The alactacid oxygen debt: Its power capacity and efficiency. In Muscle Metabolism During Exercise (S. 371–382). Plenum Press.\n\n\nDi Prampero, P. E. (1981). Energetics of Muscular Exercise. Review of physiology, biochemistry and pharmacology, 89, 143–222.\n\n\nDi Prampero, P. E., Davies, C. T., Cerretelli, P., & Margaria, R. (1970). An analysis of O2 debt contracted in submaximal exercise. Journal of applied physiology, 29(5), 547–551. https://doi.org/10.1152/jappl.1970.29.5.547\n\n\nDunst, A. K., Hesse, C., Ueberschär, O., & Holmberg, H. C. (2023). A Novel Approach to the Determination of Time- and Fatigue-Dependent Efficiency during Maximal Cycling Sprints. Sports, 11(2). https://doi.org/10.3390/sports11020029\n\n\nDunst, A. K., Manunzio, C., Feldmann, A., & Hesse, C. (2023). Applications of near-infrared spectroscopy in „anaerobic“ diagnostics - SmO2 kinetics reflect PCr dephosphorylation and correlate with maximal lactate accumulation and maximal pedalling rate. Biology of Sport, 40(4), 1019–1031. https://doi.org/10.5114/BIOLSPORT.2023.122481\n\n\nFrancescato, M. P., Cettolo, V., & Di Prampero, P. E. (2003). Relationships between mechanical power, O2 consumption, O2 deficit and high-energy phosphates during calf exercise in humans. Pflugers Archiv European Journal of Physiology, 445(5), 622–628. https://doi.org/10.1007/s00424-002-0992-9\n\n\nGaitanos, G. C., Williams, C., Boobis, L. H., & Brooks, S. (1993). Human muscle metabolism during intermittent maximal exercise. Journal of applied physiology, 75(2), 712–719. https://doi.org/10.1152/jappl.1993.75.2.712\n\n\nHarris, R. C., Hultman, E., & Nordesjö, L. O. (1974). Glycogen, glycolytic intermediates and high-energy phosphates determined in biopsy samples of musculus quadriceps femoris of man at rest. Methods and variance of values. Scandinavian Journal of Clinical and Laboratory Investigation, 33(2), 109–120. https://doi.org/10.1080/00365517409082477\n\n\nHeck, H. (2006). Muskulärer Energiestoffwechsel und sportliche Aktivität. Blickpunkt der Mann, 4(4), 23–28.\n\n\nHenry, F. M. (1951). Aerobic oxygen consumption and alactic debt in muscular work. Journal of applied physiology, 3(7), 427–438. https://doi.org/10.1152/jappl.1951.3.7.427\n\n\nHenry, F. M., & Berg, W. E. (1950). Physiological and performance changes in athletic conditioning. Journal of applied physiology, 3(2), 103–111. https://doi.org/10.1152/jappl.1950.3.2.103\n\n\nHenry, F. M., & DeMoor, J. C. (1950). Metabolic efficiency of exercise in relation to work load at constant speed. Journal of applied physiology, 2(9), 481–487. https://doi.org/10.1152/jappl.1950.2.9.481\n\n\nHenry, F. M., & DeMoor, J. C. (1956). Lactic and alactic oxygen consumption in moderate exercise of graded intensity. Journal of applied physiology, 8(6), 608–614. https://doi.org/10.1152/jappl.1956.8.6.608\n\n\nHill, A. V., Long, C. N. H., & Lupton, H. (1924). Muscular exercise, lactic acid, and the supply and utilisation of oxygen. Proceedings of the Royal Society of London. Series B, Containing Papers of a Biological Character, 96(679), 438–475. https://doi.org/10.1098/rspb.1924.0037\n\n\nHorn, F., Blaeschke, F., Trugenberger, K., Gröll, M., Polzer, C., Lechner, K., & Anderson, J. M. (2021). Biochemie des Menschen : das Lehrbuch für das Medizinstudium (8. Edition, S. 790). Georg Thieme Verlag. https://doi.org/10.1055/b000000082\n\n\nHultman, E., Bergström, J., & Anderson, N. M. (1967). Breakdown and resynthesis of phosphorylcreatine and adenosine triphosphate in connection with muscular work in man. Scandinavian Journal of Clinical and Laboratory Investigation, 19(1), 56–66. https://doi.org/10.3109/00365516709093481\n\n\nKarlsson, J. (1971). Lactate and phosphagen concentrations in working muscle of man with special reference to oxygen deficit at the onset of work. Acta physiologica Scandinavica. Supplementum, 358, 1–72.\n\n\nKatch, V. L. (1973). Kinetics of oxygen uptake and recovery for supramaximal work of short duration. Internationale Zeitschrift für Angewandte Physiologie Einschließlich Arbeitsphysiologie, 31(3), 197–207. https://doi.org/10.1007/BF00697599\n\n\nKeul, J., Doll, E., & Keppler, D. (1972). Energy Metabolism of Human Muscle (E. Jokl & Ky. Lexington, Hrsg.; Bd. 7, S. 312). University Park Press.\n\n\nKnuttgen, H. G., & Saltin, B. (1973). Oxygen Uptake, Muscle High‐Energy Phosphates, and Lactate in Exercise under Acute Hypoxic Conditions in Man. Acta Physiologica Scandinavica, 87(3), 368–376. https://doi.org/10.1111/j.1748-1716.1973.tb05401.x\n\n\nLangley, J. O., Ng, S. C., Todd, E. E., & Porter, M. S. (2024). VLamax: determining the optimal test duration for maximal lactate formation rate during all-out sprint cycle ergometry. European Journal of Applied Physiology. https://doi.org/10.1007/s00421-024-05456-9\n\n\nMarées, H. de. (2003). Sportphysiologie (H. Heck & U. Bartmus, Hrsg.; 9. Edition, S. 799). Sportverlag Strauss.\n\n\nMargaria, R. (1972). The sources of muscular energy. Scientific American, 226(3), 84–91. https://doi.org/10.1038/scientificamerican0372-84\n\n\nMargaria, R. (1976). Biomechanics and energetics of muscular exercise (S. 144). Oxford University Press.\n\n\nMargaria, R., Cerretelli, P., Aghemo, P., & Sassi, G. (1963). Energy cost of running. Journal of applied physiology, 18, 367–370. https://doi.org/10.1152/jappl.1963.18.2.367\n\n\nMargaria, R., Cerretelli, P., & Mangili, F. (1964). Balance and Kinetics of Anaerobic Energy Release During Strenuous Exercise in Man. Journal of applied physiology, 19, 623–628. https://doi.org/10.1152/jappl.1964.19.4.623\n\n\nMargaria, R., Edwards, H. T., & Dill, D. B. (1933). The possible mechanisms of contracting and paying the oxygen debt and the role of lactic acid in muscular contraction. American Journal of Physiology, 106, 689–715. https://api.semanticscholar.org/CorpusID:30044859\n\n\nNelson, D. L., & Cox, M. M. (2012). Lehninger Principles of Biochemistry: 6th Edition. Macmillan Learning. https://books.google.de/books?id=n9e1NAEACAAJ\n\n\nÖzyener, F., Rossiter, H. B., Ward, S. A., & Whipp, B. J. (2001). Influence of exercise intensity on the on- and off-transient kinetics of pulmonary oxygen uptake in humans. The Journal of physiology, 533(Pt 3), 891–902. https://doi.org/10.1111/j.1469-7793.2001.t01-1-00891.x\n\n\nParolin, M. L., Spriet, L. L., Hultman, E., Hollidge-Horvat, M. G., Jones, N. L., & Heigenhauser, G. J. F. (2000). Regulation of glycogen phosphorylase and PDH during exercise in human skeletal muscle during hypoxia. American Journal of Physiology - Endocrinology and Metabolism, 278(3 41-3), 522–534. https://doi.org/10.1152/ajpendo.2000.278.3.e522\n\n\nPrampero, P. E. di, Peeters, L., & Margaria, R. (1973). Alactic O2 debt and lactic acid production after exhausting exercise in man. Journal of Applied Physiology, 5.\n\n\nPutman, C. T., Jones, N. L., Hultman, E., Hollidge-Horvat, M. G., Bonen, A., McConachie, D. R., & Heigenhauser, G. J. F. (1998). Effects of short-term submaximal training in humans on muscle metabolism in exercise. American Journal of Physiology - Endocrinology and Metabolism, 275(1 38-1), 132–139. https://doi.org/10.1152/ajpendo.1998.275.1.e132\n\n\nRoberts, A. D., & Morton, A. R. (1978). Applied Physiology. 289, 281–289.\n\n\nRoyce, J. (1969). Active and passive recovery from maximal aerobic capacity work. Internationale Zeitschrift fur angewandte Physiologie, einschliesslich Arbeitsphysiologie, 28(1), 1–8. https://doi.org/10.1007/BF00696033\n\n\nStegemann, J. (1991). Leistungsphysiologie (4. Edition, S. 385). Georg Thieme Verlag.\n\n\nWalter, G., Vandenborne, K., Elliott, M., & Leigh, J. S. (1999). In vivo ATP synthesis rates in single human muscles during high intensity exercise. Journal of Physiology, 519(3), 901–910. https://doi.org/10.1111/j.1469-7793.1999.0901n.x",
    "crumbs": [
      "Ergebnisse & Statistik",
      "Physiologische Nachbelastungsparameter"
    ]
  },
  {
    "objectID": "Ergebnisse/Drehzahl_Stufentests.html#physiologische-parameter-des-drehzahltests",
    "href": "Ergebnisse/Drehzahl_Stufentests.html#physiologische-parameter-des-drehzahltests",
    "title": "Eingangsuntersuchungen",
    "section": "Physiologische Parameter des Drehzahltests",
    "text": "Physiologische Parameter des Drehzahltests\nDie folgenden Abbildungen zeigen die gemittelten Belastungsparameter aller Probanden die individuellen Verläufe der Herzrate, der respiratorischen Parameter \\(\\dot{V}O_{2}\\) und \\(\\dot{V}CO_{2}\\) sowie der mechanischen Leistung Pmech über die Zeit für die Stufentests im Sitzen und Stehen.\n\nMWProband 01Proband 06Proband 10Proband 13Proband 15Proband 19Proband 20Proband 22Proband 23\n\n\n\n\n\n\n\n\nAbbildung 27: Gemittelte Belastungsparameter aller Drehzaltests\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 28: Belastungsparameter während des Drehzahltests: Proband 01\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 29: Belastungsparameter während des Drehzahltests: Proband 06\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 30: Belastungsparameter während des Drehzahltests: Proband 10\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 31: Belastungsparameter während des Drehzahltests: Proband 13\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 32: Belastungsparameter während des Drehzahltests: Proband 15\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 33: Belastungsparameter während des Drehzahltests: Proband 19\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 34: Belastungsparameter während des Drehzahltests: Proband 20\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 35: Belastungsparameter während des Drehzahltests: Proband 22\n\n\n\n\n\n\n\n\n\n\n\nAbbildung 36: Belastungsparameter während des Drehzahltests: Proband 23",
    "crumbs": [
      "Ergebnisse & Statistik",
      "Eingangsuntersuchungen"
    ]
  },
  {
    "objectID": "Ergometer/Pedal_Smoothness.html",
    "href": "Ergometer/Pedal_Smoothness.html",
    "title": "",
    "section": "",
    "text": "Code"
  },
  {
    "objectID": "Ergometer/Pedal_Smoothness.html#berechnung",
    "href": "Ergometer/Pedal_Smoothness.html#berechnung",
    "title": "",
    "section": "1.1 Berechnung",
    "text": "1.1 Berechnung\n\n\n\nBerechnung der Pedal Smoothness"
  },
  {
    "objectID": "Ergometer/Pedal_Smoothness.html#pedal_smoothness-vs.-w_kg",
    "href": "Ergometer/Pedal_Smoothness.html#pedal_smoothness-vs.-w_kg",
    "title": "",
    "section": "1.2 Pedal_Smoothness vs. W_kg",
    "text": "1.2 Pedal_Smoothness vs. W_kg"
  },
  {
    "objectID": "Ergometer/Pedal_Smoothness.html#pedal_smoothness-vs.-efficiency",
    "href": "Ergometer/Pedal_Smoothness.html#pedal_smoothness-vs.-efficiency",
    "title": "",
    "section": "1.3 Pedal_Smoothness vs. Efficiency",
    "text": "1.3 Pedal_Smoothness vs. Efficiency"
  },
  {
    "objectID": "Ergometer/index_Ergometer.html",
    "href": "Ergometer/index_Ergometer.html",
    "title": "Ergometer-Daten",
    "section": "",
    "text": "In den folgenden Abschnitten werden die Ergebnisse verschiedener Leistungsparameter dargestellt, die am Ergometer gemessen wurden."
  },
  {
    "objectID": "Quellen.html",
    "href": "Quellen.html",
    "title": "",
    "section": "",
    "text": "Code\n\n\n\n\n\n1 Quellenverzeichnis\n\n\nArkesteijn, M., Jobson, S., Hopker, J., & Passfield, L. (2016). The Effect of Cycling Intensity on Cycling Economy During Seated and Standing Cycling. International Journal of Sports Physiology and Performance, 11(January). https://doi.org/10.1123/ijspp.2015-0441\n\n\nÅstrand, P.-. O., Rodahl, K., Stromme, S. B., & Dahl, H. A. (2003). Textbook of work physiology. Physiological bases of excercise (4. Edition, S. 649). Human Kinetics.\n\n\nÅstrand, P.-O., Cuddy, T. E., Saltin, B., & Stenberg, J. (1964). Cardiac output during submaximal and maximal work. Journal of applied physiology, 19, 268–274. https://doi.org/10.1152/jappl.1964.19.2.268\n\n\nBader, H., Heldt, H. W., Karger, W., & Lübbers, D. W. (1972). Physiologie des Menschen. Band 1 - Bioenergetik (S. 277). Urban & Schwarzenberg.\n\n\nBahr, R., & Sejersted, O. M. (1991). Effect of intensity of exercise on excess postexercise O2 consumption. Metabolism: clinical and experimental, 40(8), 836–841. https://doi.org/10.1016/0026-0495(91)90012-l\n\n\nBarstow, T. J. (2019). Understanding near infrared spectroscopy and its application to skeletal muscle research. Journal of Applied Physiology, 126(5), 1360–1376. https://doi.org/10.1152/japplphysiol.00166.2018\n\n\nBell, M. P., & Ferguson, R. A. (2009). Interaction between muscle temperature and contraction velocity affects mechanical efficiency during moderate-intensity cycling exercise in young and older women. Journal of Applied Physiology, 107(3), 763–769. https://doi.org/10.1152/japplphysiol.91654.2008\n\n\nBeneke, R., Beyer, T., Jachner, C., Erasmus, J., & Hütler, M. (2004). Energetics of karate kumite. European journal of applied physiology, 92(4-5), 518–523. https://doi.org/10.1007/s00421-004-1073-x\n\n\nBeneke, R., Jumah, M. D., & Leithäuser, R. M. (2007). Modelling the lactate response to short-term all out exercise. Dynamic Medicine, 6, 1–7. https://doi.org/10.1186/1476-5918-6-10\n\n\nBeneke, R., Pollmann, C., Bleif, I., Leithäuser, R. M., & Hütler, M. (2002). How anaerobic is the Wingate Anaerobic Test for humans ? European Journal of Applied Physiology, 87, 388–392. https://doi.org/10.1007/s00421-002-0622-4\n\n\nBerkemeier, Q. N., Alumbaugh, B. W., Gillum, T., Coburn, J., Kim, J. K., Reeder, M., Fechtner, C. A., & Smith, G. A. (2020). Physiological and biomechanical differences between seated and standing uphill cycling. International Journal of Exercise Science, 13(2), 996–1011.\n\n\nBöning, D., Gonen, Y., & Maassen, N. (1984). Relationship between work load, pedal frequency, and physical fitness. International Journal of Sports Medicine, 5(2), 92–97. https://doi.org/10.1055/s-2008-1025887\n\n\nBöning, D., Maassen, N., & Steinach, M. (2017). Der Wirkungsgrad von Muskelarbeit. Deutsche Zeitschrift fur Sportmedizin, 68(September), 203–214. https://doi.org/10.5960/dzsm.2017.295\n\n\nBosak, A. (2001). VO2Max Comparison Between Seated and Standing Ergometry (S. 38) [Phdthesis].\n\n\nBouillod, A., & Grappe, F. (2018). Physiological and biomechanical responses between seated and standing positions during distance‑based uphill time trials in elite cyclists. Journal of Sports Sciences, 36(10), 1173–1178. https://doi.org/10.1080/02640414.2017.1363902\n\n\nBrooks, G. A. (2012). Bioenergetics of exercising humans. Comprehensive Physiology, 2(1), 537–562. https://doi.org/10.1002/cphy.c110007\n\n\nBrooks, G. A., Fahey, T. D., & Baldwin, K. M. (2004). Exercise Physiology: Human Bioenergetics and Its Applications (4. Edition, S. 928). McGraw-Hill Education Ltd.\n\n\nCaldwell, G. E., Li, L., McCole, S. D., & Hagberg, J. M. (1998). Pedal and crank kinetics in uphill cycling. Journal of Applied Biomechanics, 14(3), 245–259. https://doi.org/10.1123/jab.14.3.245\n\n\nCathcart, E. P., & Burnett, W. A. (1926). The Influence of Muscle Work on Metabolism in Varying Conditions of Diet. Proceedings of the Royal Society of London, 99(699), 405–426. https://royalsociety.org/people/alan-armstrong-8688/\n\n\nCautero, M., Beltrami, A. P., Di Prampero, P. E., & Capelli, C. (2002). Breath-by-breath alveolar oxygen transfer at the onset of step exercise in humans: Methodological implications. European Journal of Applied Physiology, 88(3), 203–213. https://doi.org/10.1007/s00421-002-0671-8\n\n\nChavarren, J., & Calbet, J. A. L. (1999). Cycling efficiency and pedalling frequency in road cyclists. European Journal of Applied Physiology and Occupational Physiology, 80(6), 555–563. https://doi.org/10.1007/s004210050634\n\n\nCoast, J. R., & Welch, H. G. (1985). Linear increase in optimal pedal rate with increased power output in cycle ergometry. European Journal of Applied Physiology and Occupational Physiology, 53(4), 339–342. https://doi.org/10.1007/BF00422850\n\n\nCORTEX Biophysik GmbH. (2017). MetaMax 3B - Mobiles Spiroergometriesystem: Produktbroschüre.\n\n\nDi Prampero, P. E. (1981). Energetics of Muscular Exercise. Review of physiology, biochemistry and pharmacology, 89, 143–222.\n\n\nDi Prampero, P. E., Boutellier, U., & Pietsch, P. (1983). Oxygen deficit and stores at onset of muscular exercise in humans. Journal of Applied Physiology Respiratory Environmental and Exercise Physiology, 55(1 I), 146–153. https://doi.org/10.1152/jappl.1983.55.1.146\n\n\nDiamant, B., Karlsson, J., & Saltin, B. (1968). Muscle Tissue Lactate after Maximal Exercise in Man. Acta Physiologica Scandinavica, 72(3), 383–384. https://doi.org/10.1111/j.1365-201X.1968.tb10846.x\n\n\nDuc, S., Bertucci, W., Pernin, J. N., & Grappe, F. (2008). Muscular activity during uphill cycling: effect of slope, posture, hand grip position and constrained bicycle lateral sways. Journal of electromyography and kinesiology : official journal of the International Society of Electrophysiological Kinesiology, 18(1), 116–127. https://doi.org/10.1016/j.jelekin.2006.09.007\n\n\nEarnest, C. P., Wharton, R. P., Church, T. S., & Lucia, A. (2005). Reliability of the lode excalibur sport ergometer and applicability to computrainer electromagnetically braked cycling training device. Journal of Strength and Conditioning Research, 19(2), 344–348. https://doi.org/10.1519/R-15714.1\n\n\nEKF Diagnostics. (2013). Bedienungsanleitung Biosen C_line Clinic / GP+.\n\n\nEttema, G., & Lorås, H. W. (2009). Efficiency in cycling: a review. European journal of applied physiology, 106(1), 1–14. https://doi.org/10.1007/s00421-009-1008-7\n\n\nFick, A. (1855). Über Diffusion. Annalen der Physik, 170(1), 59–86. https://doi.org/10.1002/andp.18551700105\n\n\nFrancescato, M. P., Cettolo, V., & Di Prampero, P. E. (2003). Relationships between mechanical power, O2 consumption, O2 deficit and high-energy phosphates during calf exercise in humans. Pflugers Archiv European Journal of Physiology, 445(5), 622–628. https://doi.org/10.1007/s00424-002-0992-9\n\n\nGaesser, G. A., & Brooks, G. A. (1975). Efficiency During Rate Exercise : Effects of Speed and Work. Journal of applied physiology, 38(6), 1132–1139.\n\n\nGaesser, G. A., & Brooks, G. A. (1984). Metabolic bases of excess post-exercise oxygen consumption: a review. Medicine & Science in Sports & Exercise, 16(1), 1–9. http://journal.um-surabaya.ac.id/index.php/JKM/article/view/2203 https://journals.lww.com/acsm-msse/Fulltext/1984/01000/Metabolic_bases_of_excess_post_exercise_oxygen.8.aspx\n\n\nGladden, L. B. (2004). Lactate metabolism: a new paradigm for the third millennium. Journal of Physiology, 558(1), 5–30. https://doi.org/10.1113/jphysiol.2003.058701\n\n\nHansen, E. A., & Waldeland, H. (2008). Seated versus standing position for maximization of performance during intense uphill cycling during intense uphill cycling. Journal of Sports Sciences, 26(October 2014), 37–41. https://doi.org/10.1080/02640410801910277\n\n\nHarnish, C., King, D., & Swensen, T. (2007). Effect of cycling position on oxygen uptake and preferred cadence in trained cyclists during hill climbing at various power outputs. European Journal of Applied Physiology, 99(4), 387–391. https://doi.org/10.1007/s00421-006-0358-7\n\n\nHarris, J. A., & Benedict, F. G. (1918). A Biometric Study of Human Basal Metabolism. Proceedings of the National Academy of Sciences of the United States of America, 4(12), 370–373. https://doi.org/10.1073/pnas.4.12.370\n\n\nHeck, H., Bartmus, U., & Grabow, V. (2022). Laktat (1. Aufl., S. 662). Springer Berlin Heidelberg.\n\n\nJacobs, K. A., Krauss, R. M., Fattor, J. A., Horning, M. A., Friedlander, A. L., Bauer, T. A., Hagobian, T. A., Wolfel, E. E., & Brooks, G. A. (2006). Endurance training has little effect on active muscle free fatty acid, lipoprotein cholesterol, or triglyceride net balances. American Journal of Physiology - Endocrinology and Metabolism, 291(3), 656–665. https://doi.org/10.1152/ajpendo.00020.2006\n\n\nJanssen, I., Heymsfield, S. B., Wang, Z. M., & Ross, R. (2000). Skeletal muscle mass and distribution in 468 men and women aged 18-88 yr. Journal of Applied Physiology, 89(1), 81–88. https://doi.org/10.1152/jappl.2000.89.1.81\n\n\nJeukendrup, A. E., Craig, N. P., & Hawley, J. A. (2000). The bioenergetics of world class cycling. Journal of Science and Medicine in Sport, 3(4), 414–433. https://doi.org/10.1016/S1440-2440(00)80008-0\n\n\nJeukendrup, A., & Gleeson, M. (2019). Sport Nutrition (3. Edition, S. 602). Human Kinetics.\n\n\nJuel, C. (2008). Regulation of pH in human skeletal muscle: Adaptations to physical activity. Acta Physiologica, 193(1), 17–24. https://doi.org/10.1111/j.1748-1716.2008.01840.x\n\n\nKistemaker, D. A., Terwiel, T. M., Reuvers, E. D. H. M., & Bobbert, M. F. (2023). Limiting radial pedal forces greatly reduces maximal power output and efficiency in sprint cycling: an optimal control study. Journal of applied physiology (Bethesda, Md. : 1985), 134(4), 980–991. https://doi.org/10.1152/japplphysiol.00733.2021\n\n\nKroidl, R., Schwarz, S., & Lehnigk, B. (2007). Kursbuch Spiroergometrie (S. 237). Georg Thieme.\n\n\nLancha Junior, A. H., de Salles Painelli, V., Saunders, B., & Artioli, G. G. (2015). Nutritional Strategies to Modulate Intracellular and Extracellular Buffering Capacity During High-Intensity Exercise. Sports Medicine, 45, 71–81. https://doi.org/10.1007/s40279-015-0397-5\n\n\nLi, L., & Caldwell, G. E. (1998). Muscle coordination in cycling: effect of surface incline and posture. Journal of applied physiology, 85 3, 927–934.\n\n\nLuhtanen, P., Rahkila, P., Rusko, H., & Viitasalo, J. T. (1987). Mechanical work and efficiency in ergometer bicycling at aerobic and anaerobic thresholds. Acta Physiologica Scandinavica, 131(3), 331–337. https://doi.org/10.1111/j.1748-1716.1987.tb08247.x\n\n\nMaassen, N. (1999). Der pH-Wert des Blutes bei körperlicher Belastung.pdf. Deutsche Zeitschrift für Sportmedizin, 50(11), 362–367.\n\n\nMacfarlane, D. J., & Wong, P. (2012). Validity, reliability and stability of the portable Cortex Metamax 3B gas analysis system. European journal of applied physiology, 112(7), 2539–2547. https://doi.org/10.1007/s00421-011-2230-7\n\n\nMader, A., Heck, H., & Hollmann, W. (1981). Leistung und Leistungsbegrenzung des menschlichen Organismus, interpretiert am Modell thermodynamisch offener Systeme. Ein Beitrag zur Diskussion biologischer Leistungsgrenzen im Hochleistungssport BT - Sport an der Grenze menschlicher Leistungsfähigkeit. In H. Rieckert (Hrsg.), Angewandte Chemie International Edition, 6(11), 951–952. (S. 69–93). Springer Berlin Heidelberg.\n\n\nMarées, H. de. (2003). Sportphysiologie (H. Heck & U. Bartmus, Hrsg.; 9. Edition, S. 799). Sportverlag Strauss.\n\n\nMargaria, R. (1976). Biomechanics and energetics of muscular exercise (S. 144). Oxford University Press.\n\n\nMargaria, R., Edwards, H. T., & Dill, D. B. (1933). The possible mechanisms of contracting and paying the oxygen debt and the role of lactic acid in muscular contraction. American Journal of Physiology, 106, 689–715. https://api.semanticscholar.org/CorpusID:30044859\n\n\nMasuda, K., Choi, J. Y., Shimojo, H., & Katsuta, S. (1999). Maintenance of myoglobin concentration in human skeletal muscle after heavy resistance training. European Journal of Applied Physiology and Occupational Physiology, 79(4), 347–352. https://doi.org/10.1007/s004210050519\n\n\nMcArdle, W., Katch, F., & Katch, V. (2009). Exercise Physiology - Nutrition, Energy and Human Performance (7. Edition, S. 1104). Wolters Kluwer.\n\n\nMicklewright, D., Alkhatib, A., & Beneke, R. (2006). Mechanically versus electro-magnetically braked cycle ergometer: Performance and energy cost of the Wingate Anaerobic Test. European Journal of Applied Physiology, 96(6), 748–751. https://doi.org/10.1007/s00421-006-0145-5\n\n\nMillet, G., Tronche, C., Fuster, N., & Candau, R. (2002). Level ground and uphill cycling efficiency in seated and standing positions. Medicine and science in sports and exercise, 34(October), 1645–1652. https://doi.org/10.1249/01.MSS.0000031482.14781.D7\n\n\nMolé, P. A., Chung, Y., Tran, T. K., Sailasuta, N., Hurd, R., & Jue, T. (1999). Myoglobin desaturation with exercise intensity in human gastrocnemius muscle. American Journal of Physiology - Regulatory Integrative and Comparative Physiology, 277(1 46-1), 173–180. https://doi.org/10.1152/ajpregu.1999.277.1.r173\n\n\nPrampero, P. E. di, Peeters, L., & Margaria, R. (1973). Alactic O2 debt and lactic acid production after exhausting exercise in man. Journal of Applied Physiology, 5.\n\n\nRobergs, R., Ghiasvand, F., & Parker, D. (2004). Biochemistry of exercise-induced metabolic acidosis. AMERICAN JOURNAL OF PHYSIOLOGY-REGULATORY INTEGRATIVE AND COMPARATIVE PHYSIOLOGY, 287(3), R502–R516. https://doi.org/10.1152/ajpregu.00114.2004\n\n\nRoberts, A. D., & Morton, A. R. (1978). Applied Physiology. 289, 281–289.\n\n\nStegemann, J. (1991). Leistungsphysiologie (4. Edition, S. 385). Georg Thieme Verlag.\n\n\nTanaka, H., Bassett, D. R., Best, S. K., & Baker, K. R. (1996). Seated Versus Standing Cycling in Competitive Road Cyclists : Uphill Climbing and Maximal Oxygen Uptake. Canadian journal of applied physiology = Revue canadienne de physiologie appliquee, 21(2), 149–154. https://doi.org/10.1139/h96-013\n\n\nTanaka, K., Nakadomo, F., & Moritani, T. (1987). Effects of standing cycling and the use of toe stirrups on maximal oxygen uptake. European Journal of Applied Physiology and Occupational Physiology, 56(6), 699–703. https://doi.org/10.1007/BF00424813\n\n\nTandon, O. P., & Tripathi, Y. (2011). Best & Taylor’s Physiological Basis of Medical Practice (13. Editio, S. 1283). Wolters Kluwer.\n\n\nTurpin, N. A., Costes, A., Moretto, P., & Watier, B. (2017). Upper limb and trunk muscle activity patterns during seated and standing cycling. Journal of Sports Sciences, 35(6), 557–564. https://doi.org/10.1080/02640414.2016.1179777\n\n\nVan Hall, G. (2010). Lactate kinetics in human tissues at rest and during exercise. Acta Physiologica, 199(4), 499–508. https://doi.org/10.1111/j.1748-1716.2010.02122.x\n\n\nVicon. (2022). Plug-in Gait Reference Guide. http://www.crcnetbase.com/doi/10.1201/b10400-14\n\n\nWahl, P., Bloch, W., & Mester, J. (2009). Moderne Betrachtungsweisen des Laktats : Laktat ein überschätztes und zugleich unter- schätztes Molekül. Schweizerische Zeitschrift für Sportmedizin und Sporttraumatologie, 57(3), 100–107.\n\n\nWhipp, J., & Wassermann, K. (1969). Efficiency of muscular work. Journal of Applied Physiology, 26(5), 644–648.\n\n\nWinter, D. A. (1979). A new definition of mechanical work done in human movement. Journal of Applied Physiology Respiratory Environmental and Exercise Physiology, 46(1), 79–83. https://doi.org/10.1152/jappl.1979.46.1.79\n\n\nWinter, D. A. (2009). Biomechanics and Motor Control of Human Movement winter (4. Edition, S. 384). Wiley.\n\n\nZuntz, N. (1901). Ueber die Bedeutung der verschiedenen Nährstoffe als Erzeuger der Muskelkraft. Pflüger, Archiv für die Gesammte Physiologie des Menschen und der Thiere, 83(10-12), 557–571. https://doi.org/10.1007/BF01746509",
    "crumbs": [
      "Quellenverzeichnis"
    ]
  }
]